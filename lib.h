#ifndef ZINNIA_LIB_LIB_H_
#define ZINNIA_LIB_LIB_H_

const char *LIB_async[] = {
  "module async\nsource \'lib/async.zn\'\nlmdl classes #0 7\nmset classes #0 7\nlmdl error #1 7\nmset"
  " error #1 7\nlmdl io #2 7\nmset io #2 7\nexit 0\nclass Future\n@then:async\nlet fn #46 14\npush #47"
  " 11\nres self #47 20\nwait #47 14\ncall #47 13\nret #47 4\n@then_async:async\nlet fn #49 20\npush"
  " #50 17\nres self #50 26\nwait #50 20\ncall #50 19\nwait #50 11\nret #50 4\nendclass\nclass"
  " Completer\nfield completed\nfield _value\n@new\npush #63 6\npnil #64 8\nres self #64 8\nfld"
  " completed #64 8\npnil #64 19\nres self #64 19\nfld _value #64 19\nres #63 6\nrfls #67 16\nset"
  " completed #67 4\nrnil #68 13\nset _value #68 4\nres self #66 2\nret #66 2\n@complete\nlet v #72"
  " 18\nset _value #73 4\nrtru #74 16\nset completed #74 4\nret #72 2\n@as_future\nres completed #79"
  " 7\nifn 4 #79 4\npush value #80 13\nres _value #80 19\ncall #80 18\nret #80 6\njmp 12 #82"
  " 11\n@$anon_82_11:async\nnblk #83 6\njmp 2 #83 14\n@$anon_83_14\nres completed #83 20\nret #83"
  " 14\npush $anon_83_14 #83 14\nclln #83 30\nnot #83 12\nifn 1 #83 6\njmp -8 #83 6\nbblk #83 6\nres"
  " _value #84 13\nret #84 6\npush $anon_82_11 #82 11\nclln #85 5\nret #82 4\nendclass\nclass"
  " RemoteClass\n@annotate\nlet cls #97 18\nres classes #98 19\ngtsh factory #98 27\npush cls #100"
  " 8\nclln module #100 12\npush #99 33\npush cat #99 8\npush cls #99 22\nclln name #99 26\npush #99"
  " 20\npush \'Remote\' #99 13\ntupl 2 #99 20\ncall #99 11\npush #99 33\ntupl 2 #99 33\ncall"
  " create_class #98 35\nset remote_class #98 4\npush #101 4\nclln get_constructor #101 17\npush #101"
  " 34\nrtru #101 67\npush #101 65\npush \'remote_object\' #101 51\ntupl 2 #101 65\ncall with_parameter"
  " #101 35\npush cls #102 4\nclln methods #102 8\npush #102 17\njmp 24 #102 23\n@$anon_102_23\nlet m"
  " #102 24\npush #103 20\nclln name #103 22\nset method_name #103 6\npush #104 9\npush \'new\' #104"
  " 25\neq #104 21\nifn 1 #104 6\nret #105 8\npush remote_class #107 6\nres method_name #107 30\ncall"
  " add_method #107 19\npush #108 10\nres \'args\' #108 27\ncall with_parameter #108 11\npush #109"
  " 10\npush cat #109 26\npush \'\\\', args)\' #112 15\npush method_name #111 14\npush \'return"
  " async.__remote_call(remote_object, \\\'\' #110 15\ntupl 3 #110 60\ncall #109 29\ncall"
  " with_statement #109 11\nret #102 23\nres $anon_102_23 #102 23\ncall each #102 18\npush remote_class"
  " #114 4\nres \'remote\' #114 29\ncall add_method #114 17\npush #115 8\nres \'return remote_object\'"
  " #115 25\ncall with_statement #115 9\npush remote_class #116 11\nclln build #116 24\nret #116"
  " 4\nendclass\n@sleep\nlet duration_sec #5 15\npush __sleep #6 2\nres duration_sec #6 10\ncall #6"
  " 9\nret #5 0\n@create_process\nif 2 #10 23\npush Object #10 23\nclln #10 23\npush #10 23\npeek #10"
  " 25\nget fn #10 25\nlet fn #10 25\npeek #10 23\nget args #10 29\nif 1 #10 29\nrnil #10 34\nlet args"
  " #10 29\npeek #10 23\nget is_remote #10 40\nif 1 #10 40\nrfls #10 50\nlet is_remote #10 40\npush"
  " __create_process #11 2\npush is_remote #11 29\npush args #11 23\npush fn #11 19\ntupl 3 #11"
  " 21\ncall #11 18\nret #10 0\n@create_remote\npush #33 22\ntlen #33 23\neq -1 #33 23\nifn 5 #33"
  " 23\nres #33 23\nlet cls #33 23\nrnil #33 33\nlet args #33 28\njmp 11 #33 23\npeek #33 23\ntget 0"
  " #33 22\nlet cls #33 23\npeek #33 22\ntgte 2 #33 28\nifn 3 #33 28\nres #33 28\ntget 1 #33 22\njmp 1"
  " #33 28\nrnil #33 33\nlet args #33 28\npush _get_remote_class #34 17\nres cls #34 35\ncall #34"
  " 34\nset remote_class #34 2\npush create_process #35 12\npush Object #36 34\nclln #36 34\npush #36"
  " 34\njmp 19 #36 10\n@$anon_36_10\npush #36 10\ntlen #36 11\neq -1 #36 11\nifn 5 #36 11\nres #36"
  " 11\nlet cls #36 11\nrnil #36 16\nlet args #36 16\njmp 6 #36 11\npeek #36 11\ntget 0 #36 10\nlet cls"
  " #36 11\nres #36 10\ntget 1 #36 10\nlet args #36 16\npush cls #36 25\nres args #36 29\ncall #36"
  " 28\nret #36 10\npush $anon_36_10 #36 10\npeek 1 #36 8\nfld fn #36 6\npush args #37 18\npush cls #37"
  " 13\ntupl 2 #37 16\npush #37 10\npeek 1 #37 10\nfld args #37 6\nrtru #38 17\npush #38 15\npeek 1 #38"
  " 15\nfld is_remote #38 6\nres #36 34\ncall #35 26\nset process #35 2\npush remote_class #39 9\npush"
  " process #39 28\nclln start #39 36\nwait #39 22\ncall #39 21\nret #39 2\n@all:async\nlet futures #90"
  " 13\npush #91 2\njmp 3 #91 14\n@$anon_91_14\nlet f #91 15\nwait #91 21\nret #91 14\nres $anon_91_14"
  " #91 14\ncall map #91 10\nret #90 0\n@_get_remote_class\nlet cls #120 27\npush #121 11\nclln module"
  " #121 15\npush #121 23\npush \'Remote\' #121 30\npush cls #121 40\nclln name #121 44\npush #121"
  " 38\nadd #121 38\ncall $get #121 24\nset remote #121 2\nnot #122 5\nifn 11 #122 2\npush error #123"
  " 10\npush \'Could not find remote class for \' #123 23\npush cls #123 59\nclln name #123 63\npush"
  " #123 57\nadd #123 57\npush #123 70\npush \'.\' #123 73\nadd #123 70\ncall Error #123 16\nrais #123"
  " 4\nres remote #125 9\nret #125 2\nbody\n\'import classes\\r\\n\'\n\'import error\\r\\n\'\n\'import"
  " io\\r\\n\'\n\'\\r\\n\'\n\'; Returns a future that completes in at least [duration_sec]"
  " seconds.\\r\\n\'\n\'function sleep(duration_sec) {\\r\\n\'\n\' "
  " __sleep(duration_sec)\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Returns a newly-spawned process that"
  " executes [fn] with arguments [args].\\r\\n\'\n\'function create_process({fn, args=None,"
  " is_remote=False}) {\\r\\n\'\n\'  __create_process(fn, args,"
  " is_remote)\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Returns a remote instance of [cls] with arguments"
  " [args] that can control\\r\\n\'\n\'; the concrete instance of [cls] in a newly-spawned"
  " process.\\r\\n\'\n\';\\r\\n\'\n\'; The remote class returned controls the actual class in a"
  " separate process.\\r\\n\'\n\'; Calls to the remote class return a future to the result of the"
  " execution of\\r\\n\'\n\'; work that is executed on the concrete class in the spawned"
  " process.\\r\\n\'\n\';\\r\\n\'\n\'; Throws an error if [cls] is not annotated with"
  " [RemoteClass].\\r\\n\'\n\'; \\r\\n\'\n\'; Example:\\r\\n\'\n\'; ```\\r\\n\'\n\';"
  " @async.RemoteClass\\r\\n\'\n\'; class Test {\\r\\n\'\n\';   new(field n) {}\\r\\n\'\n\';   method"
  " mult_n(num) num * n\\r\\n\'\n\'; }\\r\\n\'\n\'; remote_instance = async.create_remote(Test,"
  " 5)\\r\\n\'\n\'; io.println(await remote_instance.mult_n(6)) /* Prints \\\'30\\\\n\\\'"
  " */\\r\\n\'\n\'; ``` \\r\\n\'\n\'function create_remote(cls, args=None) {\\r\\n\'\n\'  remote_class"
  " = _get_remote_class(cls)\\r\\n\'\n\'  process = create_process(\\r\\n\'\n\'      fn: (cls, args) ->"
  " cls(args),\\r\\n\'\n\'      args: (cls, args),\\r\\n\'\n\'      is_remote: True)\\r\\n\'\n\' "
  " return remote_class(await process.start())\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Represents the"
  " state of an asynchronous piece of work.\\r\\n\'\n\'class Future {\\r\\n\'\n\'  ; Returns a future"
  " to the value of the result of this future with [fn]\\r\\n\'\n\'  ; applied.\\r\\n\'\n\'  method"
  " then(fn) async {\\r\\n\'\n\'    return fn(await self)\\r\\n\'\n\'  }\\r\\n\'\n\'  method"
  " then_async(fn) async {\\r\\n\'\n\'    return await fn(await self)\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Allows for the manual completion of a"
  " future.\\r\\n\'\n\';\\r\\n\'\n\'; Example:\\r\\n\'\n\'; ```\\r\\n\'\n\'; do_something = (c) async"
  " -> c.complete(\\\'Hello\\\')\\r\\n\'\n\'; completer = async.Completer()\\r\\n\'\n\';"
  " do_something(completer)\\r\\n\'\n\'; io.println(await completer.as_future())\\r\\n\'\n\';"
  " ```\\r\\n\'\n\'class Completer {\\r\\n\'\n\'  field completed, _value\\r\\n\'\n\'\\r\\n\'\n\' "
  " new() {\\r\\n\'\n\'    completed = False\\r\\n\'\n\'    _value = None\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  ; Completes the future with the value [v].\\r\\n\'\n\'  method"
  " complete(v) {\\r\\n\'\n\'    _value = v\\r\\n\'\n\'    completed = True\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  ; Returns a future to the completed value.\\r\\n\'\n\'  method"
  " as_future() {\\r\\n\'\n\'    if completed {\\r\\n\'\n\'      return value(_value)\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    return () async {\\r\\n\'\n\'      while ~(() -> completed)() {}\\r\\n\'\n\'     "
  " return _value\\r\\n\'\n\'    }()\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Returns a"
  " future that completes when all futures in [futures] complete.\\r\\n\'\n\'function all(futures)"
  " async {\\r\\n\'\n\'  futures.map((f) -> await f)\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Generates a"
  " new class named [\\\'Remote\\\' + cls.name()] that allows comunication\\r\\n\'\n\'; from parent to"
  " child processes.\\r\\n\'\n\'class RemoteClass {\\r\\n\'\n\'  method annotate(cls) {\\r\\n\'\n\'   "
  " remote_class = classes.factory.create_class(\\r\\n\'\n\'        cat(\\\'Remote\\\',"
  " cls.name()),\\r\\n\'\n\'        cls.module())\\r\\n\'\n\'   "
  " remote_class.get_constructor().with_parameter(\\\'remote_object\\\', True)\\r\\n\'\n\'   "
  " cls.methods().each((m) {\\r\\n\'\n\'      method_name = m.name()\\r\\n\'\n\'      if method_name =="
  " \\\'new\\\' {\\r\\n\'\n\'        return\\r\\n\'\n\'      }\\r\\n\'\n\'     "
  " remote_class.add_method(method_name)\\r\\n\'\n\'          .with_parameter(\\\'args\\\')\\r\\n\'\n\'"
  "          .with_statement(cat(\\r\\n\'\n\'              \\\'return"
  " async.__remote_call(remote_object, \\\\\\\'\\\',\\r\\n\'\n\'              method_name,\\r\\n\'\n\' "
  "             \\\'\\\\\\\', args)\\\'))\\r\\n\'\n\'    })\\r\\n\'\n\'   "
  " remote_class.add_method(\\\'remote\\\')\\r\\n\'\n\'        .with_statement(\\\'return"
  " remote_object\\\')\\r\\n\'\n\'    return remote_class.build()\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function _get_remote_class(cls) {\\r\\n\'\n\'  remote ="
  " cls.module().$get(\\\'Remote\\\' + cls.name())\\r\\n\'\n\'  if ~remote {\\r\\n\'\n\'    raise"
  " error.Error(\\\'Could not find remote class for \\\' + cls.name() + \\\'.\\\')\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  return remote\\r\\n\'\n\'}\\r\\n\'\n"};

const char *LIB_build[] = {
  "module build\nsource \'lib/build.zn\'\nlmdl classes #0 7\nmset classes #0 7\nlmdl io #1 7\nmset io"
  " #1 7\nexit 0\nclass WithBuilder\nfield _builder_class_name\n@new\npush #3 6\npnil #4 12\nres self"
  " #4 12\nfld _builder_class_name #4 12\npeek #3 6\ntgte 1 #4 12\nif 2 #4 12\nrnil #4 32\njmp 1 #4"
  " 12\nres #4 12\ntget 0 #4 12\npush #4 12\nres self #4 12\nfld _builder_class_name #4 12\nres self #4"
  " 2\nret #4 2\n@annotate\nlet cls #5 18\nres _builder_class_name #6 8\nnot #6 7\nifn 8 #6 4\npush cat"
  " #7 28\npush \'Builder\' #7 45\npush cls #7 32\nclln name #7 36\npush #7 42\ntupl 2 #7 42\ncall #7"
  " 31\nset _builder_class_name #7 6\nres classes #9 20\ngtsh factory #9 28\npush cls #9 70\nclln"
  " module #9 74\npush #9 68\npush _builder_class_name #9 49\ntupl 2 #9 68\ncall create_class #9"
  " 36\nset builder_class #9 4\npush #10 19\nres \'build\' #10 45\ncall add_method #10 33\npush #11"
  " 8\npush cat #11 24\npush \'()\' #11 49\npush cls #11 36\nclln name #11 40\npush #11 34\npush \'o ="
  " \' #11 29\ntupl 3 #11 34\ncall #11 27\ncall with_statement #11 9\nset build_method #10 4\npush cls"
  " #12 4\nclln fields #12 8\npush #12 16\njmp 33 #12 22\n@$anon_12_22\nlet f #12 23\npush"
  " builder_class #13 6\npush cat #13 31\npush f #13 43\npush \'set_\' #13 36\ntupl 2 #13 41\ncall #13"
  " 34\ncall add_method #13 20\npush #14 10\nres f #14 26\ncall with_parameter #14 11\npush #15"
  " 10\npush cat #15 26\npush f #15 50\npush \' = \' #15 44\npush f #15 40\npush \'self._\' #15"
  " 31\ntupl 4 #15 38\ncall #15 29\ncall with_statement #15 11\npush #16 10\nres \'return self\' #16"
  " 27\ncall with_statement #16 11\npush build_method #17 6\npush cat #17 34\npush f #17 60\npush \' ="
  " self._\' #17 48\npush f #17 44\npush \'o.\' #17 39\ntupl 4 #17 42\ncall #17 37\ncall with_statement"
  " #17 19\nret #12 22\nres $anon_12_22 #12 22\ncall each #12 17\npush build_method #19 4\nres \'return"
  " o\' #19 33\ncall with_statement #19 17\npush builder_class #21 20\nclln build #21 34\nset"
  " builder_class #21 4\npush cls #22 4\nclln module #22 8\npush #22 16\njmp 3 #22"
  " 54\n@$anon_22_54\npush builder_class #22 60\nclln #22 73\nret #22 54\npush $anon_22_54 #22 54\npush"
  " cat #22 22\npush cls #22 41\nclln name #22 45\npush #22 39\npush \'builder_of_\' #22 27\ntupl 2 #22"
  " 39\ncall #22 25\npush #22 52\ntupl 2 #22 52\ncall $set #22 17\nret #5 2\nendclass\nbody\n\'import"
  " classes\\r\\n\'\n\'import io\\r\\n\'\n\'\\r\\n\'\n\'class WithBuilder {\\r\\n\'\n\'  new(field"
  " _builder_class_name=None) {}\\r\\n\'\n\'  method annotate(cls) {\\r\\n\'\n\'    if"
  " ~_builder_class_name {\\r\\n\'\n\'      _builder_class_name = cat(cls.name(),"
  " \\\'Builder\\\')\\r\\n\'\n\'    }\\r\\n\'\n\'    builder_class ="
  " classes.factory.create_class(_builder_class_name, cls.module())\\r\\n\'\n\'    build_method ="
  " builder_class.add_method(\\\'build\\\')\\r\\n\'\n\'        .with_statement(cat(\\\'o = \\\',"
  " cls.name(), \\\'()\\\'))\\r\\n\'\n\'    cls.fields().each((f) {\\r\\n\'\n\'     "
  " builder_class.add_method(cat(\\\'set_\\\', f))\\r\\n\'\n\'          .with_parameter(f)\\r\\n\'\n\' "
  "         .with_statement(cat(\\\'self._\\\', f, \\\' = \\\', f))\\r\\n\'\n\'         "
  " .with_statement(\\\'return self\\\')\\r\\n\'\n\'      build_method.with_statement(cat(\\\'o.\\\',"
  " f, \\\' = self._\\\', f))\\r\\n\'\n\'    })\\r\\n\'\n\'    build_method.with_statement(\\\'return"
  " o\\\')\\r\\n\'\n\'    ;io.println(builder_class.to_s())\\r\\n\'\n\'    builder_class ="
  " builder_class.build()\\r\\n\'\n\'    cls.module().$set(cat(\\\'builder_of_\\\', cls.name()), () ->"
  " builder_class())\\r\\n\'\n\'\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n"};

const char *LIB_builtin[] = {
  "module builtin\nsource \'lib/builtin.zn\'\nlmdl builtin_ext #0 7\nmset builtin_ext #0 7\nlmdl error"
  " #1 7\nmset error #1 7\nlmdl io #2 7\nmset io #2 7\nlmdl struct #3 7\nmset struct #3 7\nres"
  " builtin_ext #355 16\ngtsh Iterator #355 28\nres self #355 0\nfld Iterator #355 5\nres builtin_ext"
  " #356 21\ngtsh IndexIterator #356 33\nres self #356 0\nfld IndexIterator #356 5\nres builtin_ext"
  " #357 18\ngtsh KVIterator #357 30\nres self #357 0\nfld KVIterator #357 5\nres builtin_ext #358"
  " 13\ngtsh range #358 25\nres self #358 0\nfld range #358 5\nres builtin_ext #359 15\ngtsh memoize"
  " #359 27\nres self #359 0\nfld memoize #359 5\nres builtin_ext #360 12\ngtsh sort #360 24\nres self"
  " #360 0\nfld sort #360 5\nexit 0\nclass Object\n@to_s\npush cat #60 11\npush self #64 8\nclln class"
  " #64 13\npush #64 20\nclln name #64 21\npush #61 22\npush \'.\' #63 9\npush self #62 8\nclln class"
  " #62 13\npush #62 20\nclln module #62 21\npush #62 29\nclln name #62 30\npush #61 22\npush"
  " \'Instance of \' #61 9\ntupl 4 #61 22\ncall #60 14\nret #60 4\nendclass\nclass Module\n@to_s\npush"
  " cat #70 11\npush \')\' #70 35\npush name #70 26\nclln #70 30\npush #70 24\npush \'Module(\' #70"
  " 16\ntupl 3 #70 24\ncall #70 14\nret #70 4\nendclass\nclass Class\nfield annotations\n@new\npush #74"
  " 6\npnil #75 8\nres self #75 8\nfld annotations #75 8\nres #74 6\nres self #74 6\nret #74"
  " 6\n@to_s\npush annotations #77 7\nclln len #77 19\ngt 0 #77 27\nifn 40 #77 4\npush \'class \' #78"
  " 19\npush name #78 29\nclln #78 33\npush #78 27\nadd #78 27\nset cls_name #78 6\nnblk #79 6\npush"
  " annotations #79 20\ncall iter #79 17\npush #79 17\ndup #79 17\ncall has_next #79 17\nifn 22 #79"
  " 17\ndup #79 6\ncall next #79 17\npush #79 17\ndup #79 17\naidx 0 #79 17\nset _ #79 11\naidx 1 #79"
  " 17\nset a #79 14\npush cls_name #80 19\npush \' @\' #80 31\nadd #80 28\npush #80 35\npush str #80"
  " 37\npush a #80 41\nclln class #80 43\npush #80 50\nclln name #80 51\ncall #80 40\npush #80 35\nadd"
  " #80 35\nset cls_name #80 8\njmp -25 #79 17\nres #79 17\nbblk #79 6\nres cls_name #82 13\nret #82"
  " 6\njmp 8 #77 4\npush cat #84 13\npush name #84 27\nclln #84 31\npush #84 25\npush \'class \' #84"
  " 18\ntupl 2 #84 25\ncall #84 16\nret #84 6\nret #76 2\n@add_annotation\nlet annot #87 24\npush"
  " annotations #88 4\nres annot #88 23\ncall append #88 16\nret #87 2\n@all_annotations\nres"
  " annotations #91 11\nret #91 4\n@all_methods\npush methods #94 12\nclln #94 19\nset meths #94"
  " 4\npush super #95 10\nclln #95 15\nset sup #95 4\nnblk #96 4\nres sup #96 10\nifn 15 #96 4\npush"
  " sup #97 6\nclln methods #97 10\npush #97 19\njmp 5 #97 25\n@$anon_97_25\nlet m #97 25\npush meths"
  " #97 30\nres m #97 43\ncall append #97 36\nret #97 25\nres $anon_97_25 #97 25\ncall each #97"
  " 20\npush sup #98 12\nclln super #98 16\nset sup #98 6\njmp -17 #96 4\nbblk #96 4\nres meths #100"
  " 11\nret #100 4\nendclass\nclass String\n@to_s\nres self #106 11\nret #106 4\n@join\nlet strs #108"
  " 14\nres \'\' #109 14\nset result #109 4\npush strs #110 7\nclln len #110 12\neq 0 #110 21\nifn 2"
  " #110 4\nres result #111 13\nret #111 6\npush result #113 4\npush str #113 18\npush strs #113"
  " 22\naidx 0 #113 27\ncall #113 21\ncall extend #113 11\nnblk #114 4\nres 1 #114 10\nset i #114"
  " 8\npush i #114 13\npush strs #114 15\nclln len #114 20\npush #114 14\nlt #114 14\nifn 11 #114"
  " 4\npush result #115 6\nres self #115 20\ncall extend #115 13\npush result #116 6\npush str #116"
  " 20\npush strs #116 24\naidx i #116 29\ncall #116 23\ncall extend #116 13\ninc i #114 29\njmp -17"
  " #114 4\nbblk #114 4\nres result #118 11\nret #118 4\n@substr\npush #120 15\ntlen #120 16\neq -1"
  " #120 16\nifn 5 #120 16\nres #120 16\nlet start_index #120 16\nrnil #120 39\nlet num_chars #120"
  " 29\njmp 11 #120 16\npeek #120 16\ntget 0 #120 15\nlet start_index #120 16\npeek #120 15\ntgte 2"
  " #120 29\nifn 3 #120 29\nres #120 29\ntget 1 #120 15\njmp 1 #120 29\nrnil #120 39\nlet num_chars"
  " #120 29\nres num_chars #121 8\nnot #121 7\nifn 4 #121 4\npush len #122 18\nclln #122 21\nsub"
  " start_index #122 26\nset num_chars #122 6\nres start_index #124 16\nadd num_chars #124 30\nset"
  " end_index #124 4\nres start_index #125 7\nlte end_index #125 22\nifn 6 #125 4\npush __substr #126"
  " 13\npush end_index #126 35\npush start_index #126 22\ntupl 2 #126 33\ncall #126 21\nret #126"
  " 6\npush __substr #128 11\npush start_index #128 31\npush end_index #128 20\ntupl 2 #128 29\ncall"
  " #128 19\nret #128 4\n@find\npush #130 13\ntlen #130 14\neq -1 #130 14\nifn 5 #130 14\nres #130"
  " 14\nlet sub #130 14\nres 0 #130 25\nlet index #130 19\njmp 11 #130 14\npeek #130 14\ntget 0 #130"
  " 13\nlet sub #130 14\npeek #130 13\ntgte 2 #130 19\nifn 3 #130 19\nres #130 19\ntget 1 #130 13\njmp"
  " 1 #130 19\nres 0 #130 25\nlet index #130 19\npush __find #131 4\npush index #131 16\npush sub #131"
  " 11\ntupl 2 #131 14\ncall #131 10\nret #130 2\n@find_all\npush #133 17\ntlen #133 18\neq -1 #133"
  " 18\nifn 5 #133 18\nres #133 18\nlet sub #133 18\nres 0 #133 29\nlet index #133 23\njmp 11 #133"
  " 18\npeek #133 18\ntget 0 #133 17\nlet sub #133 18\npeek #133 17\ntgte 2 #133 23\nifn 3 #133 23\nres"
  " #133 23\ntget 1 #133 17\njmp 1 #133 23\nres 0 #133 29\nlet index #133 23\npush __find_all #134"
  " 4\npush index #134 20\npush sub #134 15\ntupl 2 #134 18\ncall #134 14\nret #133 2\n@__in__\nlet sub"
  " #136 16\npush find #137 4\nres sub #137 9\ncall #137 8\npush #137 14\nrnil #137 17\npush #137"
  " 14\nneq #137 14\nret #136 2\n@starts_with\nlet other #139 21\npush #140 9\npush String #140 18\nis"
  " #140 15\nnot #140 7\nifn 2 #140 4\nrfls #141 13\nret #141 6\npush __starts_with #143 11\nres other"
  " #143 25\ncall #143 24\nret #143 4\n@ends_with\nlet other #145 19\npush #146 9\npush String #146"
  " 18\nis #146 15\nnot #146 7\nifn 2 #146 4\nrfls #147 13\nret #147 6\npush __ends_with #149 11\nres"
  " other #149 23\ncall #149 22\nret #149 4\nendclass\nclass Tuple\n@__eq__\nlet other #155 12\npush"
  " #156 10\npush Tuple #156 19\nis #156 16\nnot #156 8\nif 7 #156 26\npush len #156 29\nclln #156"
  " 32\npush #156 35\npush other #156 38\nclln len #156 44\npush #156 35\nneq #156 35\nifn 2 #156"
  " 4\nrfls #156 58\nret #156 51\nnblk #157 4\nres 0 #157 10\nset i #157 8\npush i #157 13\npush len"
  " #157 15\nclln #157 18\npush #157 14\nlt #157 14\nifn 14 #157 4\npush self #158 10\naidx i #158"
  " 15\npush #158 18\npush other #158 21\naidx i #158 27\npush #158 18\nneq #158 18\nifn 2 #158 6\nrfls"
  " #159 15\nret #159 8\nres i #157 24\nadd 1 #157 26\nset i #157 22\njmp -20 #157 4\nbblk #157 4\nrtru"
  " #162 11\nret #162 4\n@__neq__\nlet other #164 12\npush len #165 8\nclln #165 11\npush #165 14\npush"
  " other #165 17\nclln len #165 23\npush #165 14\nneq #165 14\nifn 2 #165 4\nrtru #165 37\nret #165"
  " 30\nnblk #166 4\nres 0 #166 10\nset i #166 8\npush i #166 13\npush len #166 15\nclln #166 18\npush"
  " #166 14\nlt #166 14\nifn 14 #166 4\npush self #167 10\naidx i #167 15\npush #167 18\npush other"
  " #167 21\naidx i #167 27\npush #167 18\nneq #167 18\nifn 2 #167 6\nrtru #168 15\nret #168 8\nres i"
  " #166 24\nadd 1 #166 26\nset i #166 22\njmp -20 #166 4\nbblk #166 4\nrfls #171 11\nret #171"
  " 4\n@to_s\nres \'(\' #174 14\nset result #174 4\npush #175 4\npush _maybe_wrap_in_quotes #175"
  " 18\npush self #175 40\naidx 0 #175 45\ncall #175 39\ncall extend #175 11\nnblk #176 4\nres 1 #176"
  " 12\nset i #176 8\npush i #176 15\npush len #176 19\nclln #176 22\npush #176 17\nlt #176 17\nifn 11"
  " #176 4\npush result #177 6\nres \', \' #177 21\ncall extend #177 13\npush #178 10\npush"
  " _maybe_wrap_in_quotes #178 18\npush self #178 40\naidx i #178 45\ncall #178 39\ncall extend #178"
  " 11\ninc i #176 30\njmp -17 #176 4\nbblk #176 4\npush result #180 4\nres \')\' #180 19\ncall extend"
  " #180 11\nres result #181 11\nret #181 4\n@iter\npush IndexIterator #184 11\npush len #184 34\nclln"
  " #184 37\npush #184 29\npush 0 #184 31\npush self #184 25\ntupl 3 #184 29\ncall #184 24\nret #184"
  " 4\n@_maybe_wrap_in_quotes\nlet elt #186 31\npush #187 8\npush String #187 15\nis #187 12\nifn 8"
  " #187 4\npush \'\\\'\' #188 14\nres elt #188 25\ncall extend #188 18\npush #188 29\nres \'\\\'\'"
  " #188 38\ncall extend #188 30\nret #188 6\njmp 4 #187 4\npush str #190 13\nres elt #190 17\ncall"
  " #190 16\nret #190 6\nret #186 2\nendclass\nclass Array\n@__eq__\nlet other #196 12\npush #197"
  " 10\npush Array #197 19\nis #197 16\nnot #197 8\nif 7 #197 26\npush len #197 29\nclln #197 32\npush"
  " #197 35\npush other #197 38\nclln len #197 44\npush #197 35\nneq #197 35\nifn 2 #197 4\nrfls #197"
  " 58\nret #197 51\nnblk #198 4\nres 0 #198 10\nset i #198 8\npush i #198 13\npush len #198 15\nclln"
  " #198 18\npush #198 14\nlt #198 14\nifn 14 #198 4\npush self #199 10\naidx i #199 15\npush #199"
  " 18\npush other #199 21\naidx i #199 27\npush #199 18\nneq #199 18\nifn 2 #199 6\nrfls #200 15\nret"
  " #200 8\nres i #198 24\nadd 1 #198 26\nset i #198 22\njmp -20 #198 4\nbblk #198 4\nrtru #203 11\nret"
  " #203 4\n@__neq__\nlet other #205 12\npush len #206 8\nclln #206 11\npush #206 14\npush other #206"
  " 17\nclln len #206 23\npush #206 14\nneq #206 14\nifn 2 #206 4\nrtru #206 37\nret #206 30\nnblk #207"
  " 4\nres 0 #207 10\nset i #207 8\npush i #207 13\npush len #207 15\nclln #207 18\npush #207 14\nlt"
  " #207 14\nifn 14 #207 4\npush self #208 9\naidx i #208 14\npush #208 17\npush other #208 20\naidx i"
  " #208 26\npush #208 17\nneq #208 17\nifn 2 #208 6\nrtru #209 15\nret #209 8\nres i #207 24\nadd 1"
  " #207 26\nset i #207 22\njmp -20 #207 4\nbblk #207 4\nrfls #212 11\nret #212 4\n@remove\nlet i #214"
  " 16\npush Int #215 8\nres i #215 12\ncall #215 11\nset i #215 4\npush #216 7\npush len #216 12\nclln"
  " #216 15\npush #216 9\ngte #216 9\nif 3 #216 18\npush i #216 21\npush 0 #216 25\nlt #216 23\nifn 12"
  " #216 4\npush error #217 12\npush cat #217 24\npush len #217 79\nclln #217 82\npush #217 54\npush"
  " \', Array length: \' #217 60\npush i #217 56\npush \'Index is out of bounds: \' #217 29\ntupl 4"
  " #217 54\ncall #217 27\ncall Error #217 18\nrais #217 6\npush __remove #219 11\nres i #219 20\ncall"
  " #219 19\nret #219 4\n@remove_value\nlet v #221 22\nnblk #222 4\nres 0 #222 10\nset i #222 8\npush i"
  " #222 13\npush len #222 15\nclln #222 18\npush #222 14\nlt #222 14\nifn 13 #222 4\npush self #223"
  " 9\naidx i #223 14\neq v #223 20\nifn 5 #223 6\npush remove #224 8\nres i #224 15\ncall #224"
  " 14\nrtru #225 15\nret #225 8\nres i #222 24\nadd 1 #222 26\nset i #222 22\njmp -19 #222 4\nbblk"
  " #222 4\nrfls #228 11\nret #228 4\n@to_s\nres \'[\' #231 14\nset result #231 4\npush #232 4\npush"
  " \', \' #232 19\npush map #232 28\njmp 18 #232 32\n@$anon_232_32\nlet elt #232 33\npush #233"
  " 10\npush String #233 17\nis #233 14\nifn 8 #233 6\npush \'\\\'\' #234 16\nres elt #234 27\ncall"
  " extend #234 20\npush #234 31\nres \'\\\'\' #234 40\ncall extend #234 32\nret #234 8\njmp 4 #233"
  " 6\npush str #236 15\nres elt #236 19\ncall #236 18\nret #236 8\nret #232 32\nres $anon_232_32 #232"
  " 32\ncall #232 31\ncall join #232 23\ncall extend #232 11\npush result #239 11\nres \']\' #239"
  " 26\ncall extend #239 18\nret #239 4\n@each\nlet fn #241 14\nnblk #242 4\nres 0 #242 10\nset i #242"
  " 8\npush i #242 13\npush len #242 15\nclln #242 18\npush #242 14\nlt #242 14\nifn 6 #242 4\npush fn"
  " #243 6\npush self #243 9\naidx i #243 14\ncall #243 8\ninc i #242 24\njmp -12 #242 4\nbblk #242"
  " 4\nret #241 2\n@map\nlet fn #246 13\nanew #247 13\nset result #247 4\npush len #248 7\nclln #248"
  " 10\neq 0 #248 16\nifn 2 #248 4\nres result #249 13\nret #249 6\nrnil #251 22\npush #251 20\npush"
  " result #251 4\npush len #251 11\nclln #251 14\nsub 1 #251 17\naset #251 10\nnblk #252 4\nres 0 #252"
  " 10\nset i #252 8\npush i #252 13\npush len #252 15\nclln #252 18\npush #252 14\nlt #252 14\nifn 10"
  " #252 4\npush fn #253 18\npush self #253 21\naidx i #253 26\ncall #253 20\npush #253 16\npush result"
  " #253 6\nres i #253 13\naset #253 12\ninc i #252 24\njmp -16 #252 4\nbblk #252 4\nres result #255"
  " 11\nret #255 4\n@where\nlet filter_fn #257 15\nanew #258 13\nset result #258 4\nnblk #259 4\nres 0"
  " #259 10\nset i #259 8\npush i #259 13\npush len #259 15\nclln #259 18\npush #259 14\nlt #259"
  " 14\nifn 13 #259 4\npush filter_fn #260 9\npush self #260 19\naidx i #260 24\ncall #260 18\nifn 4"
  " #260 6\npush result #261 8\npush self #261 22\naidx i #261 27\ncall append #261 15\nres i #259"
  " 24\nadd 1 #259 26\nset i #259 22\njmp -19 #259 4\nbblk #259 4\nres result #264 11\nret #264"
  " 4\n@has\nlet has_fn #266 13\nnblk #267 4\nres 0 #267 10\nset i #267 8\npush i #267 13\npush len"
  " #267 15\nclln #267 18\npush #267 14\nlt #267 14\nifn 11 #267 4\npush has_fn #268 9\npush self #268"
  " 16\naidx i #268 21\ncall #268 15\nifn 2 #268 6\nrtru #269 15\nret #269 8\nres i #267 24\nadd 1 #267"
  " 26\nset i #267 22\njmp -17 #267 4\nbblk #267 4\nrfls #272 11\nret #272 4\n@collect\npush #274"
  " 16\ntlen #274 17\neq -1 #274 17\nifn 5 #274 17\nres #274 17\nlet f #274 17\nrnil #274 22\nlet s"
  " #274 20\njmp 11 #274 17\npeek #274 17\ntget 0 #274 16\nlet f #274 17\npeek #274 16\ntgte 2 #274"
  " 20\nifn 3 #274 20\nres #274 20\ntget 1 #274 16\njmp 1 #274 20\nrnil #274 22\nlet s #274 20\npush"
  " len #275 7\nclln #275 10\neq 0 #275 16\nifn 10 #275 4\npush s #276 9\npush Function #276 14\nis"
  " #276 11\nifn 4 #276 6\npush s #277 15\nclln #277 16\nret #277 8\njmp 2 #276 6\nres s #279 15\nret"
  " #279 8\nres 0 #282 8\nset i #282 4\nrnil #283 8\nset a #283 4\nres s #284 7\nifn 11 #284 4\npush s"
  " #285 9\npush Function #285 14\nis #285 11\nifn 4 #285 6\npush s #286 12\nclln #286 13\nset a #286"
  " 8\njmp 2 #285 6\nres s #288 12\nset a #288 8\njmp 5 #284 4\npush self #291 10\naidx 0 #291 15\nset"
  " a #291 6\nres 1 #292 10\nset i #292 6\nnblk #294 4\nres _ #294 8\npush i #294 11\npush len #294"
  " 13\nclln #294 16\npush #294 12\nlt #294 12\nifn 10 #294 4\npush f #295 10\npush self #295 15\naidx"
  " i #295 20\npush #295 13\npush a #295 12\ntupl 2 #295 13\ncall #295 11\nset a #295 6\ninc i #294"
  " 22\njmp -16 #294 4\nbblk #294 4\nres a #297 11\nret #297 4\n@iter\npush IndexIterator #300 11\nres"
  " self #300 25\ncall #300 24\nret #300 4\nendclass\nclass Function\n@to_s\nrnil #306 10\nset res #306"
  " 4\npush self #307 7\nclln is_method #307 12\nifn 21 #307 4\npush cat #308 12\npush self #312"
  " 15\nclln name #312 20\npush #309 19\npush \'.\' #312 11\npush self #311 15\nclln parent_class #311"
  " 20\npush #311 34\nclln name #311 35\npush #309 19\npush \'.\' #311 11\npush self #310 10\nclln"
  " module #310 15\npush #310 23\nclln name #310 24\npush #309 19\npush \'Method(\' #309 11\ntupl 6"
  " #309 19\ncall #308 15\nset res #308 6\njmp 14 #307 4\npush cat #314 12\npush self #314 56\nclln"
  " name #314 61\npush #314 27\npush \'.\' #314 52\npush self #314 29\nclln module #314 34\npush #314"
  " 42\nclln name #314 43\npush #314 27\npush \'Function(\' #314 17\ntupl 4 #314 27\ncall #314 15\nset"
  " res #314 6\nres self #316 7\nget annotations #316 12\nifn 6 #316 24\nres self #316 28\ngtsh"
  " annotations #316 33\nclln len #316 45\npush #316 51\npush 0 #316 53\ngt #316 51\nifn 9 #316 4\npush"
  " res #317 6\nres \', annotations=\' #317 18\ncall extend #317 10\npush res #318 6\npush str #318"
  " 17\nres self #318 21\nget annotations #318 26\ncall #318 20\ncall extend #318 10\npush res #320"
  " 4\nres \')\' #320 16\ncall extend #320 8\nres res #321 4\nret #305 2\n@add_annotation\nlet annot"
  " #323 24\nres self #324 4\ngtsh annotations #324 9\nres annot #324 28\ncall append #324 21\nret #323"
  " 2\nendclass\nclass FunctionRef\n@to_s\npush cat #330 4\npush \')\' #330 64\npush self #330 50\nclln"
  " func #330 55\npush #330 26\npush \',func=\' #330 41\npush self #330 28\nclln obj #330 33\npush #330"
  " 26\npush \'FunctionRef(obj=\' #330 9\ntupl 5 #330 26\ncall #330 7\nret #329 2\nendclass\nclass"
  " Range\n@to_s\npush cat #336 4\npush end #336 34\nclln #336 37\npush #336 15\npush \':\' #336"
  " 30\npush inc #336 22\nclln #336 25\npush #336 15\npush \':\' #336 18\npush start #336 8\nclln #336"
  " 13\npush #336 15\ntupl 5 #336 15\ncall #336 7\nret #335 2\n@__in__\nlet n #338 16\npush #339"
  " 5\npush end #339 10\nclln #339 13\npush #339 7\nlte #339 7\nifn 21 #339 17\npush n #339 22\npush"
  " start #339 27\nclln #339 32\npush #339 24\ngte #339 24\nifn 15 #339 36\npush n #339 41\npush inc"
  " #339 45\nclln #339 48\npush #339 43\nmod #339 43\npush #339 51\npush start #339 54\nclln #339"
  " 59\npush #339 62\npush inc #339 64\nclln #339 67\npush #339 62\nmod #339 62\npush #339 51\neq #339"
  " 51\nret #338 2\n@__index__\nlet i #341 12\nlt 0 #342 12\nifn 8 #342 4\npush error #342 21\npush cat"
  " #342 33\npush i #342 72\npush \'Range index out of bounds. was \' #342 38\ntupl 2 #342 70\ncall"
  " #342 36\ncall Error #342 27\nrais #342 15\npush start #343 10\nclln #343 15\npush #343 18\npush i"
  " #343 20\npush inc #343 24\nclln #343 27\npush #343 22\nmult #343 22\npush #343 18\nadd #343 18\nset"
  " val #343 4\npush #344 8\npush end #344 14\nclln #344 17\npush #344 12\ngt #344 12\nifn 8 #344"
  " 4\npush error #344 27\npush cat #344 39\npush i #344 78\npush \'Range index out of bounds. was \'"
  " #344 44\ntupl 2 #344 76\ncall #344 42\ncall Error #344 33\nrais #344 21\nres val #345 4\nret #341"
  " 2\n@len\npush self #348 5\nclln end #348 10\npush #348 16\npush self #348 18\nclln start #348"
  " 23\npush #348 16\nsub #348 16\npush #348 32\npush self #348 34\nclln inc #348 39\npush #348 32\ndiv"
  " #348 32\nret #347 2\n@iter\npush IndexIterator #351 4\npush len #351 27\nclln #351 30\npush #351"
  " 22\npush 0 #351 24\npush self #351 18\ntupl 3 #351 22\ncall #351 17\nret #350"
  " 2\nendclass\n@str\nlet input #5 13\npush #6 6\npush Object #6 15\nis #6 12\nifn 3 #6 2\npush input"
  " #6 30\nclln to_s #6 36\nret #6 23\npush __stringify #7 2\nres input #7 14\ncall #7 13\nret #5"
  " 0\n@cat\nlet args #10 13\nres \'\' #11 12\nset result #11 2\npush args #12 7\npush Tuple #12 15\nis"
  " #12 12\nnot #12 5\nifn 7 #12 2\npush result #13 4\npush str #13 18\nres args #13 22\ncall #13"
  " 21\ncall extend #13 11\nres result #14 11\nret #14 4\nnblk #16 2\nres 0 #16 8\nset i #16 6\npush i"
  " #16 11\npush args #16 15\nclln len #16 20\npush #16 13\nlt #16 13\nifn 8 #16 2\npush result #17"
  " 4\npush str #17 18\npush args #17 22\naidx i #17 27\ncall #17 21\ncall extend #17 11\ninc i #16"
  " 29\njmp -14 #16 2\nbblk #16 2\nres result #19 9\nret #19 2\n@hash\nlet x #22 14\npush #23 5\npush"
  " Object #23 10\nis #23 7\nifn 3 #23 2\npush x #24 11\nclln hash #24 13\nret #24 4\npush Int #26"
  " 9\nres x #26 13\ncall #26 12\nret #26 2\n@cmp\npush #29 12\ntlen #29 13\neq -1 #29 13\nifn 5 #29"
  " 13\nres #29 13\nlet o1 #29 13\nrnil #29 17\nlet o2 #29 17\njmp 6 #29 13\npeek #29 13\ntget 0 #29"
  " 12\nlet o1 #29 13\nres #29 12\ntget 1 #29 12\nlet o2 #29 17\npush o1 #30 6\npush Object #30 12\nis"
  " #30 9\nifn 4 #30 20\npush o2 #30 26\npush Object #30 32\nis #30 29\nnot #30 24\nifn 2 #30 2\nres -1"
  " #31 12\nret #31 4\npush o2 #33 6\npush Object #33 12\nis #33 9\nifn 4 #33 20\npush o1 #33 26\npush"
  " Object #33 32\nis #33 29\nnot #33 24\nifn 2 #33 2\nres 1 #34 11\nret #34 4\npush o1 #36 6\npush"
  " Object #36 12\nis #36 9\nifn 2 #36 20\nres o1 #36 24\nget __cmp__ #36 27\nifn 4 #36 2\npush o1 #37"
  " 11\nres o2 #37 22\ncall __cmp__ #37 14\nret #37 4\nres o1 #39 5\neq o2 #39 11\nifn 2 #39 2\nres 0"
  " #40 12\nret #40 5\nres o2 #42 5\ngt o1 #42 10\nifn 2 #42 2\nres -1 #43 12\nret #43 4\nres 1 #45"
  " 9\nret #45 2\n@tuple\nlet args #48 15\npush #49 5\npush Tuple #49 13\nis #49 10\nif 10 #49 2\npush"
  " args #51 14\npush Array #51 22\nis #51 19\nnot #51 12\nifn 7 #51 9\npush error #52 10\nres \'Cannot"
  " tuple something not an Array.\' #52 23\ncall Error #52 16\nrais #52 4\njmp 2 #51 9\nres args #50"
  " 11\nret #50 4\npush __tuple #54 6\nres args #54 14\ncall #54 13\nset t #54 2\nret #55"
  " 2\nbody\n\'import builtin_ext\\r\\n\'\n\'import error\\r\\n\'\n\'import io\\r\\n\'\n\'import"
  " struct\\r\\n\'\n\'\\r\\n\'\n\'function str(input) {\\r\\n\'\n\'  if (input is Object) return"
  " input.to_s()\\r\\n\'\n\'  __stringify(input)  ; Native C"
  " function\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function cat(args) {\\r\\n\'\n\'  result ="
  " \\\'\\\'\\r\\n\'\n\'  if ~(args is Tuple) {\\r\\n\'\n\'    result.extend(str(args))\\r\\n\'\n\'   "
  " return result\\r\\n\'\n\'  }\\r\\n\'\n\'  for i=0, i < args.len(), i=i+1 {\\r\\n\'\n\'   "
  " result.extend(str(args[i]))\\r\\n\'\n\'  }\\r\\n\'\n\'  return"
  " result\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function hash(x) {\\r\\n\'\n\'  if x is Object"
  " {\\r\\n\'\n\'    return x.hash()\\r\\n\'\n\'  }\\r\\n\'\n\'  return"
  " Int(x)\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function cmp(o1, o2) {\\r\\n\'\n\'  if (o1 is Object)"
  " and ~(o2 is Object) {\\r\\n\'\n\'    return -1\\r\\n\'\n\'  }\\r\\n\'\n\'  if (o2 is Object) and"
  " ~(o1 is Object) {\\r\\n\'\n\'    return 1\\r\\n\'\n\'  }\\r\\n\'\n\'  if (o1 is Object) and"
  " o1.__cmp__ {\\r\\n\'\n\'    return o1.__cmp__(o2)\\r\\n\'\n\'  }\\r\\n\'\n\'  if o1 == o2"
  " {\\r\\n\'\n\'     return 0\\r\\n\'\n\'  }\\r\\n\'\n\'  if o2 > o1 {\\r\\n\'\n\'    return"
  " -1\\r\\n\'\n\'  }\\r\\n\'\n\'  return 1\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function tuple(args)"
  " {\\r\\n\'\n\'  if args is Tuple {\\r\\n\'\n\'    return args\\r\\n\'\n\'  } else if ~(args is"
  " Array) {\\r\\n\'\n\'    raise error.Error(\\\'Cannot tuple something not an Array.\\\')\\r\\n\'\n\'"
  "  }\\r\\n\'\n\'  t = __tuple(args)\\r\\n\'\n\'  return t\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class"
  " Object {\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    return cat(\\r\\n\'\n\'        \\\'Instance of"
  " \\\',\\r\\n\'\n\'        self.class().module().name(),\\r\\n\'\n\'        \\\'.\\\',\\r\\n\'\n\'   "
  "     self.class().name())\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class Module"
  " {\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    return cat(\\\'Module(\\\', name(),"
  " \\\')\\\')\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class Class {\\r\\n\'\n\'  field"
  " annotations\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    if annotations.len() > 0 {\\r\\n\'\n\'     "
  " cls_name =  \\\'class \\\' + name()\\r\\n\'\n\'      for (_, a) in annotations {\\r\\n\'\n\'       "
  " cls_name = cls_name + \\\' @\\\' + str(a.class().name())\\r\\n\'\n\'      }\\r\\n\'\n\'      return"
  " cls_name\\r\\n\'\n\'    } else {\\r\\n\'\n\'      return cat(\\\'class \\\', name())\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'  }\\r\\n\'\n\'  method add_annotation(annot) {\\r\\n\'\n\'   "
  " annotations.append(annot)\\r\\n\'\n\'  }\\r\\n\'\n\'  method all_annotations() {\\r\\n\'\n\'   "
  " return annotations\\r\\n\'\n\'  }\\r\\n\'\n\'  method all_methods() {\\r\\n\'\n\'    meths ="
  " methods()\\r\\n\'\n\'    sup = super()\\r\\n\'\n\'    while sup {\\r\\n\'\n\'     "
  " sup.methods().each(m -> meths.append(m))\\r\\n\'\n\'      sup = sup.super()\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    return meths\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class String"
  " {\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    return self\\r\\n\'\n\'  }\\r\\n\'\n\'  method"
  " join(strs) {\\r\\n\'\n\'    result = \\\'\\\'\\r\\n\'\n\'    if strs.len() == 0 {\\r\\n\'\n\'     "
  " return result\\r\\n\'\n\'    }\\r\\n\'\n\'    result.extend(str(strs[0]))\\r\\n\'\n\'    for i=1,"
  " i<strs.len(), i=i+1 {\\r\\n\'\n\'      result.extend(self)\\r\\n\'\n\'     "
  " result.extend(str(strs[i]))\\r\\n\'\n\'    }\\r\\n\'\n\'    return result\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  method substr(start_index, num_chars=None) {\\r\\n\'\n\'    if ~num_chars"
  " {\\r\\n\'\n\'      num_chars = len() - start_index\\r\\n\'\n\'    }\\r\\n\'\n\'    end_index ="
  " start_index + num_chars\\r\\n\'\n\'    if start_index <= end_index {\\r\\n\'\n\'      return"
  " __substr(start_index, end_index)\\r\\n\'\n\'    }\\r\\n\'\n\'    return __substr(end_index,"
  " start_index)\\r\\n\'\n\'  }\\r\\n\'\n\'  method find(sub, index=0) {\\r\\n\'\n\'    __find(sub,"
  " index)\\r\\n\'\n\'  }\\r\\n\'\n\'  method find_all(sub, index=0) {\\r\\n\'\n\'    __find_all(sub,"
  " index)\\r\\n\'\n\'  }\\r\\n\'\n\'  method __in__(sub) {\\r\\n\'\n\'    find(sub) !="
  " None\\r\\n\'\n\'  }\\r\\n\'\n\'  method starts_with(other) {\\r\\n\'\n\'    if ~(other is String)"
  " {\\r\\n\'\n\'      return False\\r\\n\'\n\'    }\\r\\n\'\n\'    return"
  " __starts_with(other)\\r\\n\'\n\'  }\\r\\n\'\n\'  method ends_with(other) {\\r\\n\'\n\'    if"
  " ~(other is String) {\\r\\n\'\n\'      return False\\r\\n\'\n\'    }\\r\\n\'\n\'    return"
  " __ends_with(other)\\r\\n\'\n\'\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class Tuple"
  " {\\r\\n\'\n\'  method ==(other) {\\r\\n\'\n\'    if (~(other is Tuple) or len() != other.len())"
  " return False\\r\\n\'\n\'    for i=0, i<len(), i=i+1 {\\r\\n\'\n\'      if (self[i] != other[i])"
  " {\\r\\n\'\n\'        return False\\r\\n\'\n\'      }\\r\\n\'\n\'    }\\r\\n\'\n\'    return"
  " True\\r\\n\'\n\'  }\\r\\n\'\n\'  method !=(other) {\\r\\n\'\n\'    if (len() != other.len()) return"
  " True\\r\\n\'\n\'    for i=0, i<len(), i=i+1 {\\r\\n\'\n\'      if (self[i] != other[i])"
  " {\\r\\n\'\n\'        return True\\r\\n\'\n\'      }\\r\\n\'\n\'    }\\r\\n\'\n\'    return"
  " False\\r\\n\'\n\'  }\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    result = \\\'(\\\'\\r\\n\'\n\'   "
  " result.extend(_maybe_wrap_in_quotes(self[0]))\\r\\n\'\n\'    for i = 1, i < len(), i = i + 1"
  " {\\r\\n\'\n\'      result.extend(\\\', \\\')\\r\\n\'\n\'         "
  " .extend(_maybe_wrap_in_quotes(self[i]))\\r\\n\'\n\'    }\\r\\n\'\n\'   "
  " result.extend(\\\')\\\')\\r\\n\'\n\'    return result\\r\\n\'\n\'  }\\r\\n\'\n\'  method iter()"
  " {\\r\\n\'\n\'    return IndexIterator(self, 0, len())\\r\\n\'\n\'  }\\r\\n\'\n\'  method"
  " _maybe_wrap_in_quotes(elt) {\\r\\n\'\n\'    if (elt is String) {\\r\\n\'\n\'      return"
  " \\\'\\\\\\\'\\\'.extend(elt).extend(\\\'\\\\\\\'\\\')\\r\\n\'\n\'    } else {\\r\\n\'\n\'     "
  " return str(elt)\\r\\n\'\n\'    }\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class Array"
  " {\\r\\n\'\n\'  method ==(other) {\\r\\n\'\n\'    if (~(other is Array) or len() != other.len())"
  " return False\\r\\n\'\n\'    for i=0, i<len(), i=i+1 {\\r\\n\'\n\'      if (self[i] != other[i])"
  " {\\r\\n\'\n\'        return False\\r\\n\'\n\'      }\\r\\n\'\n\'    }\\r\\n\'\n\'    return"
  " True\\r\\n\'\n\'  }\\r\\n\'\n\'  method !=(other) {\\r\\n\'\n\'    if (len() != other.len()) return"
  " True\\r\\n\'\n\'    for i=0, i<len(), i=i+1 {\\r\\n\'\n\'      if self[i] != other[i] {\\r\\n\'\n\'"
  "        return True\\r\\n\'\n\'      }\\r\\n\'\n\'    }\\r\\n\'\n\'    return False\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  method remove(i) {\\r\\n\'\n\'    i = Int(i)\\r\\n\'\n\'    if i >= len() or i < 0"
  " {\\r\\n\'\n\'      raise error.Error(cat(\\\'Index is out of bounds: \\\', i, \\\', Array length:"
  " \\\', len()))\\r\\n\'\n\'    }\\r\\n\'\n\'    return __remove(i)\\r\\n\'\n\'  }\\r\\n\'\n\'  method"
  " remove_value(v) {\\r\\n\'\n\'    for i=0, i<len(), i=i+1 {\\r\\n\'\n\'      if self[i] == v"
  " {\\r\\n\'\n\'        remove(i)\\r\\n\'\n\'        return True\\r\\n\'\n\'      }\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    return False\\r\\n\'\n\'  }\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    result ="
  " \\\'[\\\'\\r\\n\'\n\'    result.extend(\\\', \\\'.join(map((elt) {\\r\\n\'\n\'      if (elt is"
  " String) {\\r\\n\'\n\'        return"
  " \\\'\\\\\\\'\\\'.extend(elt).extend(\\\'\\\\\\\'\\\')\\r\\n\'\n\'      } else {\\r\\n\'\n\'       "
  " return str(elt)\\r\\n\'\n\'      }\\r\\n\'\n\'    })))\\r\\n\'\n\'    return"
  " result.extend(\\\']\\\')\\r\\n\'\n\'  }\\r\\n\'\n\'  method each(fn) {\\r\\n\'\n\'    for i=0,"
  " i<len(), i=i+1 {\\r\\n\'\n\'      fn(self[i])\\r\\n\'\n\'    }\\r\\n\'\n\'  }\\r\\n\'\n\'  method"
  " map(fn) {\\r\\n\'\n\'    result = []\\r\\n\'\n\'    if len() == 0 {\\r\\n\'\n\'      return"
  " result\\r\\n\'\n\'    }\\r\\n\'\n\'    result[len()-1] = None\\r\\n\'\n\'    for i=0, i<len(),"
  " i=i+1 {\\r\\n\'\n\'      result[i] = fn(self[i])\\r\\n\'\n\'    } \\r\\n\'\n\'    return"
  " result\\r\\n\'\n\'  }\\r\\n\'\n\'  method where(filter_fn) {\\r\\n\'\n\'    result = []\\r\\n\'\n\'"
  "    for i=0, i<len(), i=i+1 {\\r\\n\'\n\'      if filter_fn(self[i]) {\\r\\n\'\n\'       "
  " result.append(self[i])\\r\\n\'\n\'      }\\r\\n\'\n\'    } \\r\\n\'\n\'    return"
  " result\\r\\n\'\n\'  }\\r\\n\'\n\'  method has(has_fn) {\\r\\n\'\n\'    for i=0, i<len(), i=i+1"
  " {\\r\\n\'\n\'      if has_fn(self[i]) {\\r\\n\'\n\'        return True\\r\\n\'\n\'     "
  " }\\r\\n\'\n\'    }\\r\\n\'\n\'    return False\\r\\n\'\n\'  }\\r\\n\'\n\'  method collect(f,"
  " s=None) {\\r\\n\'\n\'    if len() == 0 {\\r\\n\'\n\'      if s is Function {\\r\\n\'\n\'       "
  " return s()\\r\\n\'\n\'      } else {\\r\\n\'\n\'        return s\\r\\n\'\n\'      }\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    i = 0\\r\\n\'\n\'    a = None\\r\\n\'\n\'    if s {\\r\\n\'\n\'      if s is"
  " Function {\\r\\n\'\n\'        a = s()\\r\\n\'\n\'      } else {\\r\\n\'\n\'        a ="
  " s\\r\\n\'\n\'      }\\r\\n\'\n\'    } else {\\r\\n\'\n\'      a = self[0]\\r\\n\'\n\'      i ="
  " 1\\r\\n\'\n\'    }\\r\\n\'\n\'    for _, i<len(), i=i+1 {\\r\\n\'\n\'      a = f(a,"
  " self[i])\\r\\n\'\n\'    }\\r\\n\'\n\'    return a\\r\\n\'\n\'  }\\r\\n\'\n\'  method iter()"
  " {\\r\\n\'\n\'    return IndexIterator(self)\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class Function {\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'   "
  " res = None\\r\\n\'\n\'    if self.is_method() {\\r\\n\'\n\'      res = cat(\\r\\n\'\n\'         "
  " \\\'Method(\\\',\\r\\n\'\n\'          self.module().name(),\\r\\n\'\n\'          \\\'.\\\',"
  " self.parent_class().name(),\\r\\n\'\n\'          \\\'.\\\', self.name())\\r\\n\'\n\'    } else"
  " {\\r\\n\'\n\'      res = cat(\\\'Function(\\\', self.module().name(), \\\'.\\\',"
  " self.name())\\r\\n\'\n\'    }\\r\\n\'\n\'    if self.annotations and self.annotations.len() > 0"
  " {\\r\\n\'\n\'      res.extend(\\\', annotations=\\\')\\r\\n\'\n\'     "
  " res.extend(str(self.annotations))\\r\\n\'\n\'    }\\r\\n\'\n\'    res.extend(\\\')\\\')\\r\\n\'\n\'"
  "    res\\r\\n\'\n\'  }\\r\\n\'\n\'  method add_annotation(annot) {\\r\\n\'\n\'   "
  " self.annotations.append(annot)\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class FunctionRef"
  " {\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    cat(\\\'FunctionRef(obj=\\\', self.obj(),"
  " \\\',func=\\\', self.func(), \\\')\\\')\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class"
  " Range {\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    cat(start(), \\\':\\\', inc(), \\\':\\\',"
  " end())\\r\\n\'\n\'  }\\r\\n\'\n\'  method __in__(n) {\\r\\n\'\n\'    (n <= end()) and (n >="
  " start()) and (n % inc() == start() % inc())\\r\\n\'\n\'  }\\r\\n\'\n\'  method [](i) {\\r\\n\'\n\' "
  "   if (i < 0) raise error.Error(cat(\\\'Range index out of bounds. was \\\', i))\\r\\n\'\n\'    val"
  " = start() + i * inc()\\r\\n\'\n\'    if (val > end()) raise error.Error(cat(\\\'Range index out of"
  " bounds. was \\\', i))\\r\\n\'\n\'    val\\r\\n\'\n\'  }\\r\\n\'\n\'  method len() {\\r\\n\'\n\'   "
  " (self.end() - self.start()) / self.inc()\\r\\n\'\n\'  }\\r\\n\'\n\'  method iter() {\\r\\n\'\n\'   "
  " IndexIterator(self, 0, len())\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'self.Iterator ="
  " builtin_ext.Iterator\\r\\n\'\n\'self.IndexIterator ="
  " builtin_ext.IndexIterator\\r\\n\'\n\'self.KVIterator = builtin_ext.KVIterator\\r\\n\'\n\'self.range"
  " = builtin_ext.range\\r\\n\'\n\'self.memoize = builtin_ext.memoize\\r\\n\'\n\'self.sort ="
  " builtin_ext.sort\\r\\n\'\n"};

const char *LIB_builtin_ext[] = {
  "module builtin_ext\nsource \'lib/builtin_ext.zn\'\nlmdl error #0 7\nmset error #0 7\npush"
  " IndexIterator #11 6\nres Iterator #11 22\ncall $__set_super #11 22\npush KVIterator #35 6\nres"
  " Iterator #35 19\ncall $__set_super #35 19\nrnil #2 4\nset _ #2 0\nexit 0\nclass Iterator\nfield"
  " has_next\nfield next\n@new\npush #4 6\npnil #5 12\nres self #5 12\nfld has_next #5 12\npnil #5"
  " 28\nres self #5 28\nfld next #5 28\ntlen #5 12\neq -1 #5 12\nifn 7 #5 12\nres self #5 12\nfld"
  " has_next #5 12\nrnil #5 28\npush #5 28\nres self #5 28\nfld next #5 28\njmp 10 #5 12\npeek #5"
  " 12\ntget 0 #5 5\npush #5 12\nres self #5 12\nfld has_next #5 12\nres #5 5\ntget 1 #5 5\npush #5"
  " 28\nres self #5 28\nfld next #5 28\nres self #5 2\nret #5 2\n@iter\nres self #7 11\nret #7"
  " 4\nendclass\nclass IndexIterator\nfield indexable\nfield start\nfield end\nfield i\nfield"
  " index\n@new\npush #11 6\npnil #12 8\nres self #12 8\nfld indexable #12 8\npnil #12 19\nres self #12"
  " 19\nfld start #12 19\npnil #12 26\nres self #12 26\nfld end #12 26\npnil #12 31\nres self #12"
  " 31\nfld i #12 31\npnil #12 34\nres self #12 34\nfld index #12 34\nres #11 6\nlet args #13 6\npush"
  " #14 8\npush Array #14 16\nis #14 13\nif 3 #14 23\npush args #14 27\npush String #14 35\nis #14"
  " 32\nif 14 #14 4\npush args #18 14\npush Tuple #18 22\nis #18 19\nifn 18 #18 11\npush args #19"
  " 32\ndup #19 30\naidx 0 #19 30\nset indexable #19 7\ndup #19 30\naidx 1 #19 30\nset start #19"
  " 18\naidx 2 #19 30\nset end #19 25\njmp 16 #18 11\nres args #15 18\nset indexable #15 6\nres 0 #16"
  " 14\nset start #16 6\npush args #17 12\nclln len #17 17\nset end #17 6\njmp 8 #14 4\npush error #21"
  " 12\npush concat #21 24\npush args #21 50\npush \'Strange input: \' #21 32\ntupl 2 #21 48\ncall #21"
  " 30\ncall Error #21 18\nrais #21 6\nres -1 #23 9\nset i #23 4\nres start #24 12\nsub 1 #24 20\nset"
  " index #24 4\npush super #25 4\nres Iterator #25 10\ncall #25 9\npush #25 19\njmp 8 #27"
  " 8\n@$anon_27_8\ninc i #28 14\ninc index #29 18\npush indexable #30 21\naidx index #30 31\npush #30"
  " 19\npush i #30 18\ntupl 2 #30 19\nret #30 10\npush $anon_27_8 #27 8\njmp 6 #26 8\n@$anon_26_8\npush"
  " index #26 14\nres end #26 23\nsub 1 #26 29\npush #26 20\nlt #26 20\nret #26 8\npush $anon_26_8 #26"
  " 8\ntupl 2 #26 31\ncall #25 19\nres self #13 2\nret #13 2\nendclass\nclass KVIterator\nfield"
  " key_iter\nfield container\n@new\npush #35 6\npnil #36 12\nres self #36 12\nfld key_iter #36"
  " 12\npnil #36 28\nres self #36 28\nfld container #36 28\ntlen #36 12\neq -1 #36 12\nifn 7 #36"
  " 12\nres self #36 12\nfld key_iter #36 12\nrnil #36 28\npush #36 28\nres self #36 28\nfld container"
  " #36 28\njmp 10 #36 12\npeek #36 12\ntget 0 #36 5\npush #36 12\nres self #36 12\nfld key_iter #36"
  " 12\nres #36 5\ntget 1 #36 5\npush #36 28\nres self #36 28\nfld container #36 28\npush super #37"
  " 4\nres Iterator #37 10\ncall #37 9\npush #37 19\njmp 11 #39 8\n@$anon_39_8\npush key_iter #40"
  " 14\nclln next #40 23\npush #40 29\naidx 1 #40 30\nset k #40 10\npush container #41 21\naidx k #41"
  " 31\npush #41 19\npush k #41 18\ntupl 2 #41 19\nret #41 10\npush $anon_39_8 #39 8\nres key_iter #38"
  " 8\ngtsh has_next #38 17\ntupl 2 #38 25\ncall #37 19\nres self #36 2\nret #36"
  " 2\nendclass\n@range\nlet params #46 15\npush #47 10\naidx 0 #47 17\nset start #47 2\npush params"
  " #48 5\nclln len #48 12\neq 3 #48 21\nifn 7 #48 2\npush params #49 10\naidx 1 #49 17\nset inc #49"
  " 4\npush params #50 10\naidx 2 #50 17\nset end #50 4\njmp 5 #48 2\nres 1 #52 10\nset inc #52 4\npush"
  " params #53 10\naidx 1 #53 17\nset end #53 4\npush Range #55 2\npush end #55 20\npush inc #55"
  " 15\npush start #55 8\ntupl 3 #55 13\ncall #55 7\nret #46 0\n@memoize\nlet fn #58 17\npush struct"
  " #59 10\nclln Map #59 10\nset cache #59 2\njmp 16 #60 16\n@$anon_60_16\nlet args #60 17\npush cache"
  " #61 13\naidx args #61 19\nset result #61 4\nnot #62 7\nifn 8 #62 4\npush fn #63 15\nres args #63"
  " 18\ncall #63 17\nset result #63 6\npush #64 20\npush cache #64 6\nres args #64 12\naset #64 11\nres"
  " result #66 11\nret #66 4\nres $anon_60_16 #60 16\nset memoized_fn #60 2\nret #68"
  " 2\n@_partition\npush #71 19\ntlen #71 20\neq -1 #71 20\nifn 9 #71 20\nres #71 20\nlet seq #71"
  " 20\nrnil #71 25\nlet l #71 25\nrnil #71 28\nlet h #71 28\nrnil #71 31\nlet cmp #71 31\njmp 12 #71"
  " 20\npeek #71 20\ntget 0 #71 19\nlet seq #71 20\npeek #71 25\ntget 1 #71 19\nlet l #71 25\npeek #71"
  " 28\ntget 2 #71 19\nlet h #71 28\nres #71 19\ntget 3 #71 19\nlet cmp #71 31\npush seq #72 10\naidx h"
  " #72 14\nset pivot #72 2\nres l #73 6\nsub 1 #73 10\nset i #73 2\nnblk #74 2\nres l #74 10\nset j"
  " #74 6\nres j #74 13\nlt h #74 17\nifn 27 #74 2\npush cmp #75 7\npush pivot #75 19\npush seq #75"
  " 11\naidx j #75 15\npush #75 17\ntupl 2 #75 17\ncall #75 10\ngt 0 #75 28\nifn 14 #75 4\ninc i #76"
  " 10\npush seq #77 12\naidx i #77 16\nset tmp #77 6\npush seq #78 15\naidx j #78 19\npush #78"
  " 13\npush seq #78 6\nres i #78 10\naset #78 9\npush tmp #79 15\npush seq #79 6\nres j #79 10\naset"
  " #79 9\nres j #74 24\nadd 1 #74 28\nset j #74 20\njmp -30 #74 2\nbblk #74 2\npush seq #82 8\nres i"
  " #82 12\nadd 1 #82 16\naidx #82 11\nset tmp #82 2\npush seq #83 15\naidx h #83 19\npush #83 13\npush"
  " seq #83 2\nres i #83 6\nadd 1 #83 10\naset #83 5\npush tmp #84 11\npush seq #84 2\nres h #84"
  " 6\naset #84 5\nres i #85 9\nadd 1 #85 13\nret #85 2\n@_quick_sort\npush #88 20\ntlen #88 21\neq -1"
  " #88 21\nifn 9 #88 21\nres #88 21\nlet seq #88 21\nrnil #88 26\nlet l #88 26\nrnil #88 29\nlet h #88"
  " 29\nrnil #88 32\nlet cmp #88 32\njmp 12 #88 21\npeek #88 21\ntget 0 #88 20\nlet seq #88 21\npeek"
  " #88 26\ntget 1 #88 20\nlet l #88 26\npeek #88 29\ntget 2 #88 20\nlet h #88 29\nres #88 20\ntget 3"
  " #88 20\nlet cmp #88 32\nres l #89 5\nlt h #89 9\nifn 26 #89 2\npush _partition #90 8\npush cmp #90"
  " 30\npush h #90 27\npush l #90 24\npush seq #90 19\ntupl 4 #90 22\ncall #90 18\nset p #90 4\npush"
  " _quick_sort #91 4\npush cmp #91 31\nres p #91 24\nsub 1 #91 28\npush #91 19\npush l #91 21\npush"
  " seq #91 16\ntupl 4 #91 19\ncall #91 15\npush _quick_sort #92 4\npush cmp #92 31\npush h #92 28\nres"
  " p #92 21\nadd 1 #92 25\npush #92 19\npush seq #92 16\ntupl 4 #92 19\ncall #92 15\nres seq #94"
  " 2\nret #88 0\n@sort\npush #97 13\ntlen #97 14\neq -1 #97 14\nifn 5 #97 14\nres #97 14\nlet seq #97"
  " 14\nres cmp #97 23\nlet cmp #97 19\njmp 11 #97 14\npeek #97 14\ntget 0 #97 13\nlet seq #97 14\npeek"
  " #97 13\ntgte 2 #97 19\nifn 3 #97 19\nres #97 19\ntget 1 #97 13\njmp 1 #97 19\nres cmp #97 23\nlet"
  " cmp #97 19\npush _quick_sort #98 2\npush cmp #98 37\npush seq #98 22\nclln len #98 26\nsub 1 #98"
  " 34\npush #98 17\npush 0 #98 19\npush seq #98 14\ntupl 4 #98 17\ncall #98 13\nret #97"
  " 0\nbody\n\'import error\\r\\n\'\n\'\\r\\n\'\n\'_ = None\\r\\n\'\n\'\\r\\n\'\n\'class Iterator"
  " {\\r\\n\'\n\'  new(field has_next, field next) {}\\r\\n\'\n\'  method iter() {\\r\\n\'\n\'   "
  " return self\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class IndexIterator : Iterator"
  " {\\r\\n\'\n\'  field indexable, start, end, i, index\\r\\n\'\n\'  new(args) {\\r\\n\'\n\'    if"
  " (args is Array) or (args is String) {\\r\\n\'\n\'      indexable = args\\r\\n\'\n\'      start ="
  " 0\\r\\n\'\n\'      end = args.len()\\r\\n\'\n\'    } else if args is Tuple {\\r\\n\'\n\'     "
  " (indexable, start, end) = args\\r\\n\'\n\'    } else {\\r\\n\'\n\'      raise"
  " error.Error(concat(\\\'Strange input: \\\', args))\\r\\n\'\n\'    }\\r\\n\'\n\'    i ="
  " -1\\r\\n\'\n\'    index = start - 1\\r\\n\'\n\'    super(Iterator)(\\r\\n\'\n\'        () -> index"
  " < (end - 1),\\r\\n\'\n\'        () {\\r\\n\'\n\'          i = i + 1\\r\\n\'\n\'          index ="
  " index + 1\\r\\n\'\n\'          return (i, indexable[index])\\r\\n\'\n\'        })\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class KVIterator : Iterator {\\r\\n\'\n\'  new(field"
  " key_iter, field container) {\\r\\n\'\n\'    super(Iterator)(\\r\\n\'\n\'       "
  " key_iter.has_next,\\r\\n\'\n\'        () {\\r\\n\'\n\'          k = key_iter.next()[1]\\r\\n\'\n\' "
  "         return (k, container[k]) ; return required.\\r\\n\'\n\'        })\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function range(params) {\\r\\n\'\n\'  start ="
  " params[0]\\r\\n\'\n\'  if params.len() == 3 {\\r\\n\'\n\'    inc = params[1]\\r\\n\'\n\'    end ="
  " params[2]\\r\\n\'\n\'  } else {\\r\\n\'\n\'    inc = 1\\r\\n\'\n\'    end = params[1]\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  Range(start, inc, end)\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function memoize(fn)"
  " {\\r\\n\'\n\'  cache = {}\\r\\n\'\n\'  memoized_fn = (args) {\\r\\n\'\n\'    result ="
  " cache[args]\\r\\n\'\n\'    if ~result {\\r\\n\'\n\'      result = fn(args)\\r\\n\'\n\'     "
  " cache[args] = result\\r\\n\'\n\'    }\\r\\n\'\n\'    return result\\r\\n\'\n\'  }\\r\\n\'\n\' "
  " return memoized_fn\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function _partition(seq, l, h, cmp)"
  " {\\r\\n\'\n\'  pivot = seq[h]\\r\\n\'\n\'  i = l - 1\\r\\n\'\n\'  for j = l, j < h, j = j + 1"
  " {\\r\\n\'\n\'    if cmp(seq[j], pivot) > 0 {\\r\\n\'\n\'      i = i + 1\\r\\n\'\n\'      tmp ="
  " seq[i]\\r\\n\'\n\'      seq[i] = seq[j]\\r\\n\'\n\'      seq[j] = tmp\\r\\n\'\n\'    }\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  tmp = seq[i + 1]\\r\\n\'\n\'  seq[i + 1] = seq[h]\\r\\n\'\n\'  seq[h] ="
  " tmp\\r\\n\'\n\'  return i + 1\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function _quick_sort(seq, l, h,"
  " cmp) {\\r\\n\'\n\'  if l < h {\\r\\n\'\n\'    p = _partition(seq, l, h, cmp)\\r\\n\'\n\'   "
  " _quick_sort(seq, l, p - 1, cmp)\\r\\n\'\n\'    _quick_sort(seq, p + 1, h, cmp)\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  seq\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function sort(seq, cmp=cmp) {\\r\\n\'\n\' "
  " _quick_sort(seq, 0, seq.len() - 1, cmp)\\r\\n\'\n\'}\'\n"};

const char *LIB_classes[] = {
  "module classes\nsource \'lib/classes.zn\'\nlmdl struct #0 7\nmset struct #0 7\npush _ClassFactory"
  " #142 15\nclln #142 28\npush #142 13\nres self #142 0\nfld factory #142 5\nexit 0\nclass"
  " _MethodBuilder\nfield statements\nfield parameters\nfield is_async\nfield method_name\n@new\npush"
  " #2 6\npnil #3 8\nres self #3 8\nfld statements #3 8\npnil #3 20\nres self #3 20\nfld parameters #3"
  " 20\npnil #3 32\nres self #3 32\nfld is_async #3 32\npnil #5 12\nres self #5 12\nfld method_name #5"
  " 12\nres self #5 12\nfld method_name #5 12\nanew #6 17\nset statements #6 4\nanew #7 17\nset"
  " parameters #7 4\nrfls #8 15\nset is_async #8 4\nres self #5 2\nret #5 2\n@with_parameter\npush #11"
  " 23\ntlen #11 24\neq -1 #11 24\nifn 5 #11 24\nres #11 24\nlet name #11 24\nrnil #11 46\nlet"
  " default_value #11 30\njmp 11 #11 24\npeek #11 24\ntget 0 #11 23\nlet name #11 24\npeek #11 23\ntgte"
  " 2 #11 30\nifn 3 #11 30\nres #11 30\ntget 1 #11 23\njmp 1 #11 30\nrnil #11 46\nlet default_value #11"
  " 30\npush parameters #12 4\npush default_value #12 29\npush name #12 23\ntupl 2 #12 27\ncall append"
  " #12 15\nres self #13 11\nret #13 4\n@as_async\nrtru #17 15\nset is_async #17 4\nres self #18"
  " 11\nret #18 4\n@with_statement\nlet statement_text #21 24\npush statements #22 4\nres"
  " statement_text #22 22\ncall append #22 15\nres self #23 11\nret #23 4\n@to_s\npush cat #27 13\npush"
  " \')\' #39 7\npush \', \' #31 7\npush parameters #31 16\njmp 20 #32 10\n@$anon_32_10\nlet f #32"
  " 11\npush #33 21\naidx 0 #33 23\npush #33 25\nclln copy #33 26\nset f_text #33 12\npush f #34"
  " 15\naidx 1 #34 17\nifn 9 #34 12\npush f_text #35 14\nres \' = \' #35 29\ncall extend #35 21\npush"
  " #35 34\npush str #35 42\npush f #35 46\naidx 1 #35 48\ncall #35 45\ncall extend #35 35\nres f_text"
  " #37 19\nret #37 12\nres $anon_32_10 #32 10\ncall map #31 27\ncall join #31 11\npush #28 17\npush"
  " \'(\' #30 7\npush method_name #29 6\npush \'  method \' #28 7\ntupl 5 #28 17\ncall #27 16\nset"
  " c_text #27 4\nres is_async #40 7\nifn 3 #40 4\npush c_text #41 6\nres \' async\' #41 21\ncall"
  " extend #41 13\npush c_text #43 4\nres \' {\\n\' #43 19\ncall extend #43 11\npush c_text #44 4\npush"
  " \'\\n\' #44 19\npush statements #44 28\njmp 7 #44 43\n@$anon_44_43\nlet s #44 43\npush cat #44"
  " 48\npush s #44 60\npush \'    \' #44 53\ntupl 2 #44 58\ncall #44 51\nret #44 43\nres $anon_44_43"
  " #44 43\ncall map #44 39\ncall join #44 23\ncall extend #44 11\npush c_text #45 4\nres \'\\n  }\\n\'"
  " #45 19\ncall extend #45 11\nres c_text #46 11\nret #46 4\nendclass\nclass"
  " _ConstructorBuilder\nfield parameters\nfield statements\n@new\npush #50 6\npnil #51 8\nres self #51"
  " 8\nfld parameters #51 8\npnil #51 20\nres self #51 20\nfld statements #51 20\nres #50 6\nanew #54"
  " 17\nset parameters #54 4\nanew #55 17\nset statements #55 4\nres self #53 2\nret #53"
  " 2\n@with_parameter\npush #58 23\ntlen #58 24\neq -1 #58 24\nifn 7 #58 24\nres #58 24\nlet name #58"
  " 24\nrfls #58 41\nlet is_field #58 30\nrnil #58 64\nlet default_value #58 48\njmp 19 #58 24\npeek"
  " #58 24\ntget 0 #58 23\nlet name #58 24\npeek #58 23\ntgte 2 #58 30\nifn 3 #58 30\npeek #58 30\ntget"
  " 1 #58 23\njmp 1 #58 30\nrfls #58 41\nlet is_field #58 30\npeek #58 23\ntgte 3 #58 48\nifn 3 #58"
  " 48\nres #58 48\ntget 2 #58 23\njmp 1 #58 48\nrnil #58 64\nlet default_value #58 48\npush parameters"
  " #59 4\npush default_value #59 39\npush is_field #59 29\npush name #59 23\ntupl 3 #59 27\ncall"
  " append #59 15\nres self #60 11\nret #60 4\n@with_statement\nlet statement_text #63 24\npush"
  " statements #64 4\nres statement_text #64 22\ncall append #64 15\nres self #65 11\nret #65"
  " 4\n@to_s\npush cat #69 13\npush \') {\\n\' #83 7\npush \', \' #71 7\npush parameters #71 16\njmp 27"
  " #72 10\n@$anon_72_10\nlet f #72 11\nres \'\' #73 22\nset f_text #73 12\npush f #74 15\naidx 1 #74"
  " 17\nifn 3 #74 12\npush f_text #75 14\nres \'field \' #75 29\ncall extend #75 21\npush f_text #77"
  " 12\npush f #77 26\naidx 0 #77 28\ncall extend #77 19\npush f #78 15\naidx 2 #78 17\nifn 9 #78"
  " 12\npush f_text #79 14\nres \' = \' #79 29\ncall extend #79 21\npush #79 34\npush str #79 42\npush"
  " f #79 46\naidx 2 #79 48\ncall #79 45\ncall extend #79 35\nres f_text #81 19\nret #81 12\nres"
  " $anon_72_10 #72 10\ncall map #71 27\ncall join #71 11\npush #70 14\npush \'  new(\' #70 7\ntupl 3"
  " #70 14\ncall #69 16\nset c_text #69 4\npush #84 4\npush \'\\n\' #84 19\npush statements #84 28\njmp"
  " 7 #84 43\n@$anon_84_43\nlet s #84 43\npush cat #84 48\npush s #84 60\npush \'    \' #84 53\ntupl 2"
  " #84 58\ncall #84 51\nret #84 43\nres $anon_84_43 #84 43\ncall map #84 39\ncall join #84 23\ncall"
  " extend #84 11\npush c_text #85 4\nres \'\\n  }\\n\' #85 19\ncall extend #85 11\nres c_text #86"
  " 11\nret #86 4\nendclass\nclass _ClassBuilder\nfield fields\nfield constructor\nfield methods\nfield"
  " class_name\nfield module\n@new\npush #90 6\npnil #91 8\nres self #91 8\nfld fields #91 8\npnil #91"
  " 16\nres self #91 16\nfld constructor #91 16\npnil #91 29\nres self #91 29\nfld methods #91 29\npnil"
  " #93 12\nres self #93 12\nfld class_name #93 12\npnil #93 30\nres self #93 30\nfld module #93"
  " 30\ntlen #93 12\neq -1 #93 12\nifn 7 #93 12\nres self #93 12\nfld class_name #93 12\nrnil #93"
  " 30\npush #93 30\nres self #93 30\nfld module #93 30\njmp 10 #93 12\npeek #93 12\ntget 0 #93 5\npush"
  " #93 12\nres self #93 12\nfld class_name #93 12\nres #93 5\ntget 1 #93 5\npush #93 30\nres self #93"
  " 30\nfld module #93 30\nanew #94 13\nset fields #94 4\nrnil #95 18\nset constructor #95 4\nanew #96"
  " 14\nset methods #96 4\nres self #93 2\nret #93 2\n@with_field\nlet field_name #99 20\npush fields"
  " #100 4\nres field_name #100 18\ncall append #100 11\nres self #101 11\nret #101"
  " 4\n@get_constructor\nres constructor #105 8\nnot #105 7\nifn 3 #105 4\npush _ConstructorBuilder"
  " #106 20\nclln #106 39\nset constructor #106 6\nres constructor #108 11\nret #108"
  " 4\n@add_method\nlet method_name #111 20\npush _MethodBuilder #112 8\nres method_name #112 23\ncall"
  " #112 22\nset m #112 4\npush methods #113 4\nres m #113 19\ncall append #113 12\nres m #114 11\nret"
  " #114 4\n@build\npush __load_class_from_text #118 11\npush to_s #118 42\nclln #118 46\npush #118"
  " 48\nres \'\\nNone\\n\' #118 57\ncall extend #118 49\npush #118 40\npush module #118 34\ntupl 2 #118"
  " 40\ncall #118 33\nret #118 4\n@to_s\npush cat #122 17\npush \' {\\n\' #122 44\npush class_name #122"
  " 31\npush \'class \' #122 22\ntupl 3 #122 29\ncall #122 20\nset class_text #122 4\npush fields #123"
  " 7\nclln len #123 14\ngt 0 #123 22\nifn 11 #123 4\npush class_text #124 6\npush cat #124 24\npush"
  " \'\\n\' #124 60\npush \', \' #124 41\nres fields #124 50\ncall join #124 45\npush #124 38\npush \' "
  " field \' #124 29\ntupl 3 #124 38\ncall #124 27\ncall extend #124 17\nres constructor #126 7\nifn 4"
  " #126 4\npush class_text #127 6\npush constructor #127 24\nclln to_s #127 36\ncall extend #127"
  " 17\nnblk #129 4\npush methods #129 18\ncall iter #129 15\npush #129 15\ndup #129 15\ncall has_next"
  " #129 15\nifn 13 #129 15\ndup #129 4\ncall next #129 15\npush #129 15\ndup #129 15\naidx 0 #129"
  " 15\nset _ #129 9\naidx 1 #129 15\nset m #129 12\npush class_text #130 6\npush m #130 24\nclln to_s"
  " #130 26\ncall extend #130 17\njmp -16 #129 15\nres #129 15\nbblk #129 4\npush class_text #132"
  " 4\nres \'}\\n\' #132 23\ncall extend #132 15\nret #121 2\nendclass\nclass"
  " _ClassFactory\n@create_class\npush #137 21\ntlen #137 22\neq -1 #137 22\nifn 5 #137 22\nres #137"
  " 22\nlet class_name #137 22\nrnil #137 34\nlet module #137 34\njmp 6 #137 22\npeek #137 22\ntget 0"
  " #137 21\nlet class_name #137 22\nres #137 21\ntget 1 #137 21\nlet module #137 34\npush"
  " _ClassBuilder #138 11\npush module #138 37\npush class_name #138 25\ntupl 2 #138 35\ncall #138"
  " 24\nret #138 4\nendclass\nbody\n\'import struct\\r\\n\'\n\'\\r\\n\'\n\'class _MethodBuilder"
  " {\\r\\n\'\n\'  field statements, parameters, is_async\\r\\n\'\n\'\\r\\n\'\n\'  new(field"
  " method_name) {\\r\\n\'\n\'    statements = []\\r\\n\'\n\'    parameters = []\\r\\n\'\n\'   "
  " is_async = False\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method with_parameter(name, default_value"
  " = None) {\\r\\n\'\n\'    parameters.append((name, default_value))    \\r\\n\'\n\'    return"
  " self\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method as_async() {\\r\\n\'\n\'    is_async ="
  " True\\r\\n\'\n\'    return self\\r\\n\'\n\'  }\\r\\n\'\n\'  \\r\\n\'\n\'  method"
  " with_statement(statement_text) {\\r\\n\'\n\'    statements.append(statement_text)\\r\\n\'\n\'   "
  " return self\\r\\n\'\n\'  }\\r\\n\'\n\'  \\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    c_text ="
  " cat(\\r\\n\'\n\'      \\\'  method \\\',\\r\\n\'\n\'      method_name,\\r\\n\'\n\'     "
  " \\\'(\\\',\\r\\n\'\n\'      \\\', \\\'.join(parameters.map(\\r\\n\'\n\'          (f) {\\r\\n\'\n\' "
  "           f_text = f[0].copy()\\r\\n\'\n\'            if f[1] {\\r\\n\'\n\'             "
  " f_text.extend(\\\' = \\\').extend(str(f[1]))\\r\\n\'\n\'            }\\r\\n\'\n\'            return"
  " f_text\\r\\n\'\n\'          })),\\r\\n\'\n\'      \\\')\\\')\\r\\n\'\n\'    if is_async"
  " {\\r\\n\'\n\'      c_text.extend(\\\' async\\\')\\r\\n\'\n\'    }\\r\\n\'\n\'    c_text.extend(\\\'"
  " {\\\\n\\\')\\r\\n\'\n\'    c_text.extend(\\\'\\\\n\\\'.join(statements.map(s -> cat(\\\'    \\\',"
  " s))))\\r\\n\'\n\'    c_text.extend(\\\'\\\\n  }\\\\n\\\')\\r\\n\'\n\'    return c_text\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class _ConstructorBuilder {\\r\\n\'\n\'  field parameters,"
  " statements\\r\\n\'\n\'  \\r\\n\'\n\'  new() {\\r\\n\'\n\'    parameters = []\\r\\n\'\n\'   "
  " statements = []\\r\\n\'\n\'  }\\r\\n\'\n\'  \\r\\n\'\n\'  method with_parameter(name, is_field ="
  " False, default_value = None) {\\r\\n\'\n\'    parameters.append((name, is_field,"
  " default_value))\\r\\n\'\n\'    return self\\r\\n\'\n\'  }\\r\\n\'\n\'  \\r\\n\'\n\'  method"
  " with_statement(statement_text) {\\r\\n\'\n\'    statements.append(statement_text)\\r\\n\'\n\'   "
  " return self\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    c_text ="
  " cat(\\r\\n\'\n\'      \\\'  new(\\\',\\r\\n\'\n\'      \\\', \\\'.join(parameters.map(\\r\\n\'\n\' "
  "         (f) {\\r\\n\'\n\'            f_text = \\\'\\\'\\r\\n\'\n\'            if f[1] {\\r\\n\'\n\'"
  "              f_text.extend(\\\'field \\\')\\r\\n\'\n\'            }\\r\\n\'\n\'           "
  " f_text.extend(f[0])\\r\\n\'\n\'            if f[2] {\\r\\n\'\n\'              f_text.extend(\\\' ="
  " \\\').extend(str(f[2]))\\r\\n\'\n\'            }\\r\\n\'\n\'            return f_text\\r\\n\'\n\'  "
  "        })),\\r\\n\'\n\'      \\\') {\\\\n\\\')\\r\\n\'\n\'   "
  " c_text.extend(\\\'\\\\n\\\'.join(statements.map(s -> cat(\\\'    \\\', s))))\\r\\n\'\n\'   "
  " c_text.extend(\\\'\\\\n  }\\\\n\\\')\\r\\n\'\n\'    return c_text\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class _ClassBuilder {\\r\\n\'\n\'  field fields, constructor,"
  " methods\\r\\n\'\n\'\\r\\n\'\n\'  new(field class_name, field module) {\\r\\n\'\n\'    fields ="
  " []\\r\\n\'\n\'    constructor = None\\r\\n\'\n\'    methods = []\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  method with_field(field_name) {\\r\\n\'\n\'   "
  " fields.append(field_name)\\r\\n\'\n\'    return self\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method"
  " get_constructor() {\\r\\n\'\n\'    if ~constructor {\\r\\n\'\n\'      constructor ="
  " _ConstructorBuilder()\\r\\n\'\n\'    }\\r\\n\'\n\'    return constructor\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  method add_method(method_name) {\\r\\n\'\n\'    m ="
  " _MethodBuilder(method_name)\\r\\n\'\n\'    methods.append(m)\\r\\n\'\n\'    return m\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  method build() {\\r\\n\'\n\'    return __load_class_from_text(module,"
  " to_s().extend(\\\'\\\\nNone\\\\n\\\'))\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method to_s()"
  " {\\r\\n\'\n\'    class_text = cat(\\\'class \\\', class_name, \\\' {\\\\n\\\')\\r\\n\'\n\'    if"
  " fields.len() > 0 {\\r\\n\'\n\'      class_text.extend(cat(\\\'  field \\\', \\\',"
  " \\\'.join(fields), \\\'\\\\n\\\'))\\r\\n\'\n\'    }\\r\\n\'\n\'    if constructor {\\r\\n\'\n\'    "
  "  class_text.extend(constructor.to_s())\\r\\n\'\n\'    }\\r\\n\'\n\'    for (_, m) in methods"
  " {\\r\\n\'\n\'      class_text.extend(m.to_s())\\r\\n\'\n\'    }\\r\\n\'\n\'   "
  " class_text.extend(\\\'}\\\\n\\\')\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class"
  " _ClassFactory {\\r\\n\'\n\'  method create_class(class_name, module) {\\r\\n\'\n\'    return"
  " _ClassBuilder(class_name, module)\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'self.factory ="
  " _ClassFactory()\\r\\n\'\n"};

const char *LIB_data[] = {
  "module data\nsource \'lib/data.zn\'\nlmdl io #0 7\nmset io #0 7\npush Int8Array #29 6\nres DataArray"
  " #29 18\ncall $__set_super #29 18\npush Int32Array #30 6\nres DataArray #30 19\ncall $__set_super"
  " #30 19\npush Int64Array #31 6\nres DataArray #31 19\ncall $__set_super #31 19\npush Float32Array"
  " #32 6\nres DataArray #32 21\ncall $__set_super #32 21\npush Float64Array #33 6\nres DataArray #33"
  " 21\ncall $__set_super #33 21\npush Int8Matrix #36 6\nres DataMatrix #36 19\ncall $__set_super #36"
  " 19\npush Int32Matrix #37 6\nres DataMatrix #37 20\ncall $__set_super #37 20\npush Int64Matrix #38"
  " 6\nres DataMatrix #38 20\ncall $__set_super #38 20\npush Float32Matrix #39 6\nres DataMatrix #39"
  " 22\ncall $__set_super #39 22\npush Float64Matrix #40 6\nres DataMatrix #40 22\ncall $__set_super"
  " #40 22\nexit 0\nclass Int8Array\npush class #45 10\nendclass\nclass Int32Array\npush class #45"
  " 10\nendclass\nclass Int64Array\npush class #45 10\nendclass\nclass Float32Array\npush class #45"
  " 10\nendclass\nclass Float64Array\npush class #45 10\nendclass\nclass Int8Matrix\npush class #45"
  " 10\nendclass\nclass Int32Matrix\npush class #45 10\nendclass\nclass Int64Matrix\npush class #45"
  " 10\nendclass\nclass Float32Matrix\npush class #45 10\nendclass\nclass Float64Matrix\npush class #45"
  " 10\nendclass\nclass DataArray\n@to_s\npush class #45 10\nclln #45 15\npush #45 17\nclln name #45"
  " 18\npush #45 25\npush \'([\' #45 28\nadd #45 25\nset res #45 4\npush len #46 8\nclln #46 11\nset l"
  " #46 4\neq 0 #47 12\nifn 4 #47 4\npush res #48 13\npush \'])\' #48 20\nadd #48 17\nret #48 6\nres l"
  " #50 7\nlt 8 #50 11\nifn 30 #50 4\nnblk #51 6\nres 0 #51 14\nset i #51 10\npush i #51 17\nres l #51"
  " 21\nsub 1 #51 23\npush #51 19\nlt #51 19\nifn 11 #51 6\npush res #52 8\npush str #52 19\npush self"
  " #52 23\naidx i #52 28\ncall #52 22\npush #52 32\npush \', \' #52 35\nadd #52 32\ncall extend #52"
  " 12\ninc i #51 28\njmp -17 #51 6\nbblk #51 6\npush res #54 6\npush str #54 17\npush self #54 21\nres"
  " l #54 26\nsub 1 #54 28\naidx #54 25\ncall #54 20\ncall extend #54 10\njmp 29 #50 4\nnblk #56 6\nres"
  " 0 #56 14\nset i #56 10\nres i #56 17\nlt 5 #56 21\nifn 11 #56 6\npush res #57 8\npush str #57"
  " 19\npush self #57 23\naidx i #57 28\ncall #57 22\npush #57 32\npush \', \' #57 35\nadd #57 32\ncall"
  " extend #57 12\ninc i #56 26\njmp -14 #56 6\nbblk #56 6\npush res #59 6\npush \'...\' #59 18\npush"
  " str #59 25\npush self #59 29\nres l #59 34\nsub 1 #59 36\naidx #59 33\ncall #59 28\npush #59"
  " 23\nadd #59 23\ncall extend #59 10\npush res #61 11\npush \'])\' #61 18\nadd #61 15\nret #61"
  " 4\nendclass\nclass DataMatrix\n@to_s\npush class #68 10\nclln #68 15\npush #68 17\nclln name #68"
  " 18\npush #68 25\npush \'([\' #68 28\nadd #68 25\nset res #68 4\npush shape #69 8\nclln #69 13\npush"
  " #69 15\naidx 0 #69 16\nset l #69 4\neq 0 #70 12\nifn 4 #70 4\npush res #71 13\npush \'])\' #71"
  " 20\nadd #71 17\nret #71 6\npush res #73 4\nres \'\\n  \' #73 16\ncall extend #73 8\nres l #74 7\nlt"
  " 8 #74 11\nifn 34 #74 4\nnblk #75 6\nres 0 #75 14\nset i #75 10\npush i #75 17\nres l #75 21\nsub 1"
  " #75 23\npush #75 19\nlt #75 19\nifn 13 #75 6\npush res #76 8\npush str #76 19\npush self #76"
  " 23\naidx i #76 28\npush #76 30\nclln to_arr #76 31\ncall #76 22\npush #76 41\npush \',\\n  \' #76"
  " 44\nadd #76 41\ncall extend #76 12\ninc i #75 28\njmp -19 #75 6\nbblk #75 6\npush res #78 6\npush"
  " str #78 17\npush self #78 21\nres l #78 26\nsub 1 #78 28\naidx #78 25\npush #78 30\nclln to_arr #78"
  " 31\ncall #78 20\ncall extend #78 10\njmp 33 #74 4\nnblk #80 6\nres 0 #80 14\nset i #80 10\nres i"
  " #80 17\nlt 5 #80 21\nifn 13 #80 6\npush res #81 8\npush str #81 19\npush self #81 23\naidx i #81"
  " 28\npush #81 30\nclln to_arr #81 31\ncall #81 22\npush #81 41\npush \',\\n  \' #81 44\nadd #81"
  " 41\ncall extend #81 12\ninc i #80 26\njmp -16 #80 6\nbblk #80 6\npush res #83 6\npush \'...\\n  \'"
  " #83 18\npush str #83 29\npush self #83 33\nres l #83 38\nsub 1 #83 40\naidx #83 37\npush #83"
  " 42\nclln to_arr #83 43\ncall #83 32\npush #83 27\nadd #83 27\ncall extend #83 10\npush res #85"
  " 11\npush \']\\n  shape=\' #85 18\nadd #85 15\npush #85 31\npush str #85 33\npush shape #85 37\nclln"
  " #85 42\ncall #85 36\npush #85 31\nadd #85 31\npush #85 46\npush \')\' #85 49\nadd #85 46\nret #85"
  " 4\nendclass\n@zeros\npush #3 14\ntlen #3 15\neq -1 #3 15\nifn 5 #3 15\nres #3 15\nlet type #3"
  " 15\nrnil #3 21\nlet count #3 21\njmp 6 #3 15\npeek #3 15\ntget 0 #3 14\nlet type #3 15\nres #3"
  " 14\ntget 1 #3 14\nlet count #3 21\nres type #4 5\neq Int #4 13\nif 16 #4 2\nres type #6 12\neq"
  " Float #6 20\nif 8 #6 9\nres type #8 12\neq Char #8 20\nifn 15 #8 9\npush Int8Array #9 11\nres count"
  " #9 21\ncall #9 20\nret #9 4\njmp 14 #8 9\npush Float64Array #7 11\nres count #7 24\ncall #7 23\nret"
  " #7 4\njmp 9 #6 9\npush Int64Array #5 11\nres count #5 22\ncall #5 21\nret #5 4\njmp 4 #4 2\npush"
  " type #11 11\nres count #11 16\ncall #11 15\nret #11 4\nret #3 0\n@zeros2\npush #16 15\ntlen #16"
  " 16\neq -1 #16 16\nifn 7 #16 16\nres #16 16\nlet type #16 16\nrnil #16 22\nlet dim1 #16 22\nrnil #16"
  " 28\nlet dim2 #16 28\njmp 9 #16 16\npeek #16 16\ntget 0 #16 15\nlet type #16 16\npeek #16 22\ntget 1"
  " #16 15\nlet dim1 #16 22\nres #16 15\ntget 2 #16 15\nlet dim2 #16 28\nres type #17 5\neq Int #17"
  " 13\nif 20 #17 2\nres type #19 12\neq Float #19 20\nif 10 #19 9\nres type #21 12\neq Char #21"
  " 20\nifn 21 #21 9\npush Int8Matrix #22 11\npush dim2 #22 28\npush dim1 #22 22\ntupl 2 #22 26\ncall"
  " #22 21\nret #22 4\njmp 20 #21 9\npush Float64Matrix #20 11\npush dim2 #20 31\npush dim1 #20"
  " 25\ntupl 2 #20 29\ncall #20 24\nret #20 4\njmp 13 #19 9\npush Int64Matrix #18 11\npush dim2 #18"
  " 29\npush dim1 #18 23\ntupl 2 #18 27\ncall #18 22\nret #18 4\njmp 6 #17 2\npush type #24 11\npush"
  " dim2 #24 22\npush dim1 #24 16\ntupl 2 #24 20\ncall #24 15\nret #24 4\nret #16 0\nbody\n\'import"
  " io\\r\\n\'\n\'\\r\\n\'\n\'; Returns a data array of 0 values with the given"
  " length.\\r\\n\'\n\'function zeros(type, count) {\\r\\n\'\n\'  if type == Int {\\r\\n\'\n\'   "
  " return Int64Array(count)\\r\\n\'\n\'  } else if type == Float {\\r\\n\'\n\'    return"
  " Float64Array(count)\\r\\n\'\n\'  } else if type == Char {\\r\\n\'\n\'    return"
  " Int8Array(count)\\r\\n\'\n\'  } else {\\r\\n\'\n\'    return type(count)\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Returns a data matrix of 0 values with the given"
  " dimensions.\\r\\n\'\n\'function zeros2(type, dim1, dim2) {\\r\\n\'\n\'  if type == Int"
  " {\\r\\n\'\n\'    return Int64Matrix(dim1, dim2)\\r\\n\'\n\'  } else if type == Float {\\r\\n\'\n\' "
  "   return Float64Matrix(dim1, dim2)\\r\\n\'\n\'  } else if type == Char {\\r\\n\'\n\'    return"
  " Int8Matrix(dim1, dim2)\\r\\n\'\n\'  } else {\\r\\n\'\n\'    return type(dim1, dim2)\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Arrays\\r\\n\'\n\'class Int8Array : DataArray"
  " {}\\r\\n\'\n\'class Int32Array : DataArray {}\\r\\n\'\n\'class Int64Array : DataArray"
  " {}\\r\\n\'\n\'class Float32Array : DataArray {}\\r\\n\'\n\'class Float64Array : DataArray"
  " {}\\r\\n\'\n\'\\r\\n\'\n\'; Matrices\\r\\n\'\n\'class Int8Matrix : DataMatrix {}\\r\\n\'\n\'class"
  " Int32Matrix : DataMatrix {}\\r\\n\'\n\'class Int64Matrix : DataMatrix {}\\r\\n\'\n\'class"
  " Float32Matrix : DataMatrix {}\\r\\n\'\n\'class Float64Matrix : DataMatrix"
  " {}\\r\\n\'\n\'\\r\\n\'\n\'; Base class for data arrays.\\r\\n\'\n\'class DataArray {\\r\\n\'\n\' "
  " method to_s() {\\r\\n\'\n\'    res = class().name() + \\\'([\\\'\\r\\n\'\n\'    l ="
  " len()\\r\\n\'\n\'    if l == 0 {\\r\\n\'\n\'      return res + \\\'])\\\'\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    if l < 8 {\\r\\n\'\n\'      for i = 0, i < l-1, i=i+1 {\\r\\n\'\n\'       "
  " res.extend(str(self[i]) + \\\', \\\')\\r\\n\'\n\'      }\\r\\n\'\n\'     "
  " res.extend(str(self[l-1]))\\r\\n\'\n\'    } else {\\r\\n\'\n\'      for i = 0, i < 5, i=i+1"
  " {\\r\\n\'\n\'        res.extend(str(self[i]) + \\\', \\\')\\r\\n\'\n\'      }\\r\\n\'\n\'     "
  " res.extend(\\\'...\\\' + str(self[l-1]))\\r\\n\'\n\'    }\\r\\n\'\n\'    return res +"
  " \\\'])\\\'\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Base class for data"
  " matrices.\\r\\n\'\n\'class DataMatrix {\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    res ="
  " class().name() + \\\'([\\\'\\r\\n\'\n\'    l = shape()[0]\\r\\n\'\n\'    if l == 0 {\\r\\n\'\n\'   "
  "   return res + \\\'])\\\'\\r\\n\'\n\'    }\\r\\n\'\n\'    res.extend(\\\'\\\\n  \\\')\\r\\n\'\n\'  "
  "  if l < 8 {\\r\\n\'\n\'      for i = 0, i < l-1, i=i+1 {\\r\\n\'\n\'       "
  " res.extend(str(self[i].to_arr()) + \\\',\\\\n  \\\')\\r\\n\'\n\'      }\\r\\n\'\n\'     "
  " res.extend(str(self[l-1].to_arr()))\\r\\n\'\n\'    } else {\\r\\n\'\n\'      for i = 0, i < 5,"
  " i=i+1 {\\r\\n\'\n\'        res.extend(str(self[i].to_arr()) + \\\',\\\\n  \\\')\\r\\n\'\n\'     "
  " }\\r\\n\'\n\'      res.extend(\\\'...\\\\n  \\\' + str(self[l-1].to_arr()))\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    return res + \\\']\\\\n  shape=\\\' + str(shape()) + \\\')\\\'\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\'\n"};

const char *LIB_dynamic[] = {
  "module dynamic\nsource \'lib/dynamic.zn\'\nlmdl error #0 7\nmset error #0 7\nexit"
  " 0\n@import_c_library\nif 2 #2 25\npush Object #2 25\nclln #2 25\npush #2 25\npeek #2 27\nget"
  " file_name #2 27\nlet file_name #2 27\npeek #2 38\nget module_name #2 38\nlet module_name #2 38\nres"
  " #2 25\nget init_fn_name #2 51\nlet init_fn_name #2 51\npush file_name #3 7\npush String #3 20\nis"
  " #3 17\nnot #3 5\nifn 4 #3 2\npush error #4 10\nres \'file_name must be a String\' #4 23\ncall Error"
  " #4 16\nrais #4 4\npush module_name #6 7\npush String #6 22\nis #6 19\nnot #6 5\nifn 4 #6 2\npush"
  " error #7 10\nres \'module_name must be a String\' #7 23\ncall Error #7 16\nrais #7 4\npush"
  " init_fn_name #9 7\npush String #9 23\nis #9 20\nnot #9 5\nifn 4 #9 2\npush error #10 10\nres"
  " \'init_fn_name must be a String\' #10 23\ncall Error #10 16\nrais #10 4\npush __open_c_lib #12"
  " 2\npush init_fn_name #12 39\npush module_name #12 26\npush file_name #12 15\ntupl 3 #12 24\ncall"
  " #12 14\nret #2 0\nbody\n\'import error\\r\\n\'\n\'\\r\\n\'\n\'function import_c_library({file_name,"
  " module_name, init_fn_name}) {\\r\\n\'\n\'  if ~(file_name is String) {\\r\\n\'\n\'    raise"
  " error.Error(\\\'file_name must be a String\\\')\\r\\n\'\n\'  }\\r\\n\'\n\'  if ~(module_name is"
  " String) {\\r\\n\'\n\'    raise error.Error(\\\'module_name must be a String\\\')\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  if ~(init_fn_name is String) {\\r\\n\'\n\'    raise error.Error(\\\'init_fn_name"
  " must be a String\\\')\\r\\n\'\n\'  }\\r\\n\'\n\'  __open_c_lib(file_name, module_name,"
  " init_fn_name)\\r\\n\'\n\'}\'\n"};

const char *LIB_error[] = {
  "module error\nsource \'lib/error.zn\'\nlmdl async #0 7\nmset async #0 7\nexit 0\nclass Token\nfield"
  " text\nfield line\nfield col\n@new\npush #2 6\npnil #3 12\nres self #3 12\nfld text #3 12\npnil #3"
  " 24\nres self #3 24\nfld line #3 24\npnil #3 36\nres self #3 36\nfld col #3 36\ntlen #3 12\neq -1 #3"
  " 12\nifn 11 #3 12\nres self #3 12\nfld text #3 12\nrnil #3 24\npush #3 24\nres self #3 24\nfld line"
  " #3 24\nrnil #3 36\npush #3 36\nres self #3 36\nfld col #3 36\njmp 15 #3 12\npeek #3 12\ntget 0 #3"
  " 5\npush #3 12\nres self #3 12\nfld text #3 12\npeek #3 24\ntget 1 #3 5\npush #3 24\nres self #3"
  " 24\nfld line #3 24\nres #3 5\ntget 2 #3 5\npush #3 36\nres self #3 36\nfld col #3 36\nres self #3"
  " 2\nret #3 2\n@to_s\npush cat #6 11\npush \')\' #6 71\npush col #6 65\npush \',col=\' #6 57\npush"
  " line #6 50\npush \'\\\',line=\' #6 39\npush text #6 32\npush \'Token(text=\\\'\' #6 16\ntupl 7 #6"
  " 30\ncall #6 14\nret #6 4\nendclass\nclass StackLine\n@token\npush __token #12 10\nclln #12 17\nset"
  " tok #12 4\nifn 4 #13 4\npush Token #14 13\nres tok #14 19\ncall #14 18\nret #14 6\npush Token #16"
  " 11\npush -1 #16 26\npush -1 #16 22\npush \'\' #16 18\ntupl 3 #16 19\ncall #16 16\nret #16"
  " 4\n@source_token\npush __source_token #19 10\nclln #19 24\nset tok #19 4\nifn 4 #20 4\npush Token"
  " #21 13\nres tok #21 19\ncall #21 18\nret #21 6\npush Token #23 11\npush -1 #23 26\npush -1 #23"
  " 22\npush \'\' #23 18\ntupl 3 #23 19\ncall #23 16\nret #23 4\n@has_source_map\npush __has_source_map"
  " #26 11\nclln #26 27\nret #26 4\n@to_s\npush has_source_map #29 13\nclln #29 27\nifn 3 #29 10\npush"
  " source_token #29 35\nclln #29 47\njmp 2 #29 10\npush token #29 55\nclln #29 60\nset tok #29 4\nrnil"
  " #30 18\nset module_name #30 4\nrnil #31 22\nset module_filename #31 4\npush module #32 7\nclln #32"
  " 13\nifn 11 #32 4\npush module #33 20\nclln #33 26\npush #33 28\nclln name #33 29\nset module_name"
  " #33 6\npush module #34 24\nclln #34 30\npush #34 32\nclln filename #34 33\nset module_filename #34"
  " 6\njmp 4 #32 4\nres \'<unknown-module>\' #36 21\nset module_name #36 6\nres \'<unknown-file>\' #37"
  " 25\nset module_filename #37 6\npush has_source_map #39 18\nclln #39 32\nifn 5 #39 15\npush module"
  " #39 40\nclln #39 46\npush #39 48\nclln source_filename #39 49\njmp 1 #39 15\nres module_filename"
  " #39 72\nset filename #39 4\npush function #40 11\nclln #40 19\nset func #40 4\npush color #41"
  " 13\nres \'31;1\' #41 20\ncall #41 18\npush #41 26\nres module_name #41 34\ncall extend #41 27\nset"
  " result #41 4\nres func #42 7\nifn 22 #42 4\npush func #43 9\nclln is_method #43 14\nifn 2 #43"
  " 26\npush func #43 30\nclln parent_class #43 35\nifn 9 #43 6\npush result #44 8\nres \'.\' #44"
  " 23\ncall extend #44 15\npush #44 26\npush func #44 34\nclln parent_class #44 39\npush #44 53\nclln"
  " name #44 54\ncall extend #44 27\npush result #46 6\nres \'.\' #46 21\ncall extend #46 13\npush #46"
  " 24\npush func #46 32\nclln name #46 37\ncall extend #46 25\npush result #48 11\nres \'(\' #48"
  " 26\ncall extend #48 18\npush #49 8\npush color #49 16\nres 0 #49 22\ncall #49 21\ncall extend #49"
  " 9\npush #50 8\npush str #50 16\nres filename #50 20\ncall #50 19\ncall extend #50 9\npush #51"
  " 8\nres \':\' #51 17\ncall extend #51 9\npush #52 8\npush str #52 16\nres tok #52 20\nget line #52"
  " 24\nadd 1 #52 31\ncall #52 19\ncall extend #52 9\npush #53 8\npush color #53 16\nres \'31;1\' #53"
  " 23\ncall #53 21\ncall extend #53 9\npush #54 8\nres \')\' #54 17\ncall extend #54 9\npush #55"
  " 8\npush color #55 16\nres 0 #55 22\ncall #55 21\ncall extend #55 9\nret #48 4\nendclass\nclass"
  " Error\n@to_s\npush cat #61 13\npush \'\\n\' #61 69\npush message #61 59\npush \': \' #61 54\npush"
  " self #61 32\nclln class #61 37\npush #61 44\nclln name #61 45\npush #61 30\npush color #61 17\nres"
  " \'31;1\' #61 24\ncall #61 22\npush #61 30\ntupl 5 #61 30\ncall #61 16\nset result #61 4\npush"
  " stacktrace #62 7\naidx 0 #62 18\npush #62 20\nclln linetext #62 21\nifn 131 #62 4\npush stacktrace"
  " #63 18\naidx 0 #63 29\nset stackline #63 6\npush #64 22\nclln has_source_map #64 32\nset"
  " has_sourcemap #64 6\nifn 3 #65 20\npush stackline #65 42\nclln source_token #65 52\njmp 2 #65"
  " 20\npush stackline #65 72\nclln token #65 82\nset error_token #65 6\npush _token_left_padding #66"
  " 21\nres error_token #66 41\ncall #66 40\nset left_padding #66 6\npush result #67 6\npush str #67"
  " 20\nres error_token #67 24\nget line #67 36\nadd 1 #67 43\ncall #67 23\ncall extend #67 13\npush"
  " #67 46\nres \':\' #67 55\ncall extend #67 47\npush result #68 6\npush color #68 20\nres 0 #68"
  " 26\ncall #68 25\ncall extend #68 13\nres has_sourcemap #69 21\nifn 3 #69 18\npush stackline #69"
  " 40\nclln source_linetext #69 50\njmp 2 #69 18\npush stackline #69 73\nclln linetext #69 83\nset"
  " line_text #69 6\nifn 79 #70 6\npush result #71 8\npush line_text #71 22\nres error_token #71"
  " 42\ngtsh col #71 54\npush 0 #71 39\ntupl 2 #71 40\ncall substr #71 32\ncall extend #71 15\npush #72"
  " 12\npush color #72 20\nres \'41;1\' #72 27\ncall #72 25\ncall extend #72 13\npush #73 12\npush"
  " line_text #73 20\nres error_token #73 54\ngtsh text #73 66\nclln len #73 71\npush #73 52\nres"
  " error_token #73 37\ngtsh col #73 49\ntupl 2 #73 52\ncall substr #73 30\ncall extend #73 13\npush"
  " #74 12\npush color #74 20\nres 0 #74 26\ncall #74 25\ncall extend #74 13\npush #75 12\npush"
  " line_text #75 20\nres error_token #75 37\ngtsh col #75 49\nres error_token #75 55\ngtsh text #75"
  " 67\nclln len #75 72\npush #75 53\nadd #75 53\ncall substr #75 30\ncall extend #75 13\nnblk #76"
  " 8\nres 0 #76 14\nset i #76 12\nres i #76 17\nlt left_padding #76 21\nifn 5 #76 8\npush result #77"
  " 10\nres \' \' #77 25\ncall extend #77 17\ninc i #76 37\njmp -8 #76 8\nbblk #76 8\npush result #79"
  " 8\npush color #79 22\nres 0 #79 28\ncall #79 27\ncall extend #79 15\nnblk #80 8\nres 0 #80 14\nset"
  " i #80 12\npush i #80 17\nres error_token #80 21\ngtsh text #80 33\nclln len #80 38\npush #80 19\nlt"
  " #80 19\nifn 5 #80 8\npush result #81 10\nres \'^\' #81 25\ncall extend #81 17\ninc i #80 47\njmp"
  " -12 #80 8\nbblk #80 8\npush result #83 8\npush color #83 22\nres \'31;1\' #83 29\ncall #83 27\ncall"
  " extend #83 15\njmp 3 #70 6\npush result #85 8\nres \' <missing-line>\' #85 23\ncall extend #85"
  " 15\npush result #87 6\npush color #87 20\nres \'31;1\' #87 27\ncall #87 25\ncall extend #87"
  " 13\npush #88 10\nres \'\\n\' #88 19\ncall extend #88 11\nnblk #90 4\nres 0 #90 10\nset i #90"
  " 8\npush i #90 13\npush stacktrace #90 15\nclln len #90 26\npush #90 14\nlt #90 14\nifn 14 #90"
  " 4\npush result #91 6\nres \'  \' #91 21\ncall extend #91 13\npush #91 25\npush str #91 33\npush"
  " stacktrace #91 37\naidx i #91 48\ncall #91 36\ncall extend #91 26\npush #91 52\nres \'\\n\' #91"
  " 61\ncall extend #91 53\ninc i #90 35\njmp -20 #90 4\nbblk #90 4\npush result #93 11\npush color #93"
  " 20\nres 0 #93 26\ncall #93 25\npush #93 18\nadd #93 18\nret #93"
  " 4\nendclass\n@_token_left_padding\nlet token #98 29\nres 1 #99 20\nset line_text_space #99 2\nres"
  " token #100 5\nget line #100 11\ngte 9999 #100 19\nif 21 #100 2\nres token #102 12\nget line #102"
  " 18\ngte 999 #102 26\nif 14 #102 9\nres token #104 12\nget line #104 18\ngte 99 #104 26\nif 7 #104"
  " 9\nres token #106 12\nget line #106 18\ngte 9 #106 26\nifn 11 #106 9\nres 2 #107 22\nset"
  " line_text_space #107 4\njmp 8 #106 9\nres 3 #105 22\nset line_text_space #105 4\njmp 5 #104 9\nres"
  " 4 #103 22\nset line_text_space #103 4\njmp 2 #102 9\nres 5 #101 22\nset line_text_space #101 4\nres"
  " token #110 9\nget col #110 15\nadd line_text_space #110 21\nadd 1 #110 39\nret #110"
  " 2\nbody\n\'import async ; keep\\r\\n\'\n\'\\r\\n\'\n\'class Token {\\r\\n\'\n\'  new(field text,"
  " field line, field col) {}\\r\\n\'\n\'\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    return"
  " cat(\\\'Token(text=\\\\\\\'\\\', text, \\\'\\\\\\\',line=\\\', line, \\\',col=\\\', col,"
  " \\\')\\\')\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class StackLine {\\r\\n\'\n\'  method"
  " token() {\\r\\n\'\n\'    tok = __token()\\r\\n\'\n\'    if tok {\\r\\n\'\n\'      return"
  " Token(tok)\\r\\n\'\n\'    }\\r\\n\'\n\'    return Token(\\\'\\\', -1, -1)\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  method source_token() {\\r\\n\'\n\'    tok = __source_token()\\r\\n\'\n\'    if tok"
  " {\\r\\n\'\n\'      return Token(tok)\\r\\n\'\n\'    }\\r\\n\'\n\'    return Token(\\\'\\\', -1,"
  " -1)\\r\\n\'\n\'  }\\r\\n\'\n\'  method has_source_map() {\\r\\n\'\n\'    return"
  " __has_source_map()\\r\\n\'\n\'  }\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    tok = if"
  " has_source_map() then source_token() else token()\\r\\n\'\n\'    module_name = None\\r\\n\'\n\'   "
  " module_filename = None\\r\\n\'\n\'    if module() {\\r\\n\'\n\'      module_name ="
  " module().name()\\r\\n\'\n\'      module_filename = module().filename()\\r\\n\'\n\'    } else"
  " {\\r\\n\'\n\'      module_name = \\\'<unknown-module>\\\'\\r\\n\'\n\'      module_filename ="
  " \\\'<unknown-file>\\\'\\r\\n\'\n\'    }\\r\\n\'\n\'    filename = if has_source_map() then"
  " module().source_filename() else module_filename\\r\\n\'\n\'    func = function()\\r\\n\'\n\'   "
  " result = color(\\\'31;1\\\').extend(module_name)\\r\\n\'\n\'    if func {\\r\\n\'\n\'      if"
  " func.is_method() and func.parent_class() {\\r\\n\'\n\'       "
  " result.extend(\\\'.\\\').extend(func.parent_class().name())\\r\\n\'\n\'      }\\r\\n\'\n\'     "
  " result.extend(\\\'.\\\').extend(func.name())\\r\\n\'\n\'    }\\r\\n\'\n\'    return"
  " result.extend(\\\'(\\\')\\r\\n\'\n\'        .extend(color(0))\\r\\n\'\n\'       "
  " .extend(str(filename))\\r\\n\'\n\'        .extend(\\\':\\\')\\r\\n\'\n\'       "
  " .extend(str(tok.line + 1))\\r\\n\'\n\'        .extend(color(\\\'31;1\\\'))\\r\\n\'\n\'       "
  " .extend(\\\')\\\')\\r\\n\'\n\'        .extend(color(0))\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class Error {\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'   "
  " result = cat(color(\\\'31;1\\\'), self.class().name(), \\\': \\\', message,"
  " \\\'\\\\n\\\')\\r\\n\'\n\'    if stacktrace[0].linetext() {\\r\\n\'\n\'      stackline ="
  " stacktrace[0]\\r\\n\'\n\'      has_sourcemap = stackline.has_source_map()\\r\\n\'\n\'     "
  " error_token = if has_sourcemap then stackline.source_token() else stackline.token()\\r\\n\'\n\'    "
  "  left_padding = _token_left_padding(error_token)\\r\\n\'\n\'     "
  " result.extend(str(error_token.line + 1)).extend(\\\':\\\')\\r\\n\'\n\'     "
  " result.extend(color(0))\\r\\n\'\n\'      line_text = if has_sourcemap then"
  " stackline.source_linetext() else stackline.linetext()\\r\\n\'\n\'      if line_text {\\r\\n\'\n\'  "
  "      result.extend(line_text.substr(0, error_token.col))\\r\\n\'\n\'           "
  " .extend(color(\\\'41;1\\\'))\\r\\n\'\n\'            .extend(line_text.substr(error_token.col,"
  " error_token.text.len()))\\r\\n\'\n\'            .extend(color(0))\\r\\n\'\n\'           "
  " .extend(line_text.substr(error_token.col + error_token.text.len()))\\r\\n\'\n\'        for i=0, i <"
  " left_padding, i=i+1 {\\r\\n\'\n\'          result.extend(\\\' \\\')\\r\\n\'\n\'       "
  " }\\r\\n\'\n\'        result.extend(color(0))\\r\\n\'\n\'        for i=0, i <"
  " error_token.text.len(), i=i+1 {\\r\\n\'\n\'          result.extend(\\\'^\\\')\\r\\n\'\n\'       "
  " }\\r\\n\'\n\'        result.extend(color(\\\'31;1\\\'))\\r\\n\'\n\'      } else {\\r\\n\'\n\'      "
  "  result.extend(\\\' <missing-line>\\\')\\r\\n\'\n\'      }\\r\\n\'\n\'     "
  " result.extend(color(\\\'31;1\\\'))\\r\\n\'\n\'          .extend(\\\'\\\\n\\\')\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    for i=0, i<stacktrace.len(), i=i+1 {\\r\\n\'\n\'      result.extend(\\\' "
  " \\\').extend(str(stacktrace[i])).extend(\\\'\\\\n\\\')  \\r\\n\'\n\'    }\\r\\n\'\n\'    return"
  " result + color(0)\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Left padding should be"
  " \\\'<chars for row num>:<token col>\\\'\\r\\n\'\n\'function _token_left_padding(token)"
  " {\\r\\n\'\n\'  line_text_space = 1\\r\\n\'\n\'  if token.line >= 9999 {\\r\\n\'\n\'   "
  " line_text_space = 5\\r\\n\'\n\'  } else if token.line >= 999 {\\r\\n\'\n\'    line_text_space ="
  " 4\\r\\n\'\n\'  } else if token.line >= 99 {\\r\\n\'\n\'    line_text_space = 3\\r\\n\'\n\'  } else"
  " if token.line >= 9 {\\r\\n\'\n\'    line_text_space = 2\\r\\n\'\n\'  }\\r\\n\'\n\'  ; +1 for the"
  " colon.\\r\\n\'\n\'  return token.col + line_text_space + 1\\r\\n\'\n\'}\\r\\n\'\n"};

const char *LIB_inject[] = {
  "module inject\nsource \'lib/inject.zn\'\nlmdl builtin #0 7\nmset builtin #0 7\nlmdl error #1 7\nmset"
  " error #1 7\nexit 0\nclass Injector\nfield keys_to_providers\nfield keys_to_singletons\n@new\npush"
  " #28 6\npnil #29 8\nres self #29 8\nfld keys_to_providers #29 8\npnil #29 27\nres self #29 27\nfld"
  " keys_to_singletons #29 27\nres #28 6\npush struct #31 24\nclln Map #31 24\nset keys_to_providers"
  " #31 4\npush struct #32 25\nclln Map #32 25\nset keys_to_singletons #32 4\nres self #30 2\nret #30"
  " 2\n@get\nlet key #40 13\npush struct #41 22\nclln Map #41 22\nset constructed_map #41 4\nnblk #43"
  " 4\npush keys_to_singletons #43 18\ncall iter #43 15\npush #43 15\ndup #43 15\ncall has_next #43"
  " 15\nifn 13 #43 15\ndup #43 4\ncall next #43 15\npush #43 15\ndup #43 15\naidx 0 #43 15\nset k #43"
  " 9\naidx 1 #43 15\nset v #43 12\npush #44 27\npush constructed_map #44 6\nres k #44 22\naset #44"
  " 21\njmp -16 #43 15\nres #43 15\nbblk #43 4\npush _get #46 13\npush key #46 35\npush constructed_map"
  " #46 18\ntupl 2 #46 33\ncall #46 17\nset result #46 4\nret #47 4\n@_get\npush #49 13\ntlen #49"
  " 14\neq -1 #49 14\nifn 5 #49 14\nres #49 14\nlet constructed_map #49 14\nrnil #49 31\nlet key #49"
  " 31\njmp 6 #49 14\npeek #49 14\ntget 0 #49 13\nlet constructed_map #49 14\nres #49 13\ntget 1 #49"
  " 13\nlet key #49 31\npush key #50 7\npush Key #50 14\nis #50 11\nifn 70 #50 4\npush constructed_map"
  " #51 15\naidx key #51 31\nset result #51 6\nifn 2 #52 6\nres result #53 15\nret #53 8\npush"
  " keys_to_providers #55 17\naidx key #55 35\nset provider #55 6\npush #56 10\npush Function #56"
  " 22\nis #56 19\nif 3 #56 32\npush provider #56 36\npush FunctionRef #56 48\nis #56 45\nif 22 #56"
  " 6\npush provider #58 16\npush Class #58 28\nis #58 25\nif 10 #58 13\nres provider #60 17\nnot #60"
  " 16\nifn 23 #60 13\npush _provide_class #61 17\npush key #61 49\npush constructed_map #61 32\ntupl 2"
  " #61 47\ncall #61 31\nset result #61 8\njmp 25 #60 13\npush _provide_class #59 17\npush provider #59"
  " 54\npush key #59 49\npush constructed_map #59 32\ntupl 3 #59 47\ncall #59 31\nset result #59 8\njmp"
  " 17 #58 13\npush _provide_function #57 17\npush provider #57 57\npush key #57 52\npush"
  " constructed_map #57 35\ntupl 3 #57 50\ncall #57 34\nset result #57 8\njmp 9 #56 6\npush error #63"
  " 14\npush \'Expected provider as a Function or Class but was \' #63 27\npush str #63 80\nres cls #63"
  " 84\ncall #63 83\npush #63 78\nadd #63 78\ncall Error #63 20\nrais #63 8\npush _is_singleton #65"
  " 9\nres key #65 23\ncall #65 22\nifn 4 #65 6\npush result #66 34\npush keys_to_singletons #66 8\nres"
  " key #66 27\naset #66 26\npush result #68 29\npush constructed_map #68 6\nres key #68 22\naset #68"
  " 21\nres result #69 13\nret #69 6\npush key #71 7\npush Class #71 14\nis #71 11\nifn 14 #71 4\nres"
  " key #72 9\neq Injector #72 16\nifn 2 #72 6\nres self #73 15\nret #73 8\npush _get #75 13\npush Key"
  " #75 35\nres key #75 39\ncall #75 38\npush #75 33\npush constructed_map #75 18\ntupl 2 #75 33\ncall"
  " #75 17\nret #75 6\npush key #77 7\npush Provider #77 14\nis #77 11\nifn 8 #77 4\njmp 5 #78"
  " 13\n@$anon_78_13\npush get #78 18\nres key #78 22\nget key #78 26\ncall #78 21\nret #78 13\nres"
  " $anon_78_13 #78 13\nret #78 6\npush error #80 10\npush \'Expected key or class but was \' #80"
  " 23\npush str #80 57\nres cls #80 61\ncall #80 60\npush #80 55\nadd #80 55\ncall Error #80 16\nrais"
  " #80 4\nret #49 2\n@_is_singleton\nlet key #82 23\ngtsh cls #83 11\nclln all_annotations #83"
  " 15\npush #83 32\njmp 5 #83 37\n@$anon_83_37\nlet a #83 37\npush #83 42\npush Singleton #83 47\nis"
  " #83 44\nret #83 37\nres $anon_83_37 #83 37\ncall has #83 33\nifn 2 #83 4\nrtru #84 13\nret #84"
  " 6\npush keys_to_providers #86 15\naidx key #86 33\nset provider #86 4\npush #87 8\npush FunctionRef"
  " #87 20\nis #87 17\nifn 11 #87 33\npush provider #87 37\nclln func #87 46\ngtsh annotations #87"
  " 53\njmp 5 #87 69\n@$anon_87_69\nlet a #87 69\npush #87 74\npush Singleton #87 79\nis #87 76\nret"
  " #87 69\nres $anon_87_69 #87 69\ncall has #87 65\nif 37 #87 4\npush provider #89 15\npush Function"
  " #89 27\nis #89 24\nifn 10 #89 37\nres provider #89 41\ngtsh annotations #89 50\njmp 5 #89"
  " 66\n@$anon_89_66\nlet a #89 66\npush #89 71\npush Singleton #89 76\nis #89 73\nret #89 66\nres"
  " $anon_89_66 #89 66\ncall has #89 62\nif 19 #89 11\npush provider #91 15\npush Class #91 27\nis #91"
  " 24\nifn 11 #91 34\npush provider #91 38\nclln all_annotations #91 47\npush #91 64\njmp 5 #91"
  " 69\n@$anon_91_69\nlet a #91 69\npush #91 74\npush Singleton #91 79\nis #91 76\nret #91 69\nres"
  " $anon_91_69 #91 69\ncall has #91 65\nifn 8 #91 11\nrtru #92 13\nret #92 6\njmp 5 #91 11\nrtru #90"
  " 13\nret #90 6\njmp 2 #89 11\nrtru #88 13\nret #88 6\nrfls #94 11\nret #94"
  " 4\n@_provide_function\npush #96 26\ntlen #96 27\neq -1 #96 27\nifn 7 #96 27\nres #96 27\nlet"
  " constructed_map #96 27\nrnil #96 44\nlet key #96 44\nrnil #96 49\nlet provider #96 49\njmp 9 #96"
  " 27\npeek #96 27\ntget 0 #96 26\nlet constructed_map #96 27\npeek #96 44\ntget 1 #96 26\nlet key #96"
  " 44\nres #96 26\ntget 2 #96 26\nlet provider #96 49\nrnil #97 22\nset provides_annots #97 4\npush"
  " provider #98 7\npush FunctionRef #98 19\nis #98 16\nifn 13 #98 4\npush provider #99 24\nclln func"
  " #99 33\ngtsh annotations #99 40\njmp 5 #99 58\n@$anon_99_58\nlet a #99 58\npush #99 63\npush"
  " Provides #99 68\nis #99 65\nret #99 58\nres $anon_99_58 #99 58\ncall where #99 52\nset"
  " provides_annots #99 6\njmp 11 #98 4\nres provider #101 24\ngtsh annotations #101 33\njmp 5 #101"
  " 51\n@$anon_101_51\nlet a #101 51\npush #101 56\npush Provides #101 61\nis #101 58\nret #101 51\nres"
  " $anon_101_51 #101 51\ncall where #101 45\nset provides_annots #101 6\npush provides_annots #103"
  " 7\nclln len #103 23\ngt 1 #103 31\nif 46 #103 4\npush provides_annots #105 14\nclln len #105 30\neq"
  " 1 #105 39\nifn 52 #105 11\npush provides_annots #106 23\naidx 0 #106 39\nset provides_annot #106"
  " 6\nanew #107 13\nset args #107 6\npush _get_keys #108 22\nres provides_annot #108 32\nget params"
  " #108 47\ncall #108 31\nset provider_keys #108 6\nnblk #109 6\npush provider_keys #109 26\ncall iter"
  " #109 23\npush #109 23\ndup #109 23\ncall has_next #109 23\nifn 16 #109 23\ndup #109 6\ncall next"
  " #109 23\npush #109 23\ndup #109 23\naidx 0 #109 23\nset _ #109 11\naidx 1 #109 23\nset arg_key #109"
  " 14\npush args #110 8\npush _get #110 20\npush arg_key #110 42\npush constructed_map #110 25\ntupl 2"
  " #110 40\ncall #110 24\ncall append #110 13\njmp -19 #109 23\nres #109 23\nbblk #109 6\npush"
  " provider #112 13\npush _create_args #112 22\nres args #112 35\ncall #112 34\ncall #112 21\nret #112"
  " 6\njmp 10 #105 11\npush error #104 12\npush \'Expected at most 1 @Provides, but there were \' #104"
  " 25\npush str #104 74\npush provides_annots #104 78\nclln len #104 94\ncall #104 77\npush #104"
  " 72\nadd #104 72\ncall Error #104 18\nrais #104 6\npush provider #114 11\nclln #114 19\nret #114"
  " 4\n@_provide_class\npush #116 23\ntlen #116 24\neq -1 #116 24\nifn 7 #116 24\nres #116 24\nlet"
  " constructed_map #116 24\nrnil #116 41\nlet key #116 41\nrnil #116 55\nlet provider #116 46\njmp 14"
  " #116 24\npeek #116 24\ntget 0 #116 23\nlet constructed_map #116 24\npeek #116 41\ntget 1 #116"
  " 23\nlet key #116 41\npeek #116 23\ntgte 3 #116 46\nifn 3 #116 46\nres #116 46\ntget 2 #116 23\njmp"
  " 1 #116 46\nrnil #116 55\nlet provider #116 46\nres provider #117 8\nnot #117 7\nifn 3 #117 4\nres"
  " key #118 17\nget cls #118 21\nset provider #118 6\npush _get_args #120 11\npush provider #120"
  " 38\npush constructed_map #120 21\ntupl 2 #120 36\ncall #120 20\nset args #120 4\nifn 4 #121"
  " 11\npush provider #121 24\nres args #121 33\ncall #121 32\njmp 2 #121 11\npush provider #121"
  " 44\nclln #121 52\nret #121 4\n@_get_args\npush #123 18\ntlen #123 19\neq -1 #123 19\nifn 5 #123"
  " 19\nres #123 19\nlet constructed_map #123 19\nrnil #123 36\nlet cls #123 36\njmp 6 #123 19\npeek"
  " #123 19\ntget 0 #123 18\nlet constructed_map #123 19\nres #123 18\ntget 1 #123 18\nlet cls #123"
  " 36\npush cls #124 20\nclln all_annotations #124 24\npush #124 41\njmp 5 #124 48\n@$anon_124_48\nlet"
  " a #124 48\npush #124 53\npush Inject #124 58\nis #124 55\nret #124 48\nres $anon_124_48 #124"
  " 48\ncall where #124 42\nset inject_annots #124 4\npush #125 7\nclln len #125 21\ngt 1 #125 29\nif"
  " 44 #125 4\npush inject_annots #127 14\nclln len #127 28\neq 1 #127 37\nifn 50 #127 11\npush"
  " inject_annots #128 21\naidx 0 #128 35\nset inject_annot #128 6\nanew #129 13\nset args #129 6\npush"
  " _get_keys #130 20\nres inject_annot #130 30\nget keys #130 43\ncall #130 29\nset inject_keys #130"
  " 6\nnblk #131 6\npush inject_keys #131 26\ncall iter #131 23\npush #131 23\ndup #131 23\ncall"
  " has_next #131 23\nifn 16 #131 23\ndup #131 6\ncall next #131 23\npush #131 23\ndup #131 23\naidx 0"
  " #131 23\nset _ #131 11\naidx 1 #131 23\nset arg_key #131 14\npush args #132 8\npush _get #132"
  " 20\npush arg_key #132 42\npush constructed_map #132 25\ntupl 2 #132 40\ncall #132 24\ncall append"
  " #132 13\njmp -19 #131 23\nres #131 23\nbblk #131 6\npush _create_args #134 13\nres args #134"
  " 26\ncall #134 25\nret #134 6\njmp 10 #127 11\npush error #126 12\npush \'Expected at most 1"
  " @Inject, but there were \' #126 25\npush str #126 72\npush inject_annots #126 76\nclln len #126"
  " 90\ncall #126 75\npush #126 70\nadd #126 70\ncall Error #126 18\nrais #126 6\nret #123"
  " 2\n@_create_args\nlet args #137 22\nnot #138 7\nif 5 #138 13\npush args #138 16\nclln len #138"
  " 21\npush #138 27\npush 0 #138 30\neq #138 27\nifn 2 #138 4\nrnil #139 13\nret #139 6\npush args"
  " #141 7\nclln len #141 12\neq 1 #141 21\nifn 3 #141 4\npush args #142 13\naidx 0 #142 18\nret #142"
  " 6\npush tuple #144 11\nres args #144 17\ncall #144 16\nret #144 4\n@install\npush #147 16\ntlen"
  " #147 17\neq -1 #147 17\nifn 4 #147 17\nres #147 17\nlet key #147 17\nlet provider #147 22\njmp 11"
  " #147 17\npeek #147 17\ntget 0 #147 16\nlet key #147 17\npeek #147 16\ntgte 2 #147 22\nifn 3 #147"
  " 22\nres #147 22\ntget 1 #147 16\njmp 1 #147 22\nres key #147 31\nlet provider #147 22\npush key"
  " #148 7\npush ProviderSet #148 14\nis #148 11\nifn 4 #148 4\npush _install_provider_set #149 6\nres"
  " key #149 28\ncall #149 27\njmp 5 #148 4\npush _install_by_key #151 6\npush provider #151 27\npush"
  " key #151 22\ntupl 2 #151 25\ncall #151 21\nres self #153 11\nret #153 4\n@_install_by_key\npush"
  " #156 24\ntlen #156 25\neq -1 #156 25\nifn 5 #156 25\nres #156 25\nlet key #156 25\nrnil #156"
  " 30\nlet provider #156 30\njmp 6 #156 25\npeek #156 25\ntget 0 #156 24\nlet key #156 25\nres #156"
  " 24\ntget 1 #156 24\nlet provider #156 30\npush key #157 9\npush Key #157 16\nis #157 13\nnot #157"
  " 7\nifn 4 #157 4\npush Key #158 12\nres key #158 16\ncall #158 15\nset key #158 6\npush provider"
  " #160 29\npush keys_to_providers #160 4\nres key #160 22\naset #160 21\nret #156"
  " 2\n@_install_provider_set\nlet ps #163 31\nget init #164 10\nifn 2 #164 4\npush ps #165 6\nclln"
  " init #165 9\nnblk #167 4\npush ps #167 21\nclln class #167 24\npush #167 31\nclln methods #167"
  " 32\npush #167 18\ncall iter #167 18\npush #167 18\ndup #167 18\ncall has_next #167 18\nifn 35 #167"
  " 18\ndup #167 4\ncall next #167 18\npush #167 18\ndup #167 18\naidx 0 #167 18\nset _ #167 9\naidx 1"
  " #167 18\nset meth #167 12\ngtsh annotations #168 29\njmp 5 #168 47\n@$anon_168_47\nlet a #168"
  " 47\npush #168 52\npush Provides #168 57\nis #168 54\nret #168 47\nres $anon_168_47 #168 47\ncall"
  " where #168 41\nset provides_annots #168 6\npush #169 9\nclln len #169 25\neq 0 #169 34\nifn 1 #169"
  " 6\njmp 11 #170 8\npush install #172 6\npush ps #172 38\npush meth #172 46\nclln name #172 51\ncall"
  " $get #172 41\npush #172 36\npush provides_annots #172 14\naidx 0 #172 30\ngtsh key #172 33\ntupl 2"
  " #172 36\ncall #172 13\njmp -38 #167 18\nres #167 18\nbblk #167 4\nnblk #174 4\nres ps #174 24\ngtsh"
  " _bind_map #174 27\ncall iter #174 21\npush #174 21\ndup #174 21\ncall has_next #174 21\nifn 14 #174"
  " 21\ndup #174 4\ncall next #174 21\npush #174 21\ndup #174 21\naidx 0 #174 21\nset key #174 9\naidx"
  " 1 #174 21\nset value #174 14\npush install #175 6\npush value #175 19\npush key #175 14\ntupl 2"
  " #175 17\ncall #175 13\njmp -17 #174 21\nres #174 21\nbblk #174 4\nnblk #177 4\nres ps #177 25\ngtsh"
  " _subsets #177 28\ncall iter #177 22\npush #177 22\ndup #177 22\ncall has_next #177 22\nifn 12 #177"
  " 22\ndup #177 4\ncall next #177 22\npush #177 22\ndup #177 22\naidx 0 #177 22\nset _ #177 9\naidx 1"
  " #177 22\nset child_ps #177 12\npush _install_provider_set #178 6\nres child_ps #178 28\ncall #178"
  " 27\njmp -15 #177 22\nres #177 22\nbblk #177 4\nret #163 2\n@_get_keys\nlet keys #182 19\npush #183"
  " 8\npush Array #183 16\nis #183 13\nif 3 #183 23\npush keys #183 27\npush Tuple #183 35\nis #183"
  " 32\nifn 2 #183 4\nres keys #184 13\nret #184 6\npush keys #186 12\nanew 1 #186 11\nret #186"
  " 4\nendclass\nclass Provider\nfield key\n@new\npush #194 6\npnil #195 12\nres self #195 12\nfld key"
  " #195 12\nres self #195 12\nfld key #195 12\nres self #195 2\nret #195 2\nendclass\nclass"
  " Singleton\n@annotate\nlet _ #200 34\nret #200 18\nendclass\nclass Key\nfield cls\nfield"
  " annot\n@new\npush #203 6\npnil #204 12\nres self #204 12\nfld cls #204 12\npnil #204 23\nres self"
  " #204 23\nfld annot #204 23\ntlen #204 12\neq -1 #204 12\nifn 7 #204 12\nres self #204 12\nfld cls"
  " #204 12\nrnil #204 29\npush #204 23\nres self #204 23\nfld annot #204 23\njmp 15 #204 12\npeek #204"
  " 12\ntget 0 #204 5\npush #204 12\nres self #204 12\nfld cls #204 12\npeek #204 5\ntgte 2 #204"
  " 23\nifn 3 #204 23\nres #204 23\ntget 1 #204 5\njmp 1 #204 23\nrnil #204 29\npush #204 23\nres self"
  " #204 23\nfld annot #204 23\nres self #204 2\nret #204 2\n@__eq__\nlet other #205 12\npush cls #206"
  " 4\nres other #206 11\ngtsh cls #206 17\neq #206 8\nifn 4 #206 21\npush annot #206 25\nres other"
  " #206 34\ngtsh annot #206 40\neq #206 31\nret #205 2\n@hash\npush builtin #209 4\nres cls #209"
  " 17\ncall hash #209 12\npush #209 22\npush builtin #209 24\nres annot #209 37\ncall hash #209"
  " 32\npush #209 22\nadd #209 22\nret #208 2\n@to_s\nres annot #212 7\nifn 9 #212 4\npush cat #213"
  " 13\npush \')\' #213 53\npush annot #213 45\npush \',annot=\' #213 35\npush cls #213 29\npush"
  " \'Key(cls=\' #213 18\ntupl 5 #213 27\ncall #213 16\nret #213 6\npush cat #215 11\npush \')\' #215"
  " 33\npush cls #215 27\npush \'Key(cls=\' #215 16\ntupl 3 #215 25\ncall #215 14\nret #215"
  " 4\nendclass\nclass Inject\nfield keys\nfield singleton\n@new\npush #221 6\npnil #222 13\nres self"
  " #222 13\nfld keys #222 13\npnil #222 25\nres self #222 25\nfld singleton #222 25\nres #221 6\nif 2"
  " #222 5\npush Object #222 5\nclln #222 5\npush #222 5\npeek #222 13\ngtsh keys #222 13\nres self"
  " #222 13\nfld keys #222 13\npeek #222 5\nget singleton #222 25\nif 1 #222 25\nrfls #222 35\npush"
  " #222 25\nres self #222 25\nfld singleton #222 25\nres self #222 2\nret #222 2\n@annotate\nlet cls"
  " #223 18\nres singleton #224 7\nifn 6 #224 4\npush cls #225 6\nclln all_annotations #225 10\npush"
  " #225 27\npush Singleton #225 35\nclln #225 44\ncall append #225 28\nret #223 2\n@to_s\npush cat"
  " #229 4\npush \')\' #229 31\npush keys #229 24\npush \'Inject(keys=\' #229 9\ntupl 3 #229 22\ncall"
  " #229 7\nret #228 2\nendclass\nclass Provides\nfield key\nfield params\nfield singleton\n@new\npush"
  " #235 6\npnil #236 13\nres self #236 13\nfld key #236 13\npnil #236 24\nres self #236 24\nfld params"
  " #236 24\npnil #236 41\nres self #236 41\nfld singleton #236 41\nres #235 6\nif 2 #236 5\npush"
  " Object #236 5\nclln #236 5\npush #236 5\npeek #236 13\ngtsh key #236 13\nres self #236 13\nfld key"
  " #236 13\npeek #236 5\nget params #236 24\nif 1 #236 24\nanew #236 31\npush #236 24\nres self #236"
  " 24\nfld params #236 24\npeek #236 5\nget singleton #236 41\nif 1 #236 41\nrfls #236 51\npush #236"
  " 41\nres self #236 41\nfld singleton #236 41\nres self #236 2\nret #236 2\n@annotate\nlet func #237"
  " 18\nres singleton #238 7\nifn 5 #238 4\nres func #239 6\ngtsh annotations #239 11\npush Singleton"
  " #239 30\nclln #239 39\ncall append #239 23\nret #237 2\n@to_s\npush cat #243 4\npush \')\' #243"
  " 51\npush params #243 42\npush \',params=\' #243 31\npush key #243 25\npush \'Provides(key=\' #243"
  " 9\ntupl 5 #243 23\ncall #243 7\nret #242 2\nendclass\nclass ProviderSet\nfield _bind_map\nfield"
  " _subsets\n@new\npush #248 6\npnil #249 8\nres self #249 8\nfld _bind_map #249 8\npnil #249 19\nres"
  " self #249 19\nfld _subsets #249 19\nres #248 6\npush struct #251 16\nclln Map #251 16\nset"
  " _bind_map #251 4\nanew #252 15\nset _subsets #252 4\nres self #250 2\nret #250 2\n@bind\npush #257"
  " 13\ntlen #257 14\neq -1 #257 14\nifn 4 #257 14\nres #257 14\nlet from #257 14\nlet to #257 20\njmp"
  " 11 #257 14\npeek #257 14\ntget 0 #257 13\nlet from #257 14\npeek #257 13\ntgte 2 #257 20\nifn 3"
  " #257 20\nres #257 20\ntget 1 #257 13\njmp 1 #257 20\nres from #257 23\nlet to #257 20\npush to #258"
  " 22\npush _bind_map #258 4\nres from #258 14\naset #258 13\nret #257 2\n@install\nlet ps #261"
  " 17\npush _subsets #262 4\nres ps #262 20\ncall append #262 13\nret #261 2\nendclass\nbody\n\'import"
  " builtin\\r\\n\'\n\'import error\\r\\n\'\n\'\\r\\n\'\n\'; Dependency injector that will inject all"
  " dependencies into the classes it\\r\\n\'\n\'; creates using the given installed modules and"
  " properly-annotated classes.\\r\\n\'\n\';\\r\\n\'\n\'; Example:\\r\\n\'\n\'; ```\\r\\n\'\n\'; class"
  " Class1 {}\\r\\n\'\n\'; class Class2 {\\r\\n\'\n\';   new(field class1) {}\\r\\n\'\n\';"
  " }\\r\\n\'\n\';\\r\\n\'\n\'; @inject.Inject(keys: [Class1, Class2])\\r\\n\'\n\'; class Class3"
  " {\\r\\n\'\n\';   new(field class1, field class2) {}\\r\\n\'\n\'; }\\r\\n\'\n\';\\r\\n\'\n\'; class"
  " ProviderSet1 : inject.ProviderSet {\\r\\n\'\n\';   @inject.Provides(key: Class2, params:"
  " [Class1])\\r\\n\'\n\';   method provide_class2(class1) {\\r\\n\'\n\';     return"
  " Class2(class1)\\r\\n\'\n\';   }\\r\\n\'\n\'; }\\r\\n\'\n\';\\r\\n\'\n\'; injector ="
  " inject.Injector().install(ProviderSet1())\\r\\n\'\n\'; class3 = injector.get(Class3)\\r\\n\'\n\';"
  " ```\\r\\n\'\n\'class Injector {\\r\\n\'\n\'  field keys_to_providers,"
  " keys_to_singletons\\r\\n\'\n\'  new() {\\r\\n\'\n\'    keys_to_providers = {}\\r\\n\'\n\'   "
  " keys_to_singletons = {}\\r\\n\'\n\'  }\\r\\n\'\n\'  ; Returns the provided value for the given"
  " [key].\\r\\n\'\n\'  ;\\r\\n\'\n\'  ; [key] may be either a Key or Class (which will be converted"
  " into a Key).\\r\\n\'\n\'  ; All dependencies will be traversed to construct the type represented"
  " by\\r\\n\'\n\'  ; [key] and each key in the dependency graph will construct exactly 1\\r\\n\'\n\' "
  " ; result for that Key.\\r\\n\'\n\'  method get(key) {\\r\\n\'\n\'    constructed_map ="
  " {}\\r\\n\'\n\'    ; Preload singletons.\\r\\n\'\n\'    for (k, v) in keys_to_singletons"
  " {\\r\\n\'\n\'      constructed_map[k] = v\\r\\n\'\n\'    }\\r\\n\'\n\'    result ="
  " _get(constructed_map, key)\\r\\n\'\n\'    return result\\r\\n\'\n\'  }\\r\\n\'\n\'  method"
  " _get(constructed_map, key) {\\r\\n\'\n\'    if key is Key {\\r\\n\'\n\'      result ="
  " constructed_map[key]\\r\\n\'\n\'      if result {\\r\\n\'\n\'        return result\\r\\n\'\n\'     "
  " }\\r\\n\'\n\'      provider = keys_to_providers[key]\\r\\n\'\n\'      if (provider is Function) or"
  " (provider is FunctionRef) {\\r\\n\'\n\'        result = _provide_function(constructed_map, key,"
  " provider)\\r\\n\'\n\'      } else if provider is Class {\\r\\n\'\n\'        result ="
  " _provide_class(constructed_map, key, provider)\\r\\n\'\n\'      } else if ~provider {\\r\\n\'\n\'  "
  "      result = _provide_class(constructed_map, key)\\r\\n\'\n\'      } else {\\r\\n\'\n\'       "
  " raise error.Error(\\\'Expected provider as a Function or Class but was \\\' + str(cls))\\r\\n\'\n\'"
  "      }\\r\\n\'\n\'      if _is_singleton(key) {\\r\\n\'\n\'        keys_to_singletons[key] ="
  " result\\r\\n\'\n\'      }\\r\\n\'\n\'      constructed_map[key] = result\\r\\n\'\n\'      return"
  " result\\r\\n\'\n\'    }\\r\\n\'\n\'    if key is Class {\\r\\n\'\n\'      if key == Injector"
  " {\\r\\n\'\n\'        return self\\r\\n\'\n\'      }\\r\\n\'\n\'      return _get(constructed_map,"
  " Key(key))\\r\\n\'\n\'    }\\r\\n\'\n\'    if key is Provider {\\r\\n\'\n\'      return () {"
  " get(key.key) }\\r\\n\'\n\'    }\\r\\n\'\n\'    raise error.Error(\\\'Expected key or class but was"
  " \\\' + str(cls))\\r\\n\'\n\'  }\\r\\n\'\n\'  method _is_singleton(key) {\\r\\n\'\n\'    if"
  " key.cls.all_annotations().has(a -> a is Singleton) {\\r\\n\'\n\'      return True\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    provider = keys_to_providers[key]\\r\\n\'\n\'    if (provider is FunctionRef) and"
  " provider.func().annotations.has(a -> a is Singleton) {\\r\\n\'\n\'      return True\\r\\n\'\n\'   "
  " } else if (provider is Function) and provider.annotations.has(a -> a is Singleton) {\\r\\n\'\n\'   "
  "   return True\\r\\n\'\n\'    } else if (provider is Class) and provider.all_annotations().has(a ->"
  " a is Singleton) {\\r\\n\'\n\'      return True\\r\\n\'\n\'    }\\r\\n\'\n\'    return"
  " False\\r\\n\'\n\'  }\\r\\n\'\n\'  method _provide_function(constructed_map, key, provider)"
  " {\\r\\n\'\n\'    provides_annots = None\\r\\n\'\n\'    if provider is FunctionRef {\\r\\n\'\n\'    "
  "  provides_annots = provider.func().annotations.where(a -> a is Provides)\\r\\n\'\n\'    } else"
  " {\\r\\n\'\n\'      provides_annots = provider.annotations.where(a -> a is Provides)\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    if provides_annots.len() > 1 {\\r\\n\'\n\'      raise error.Error(\\\'Expected at"
  " most 1 @Provides, but there were \\\' + str(provides_annots.len()))\\r\\n\'\n\'    } else if"
  " provides_annots.len() == 1 {\\r\\n\'\n\'      provides_annot = provides_annots[0]\\r\\n\'\n\'     "
  " args = []\\r\\n\'\n\'      provider_keys = _get_keys(provides_annot.params)\\r\\n\'\n\'      for"
  " (_, arg_key) in provider_keys {\\r\\n\'\n\'        args.append(_get(constructed_map,"
  " arg_key))\\r\\n\'\n\'      }\\r\\n\'\n\'      return provider(_create_args(args))\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    return provider()\\r\\n\'\n\'  }\\r\\n\'\n\'  method"
  " _provide_class(constructed_map, key, provider=None) {\\r\\n\'\n\'    if ~provider {\\r\\n\'\n\'    "
  "  provider = key.cls\\r\\n\'\n\'    }\\r\\n\'\n\'    args = _get_args(constructed_map,"
  " provider)\\r\\n\'\n\'    return if args then provider(args) else provider()\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  method _get_args(constructed_map, cls) {\\r\\n\'\n\'    inject_annots ="
  " cls.all_annotations().where(a -> a is Inject)\\r\\n\'\n\'    if inject_annots.len() > 1"
  " {\\r\\n\'\n\'      raise error.Error(\\\'Expected at most 1 @Inject, but there were \\\' +"
  " str(inject_annots.len()))\\r\\n\'\n\'    } else if inject_annots.len() == 1 {\\r\\n\'\n\'     "
  " inject_annot = inject_annots[0]\\r\\n\'\n\'      args = []\\r\\n\'\n\'      inject_keys ="
  " _get_keys(inject_annot.keys)\\r\\n\'\n\'      for (_, arg_key) in inject_keys {\\r\\n\'\n\'       "
  " args.append(_get(constructed_map, arg_key))\\r\\n\'\n\'      }\\r\\n\'\n\'      return"
  " _create_args(args)\\r\\n\'\n\'    }\\r\\n\'\n\'  }\\r\\n\'\n\'  method _create_args(args)"
  " {\\r\\n\'\n\'    if ~args or args.len() == 0 {\\r\\n\'\n\'      return None\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    if args.len() == 1 {\\r\\n\'\n\'      return args[0]\\r\\n\'\n\'    }\\r\\n\'\n\' "
  "   return tuple(args)\\r\\n\'\n\'  }\\r\\n\'\n\'  ; Installs the given [key] and [provider] pair"
  " into the injector.\\r\\n\'\n\'  method install(key, provider=key) {\\r\\n\'\n\'    if key is"
  " ProviderSet {\\r\\n\'\n\'      _install_provider_set(key)\\r\\n\'\n\'    } else {\\r\\n\'\n\'     "
  " _install_by_key(key, provider)\\r\\n\'\n\'    }\\r\\n\'\n\'    return self\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  method _install_by_key(key, provider) {\\r\\n\'\n\'    if ~(key is Key)"
  " {\\r\\n\'\n\'      key = Key(key)\\r\\n\'\n\'    }\\r\\n\'\n\'    keys_to_providers[key] ="
  " provider\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method _install_provider_set(ps) {\\r\\n\'\n\'   "
  " if ps.init {\\r\\n\'\n\'      ps.init()\\r\\n\'\n\'    }\\r\\n\'\n\'    for (_, meth) in"
  " ps.class().methods() {\\r\\n\'\n\'      provides_annots = meth.annotations.where(a -> a is"
  " Provides)\\r\\n\'\n\'      if provides_annots.len() == 0 {\\r\\n\'\n\'        continue\\r\\n\'\n\' "
  "     }\\r\\n\'\n\'      install(provides_annots[0].key, ps.$get(meth.name()))\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    for (key, value) in ps._bind_map {\\r\\n\'\n\'      install(key,"
  " value)\\r\\n\'\n\'    }\\r\\n\'\n\'    for (_, child_ps) in ps._subsets {\\r\\n\'\n\'     "
  " _install_provider_set(child_ps)\\r\\n\'\n\'    }\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method"
  " _get_keys(keys) {\\r\\n\'\n\'    if (keys is Array) or (keys is Tuple) {\\r\\n\'\n\'      return"
  " keys\\r\\n\'\n\'    }\\r\\n\'\n\'    return [keys]\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Class to indicate that a function that provides the given"
  " value should be\\r\\n\'\n\'; returned instead of the actual value.\\r\\n\'\n\';\\r\\n\'\n\'; This"
  " is useful in cases where an object is only needed conditionally.\\r\\n\'\n\'class Provider"
  " {\\r\\n\'\n\'  new(field key) {}\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Annotation that marks a"
  " class as a singleton: there will only ever be one\\r\\n\'\n\'; instance per"
  " Injector.\\r\\n\'\n\'class Singleton { method annotate(_) { } }\\r\\n\'\n\'\\r\\n\'\n\';"
  " Reprensents an injectable type.\\r\\n\'\n\'class Key {\\r\\n\'\n\'  new(field cls, field"
  " annot=None) {}\\r\\n\'\n\'  method ==(other) {\\r\\n\'\n\'    cls == other.cls and annot =="
  " other.annot\\r\\n\'\n\'  }\\r\\n\'\n\'  method hash() {\\r\\n\'\n\'    builtin.hash(cls) +"
  " builtin.hash(annot)\\r\\n\'\n\'  }\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    if annot"
  " {\\r\\n\'\n\'      return cat(\\\'Key(cls=\\\', cls, \\\',annot=\\\', annot, \\\')\\\')\\r\\n\'\n\'"
  "    }\\r\\n\'\n\'    return cat(\\\'Key(cls=\\\', cls, \\\')\\\')\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Annotation that marks a class as Injectable and defines how"
  " it finds its\\r\\n\'\n\'; dependencies.\\r\\n\'\n\'class Inject {\\r\\n\'\n\'  new({field keys,"
  " field singleton=False}) {}\\r\\n\'\n\'  method annotate(cls) {\\r\\n\'\n\'    if singleton"
  " {\\r\\n\'\n\'      cls.all_annotations().append(Singleton())\\r\\n\'\n\'    }\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    cat(\\\'Inject(keys=\\\', keys,"
  " \\\')\\\')\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Annotation that marks a method as a"
  " provider and defines how to find the\\r\\n\'\n\'; dependencies.\\r\\n\'\n\'class Provides"
  " {\\r\\n\'\n\'  new({field key, field params=[], field singleton=False}) {}\\r\\n\'\n\'  method"
  " annotate(func) {\\r\\n\'\n\'    if singleton {\\r\\n\'\n\'     "
  " func.annotations.append(Singleton())\\r\\n\'\n\'    }\\r\\n\'\n\'  }\\r\\n\'\n\'  method to_s()"
  " {\\r\\n\'\n\'    cat(\\\'Provides(key=\\\', key, \\\',params=\\\', params, \\\')\\\')\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Class that houses providers and bindings.\\r\\n\'\n\'class"
  " ProviderSet {\\r\\n\'\n\'  field _bind_map, _subsets\\r\\n\'\n\'  new() {\\r\\n\'\n\'    _bind_map"
  " = {}\\r\\n\'\n\'    _subsets = []\\r\\n\'\n\'  }\\r\\n\'\n\'  ; Called when ProviderSet is"
  " installed by an Injector.\\r\\n\'\n\'  method init() {}\\r\\n\'\n\'  ; Binds the implementation of"
  " [from] to [to].\\r\\n\'\n\'  method bind(from, to=from) {\\r\\n\'\n\'    _bind_map[from] ="
  " to\\r\\n\'\n\'  }\\r\\n\'\n\'  ; Installs another module inside this module.\\r\\n\'\n\'  method"
  " install(ps) {\\r\\n\'\n\'    _subsets.append(ps)\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n"};

const char *LIB_io[] = {
  "module io\nsource \'lib/io.zn\'\nlmdl io_ext #0 7\nmset io_ext #0 7\nlmdl struct #1 7\nmset struct"
  " #1 7\npush FileReader #3 10\nrtru #3 34\npush #3 32\npush \'__STDIN__\' #3 22\ntupl 2 #3 32\ncall"
  " #3 20\npush #3 8\nres self #3 0\nfld IN #3 5\npush FileWriter #4 11\nrtru #4 36\npush #4 34\npush"
  " \'__STDOUT__\' #4 23\ntupl 2 #4 34\ncall #4 21\npush #4 9\nres self #4 0\nfld OUT #4 5\npush"
  " FileWriter #5 13\nrtru #5 38\npush #5 36\npush \'__STDERR__\' #5 25\ntupl 2 #5 36\ncall #5 23\npush"
  " #5 11\nres self #5 0\nfld ERROR #5 5\nexit 0\nclass _FileInternal\nfield file\n@new\npush #7"
  " 6\npnil #8 8\nres self #8 8\nfld file #8 8\ntlen #9 6\neq -1 #9 6\nifn 9 #9 6\nres #9 6\nlet fn #9"
  " 6\nrnil #9 10\nlet rw #9 10\nrnil #9 14\nlet a #9 14\nrnil #9 17\nlet binary #9 17\njmp 12 #9"
  " 6\npeek #9 6\ntget 0 #9 5\nlet fn #9 6\npeek #9 10\ntget 1 #9 5\nlet rw #9 10\npeek #9 14\ntget 2"
  " #9 5\nlet a #9 14\nres #9 5\ntget 3 #9 5\nlet binary #9 17\npush cat #10 11\nres rw #10 15\ncall"
  " #10 14\nset mode #10 4\nres binary #11 7\nifn 3 #11 4\npush mode #12 6\nres \'b\' #12 19\ncall"
  " extend #12 11\nres a #14 7\nifn 3 #14 4\npush mode #15 6\nres \'+\' #15 19\ncall extend #15"
  " 11\npush __File #17 11\npush mode #17 22\npush fn #17 18\ntupl 2 #17 20\ncall #17 17\nset file #17"
  " 4\nres self #9 2\nret #9 2\n@gets\nlet n #19 14\npush file #19 23\nres n #19 35\ncall __gets #19"
  " 28\nwait #19 17\nret #19 2\n@getline\npush file #20 25\nclln __getline #20 30\nwait #20 19\nret #20"
  " 2\n@getall\npush file #21 24\nclln __getall #21 29\nwait #21 18\nret #21 2\n@puts\nlet s #22"
  " 14\npush file #22 23\nres s #22 35\ncall __puts #22 28\nwait #22 17\nret #22 2\n@close\npush file"
  " #23 23\nclln __close #23 28\nwait #23 17\nret #23 2\nendclass\nclass FileReader\nfield"
  " fi\n@new\npush #26 6\npnil #27 8\nres self #27 8\nfld fi #27 8\ntlen #28 6\neq -1 #28 6\nifn 5 #28"
  " 6\nres #28 6\nlet fn #28 6\nrfls #28 17\nlet binary #28 10\njmp 11 #28 6\npeek #28 6\ntget 0 #28"
  " 5\nlet fn #28 6\npeek #28 5\ntgte 2 #28 10\nifn 3 #28 10\nres #28 10\ntget 1 #28 5\njmp 1 #28"
  " 10\nrfls #28 17\nlet binary #28 10\npush _FileInternal #29 9\npush binary #29 39\nrfls #29 32\npush"
  " #29 25\npush \'r\' #29 28\npush fn #29 23\ntupl 4 #29 25\ncall #29 22\nset fi #29 4\nres self #28"
  " 2\nret #28 2\n@close\npush fi #31 17\nclln close #31 20\nret #31 2\n@gets\nlet n #32 14\npush fi"
  " #32 17\nres n #32 25\ncall gets #32 20\nret #32 2\n@getline\npush fi #33 19\nclln getline #33"
  " 22\nret #33 2\n@getlines\npush fi #34 20\nclln getlines #34 23\nret #34 2\n@getall\npush fi #35"
  " 18\nclln getall #35 21\nret #35 2\nendclass\nclass FileWriter\nfield fi\n@new\npush #38 6\npnil #39"
  " 8\nres self #39 8\nfld fi #39 8\ntlen #40 6\neq -1 #40 6\nifn 7 #40 6\nres #40 6\nlet fn #40"
  " 6\nrfls #40 17\nlet append #40 10\nrfls #40 31\nlet binary #40 24\njmp 19 #40 6\npeek #40 6\ntget 0"
  " #40 5\nlet fn #40 6\npeek #40 5\ntgte 2 #40 10\nifn 3 #40 10\npeek #40 10\ntget 1 #40 5\njmp 1 #40"
  " 10\nrfls #40 17\nlet append #40 10\npeek #40 5\ntgte 3 #40 24\nifn 3 #40 24\nres #40 24\ntget 2 #40"
  " 5\njmp 1 #40 24\nrfls #40 31\nlet binary #40 24\npush _FileInternal #41 9\npush binary #41 40\npush"
  " append #41 32\npush \'w\' #41 28\npush fn #41 23\ntupl 4 #41 25\ncall #41 22\nset fi #41 4\nres"
  " self #40 2\nret #40 2\n@write\nlet s #43 15\npush fi #43 18\nres s #43 26\ncall puts #43 21\nret"
  " #43 2\n@writeln\nlet s #44 17\npush fi #45 4\nres s #45 12\ncall puts #45 7\npush fi #46 4\nres"
  " \'\\n\' #46 13\ncall puts #46 7\nret #44 2\n@close\npush fi #48 17\nclln close #48 20\nret #48"
  " 2\nendclass\n@fprint\npush #51 15\ntlen #51 16\neq -1 #51 16\nifn 5 #51 16\nres #51 16\nlet f #51"
  " 16\nrnil #51 19\nlet a #51 19\njmp 6 #51 16\npeek #51 16\ntget 0 #51 15\nlet f #51 16\nres #51"
  " 15\ntget 1 #51 15\nlet a #51 19\npush f #52 2\npush str #52 10\nres a #52 14\ncall #52 13\ncall"
  " write #52 4\nret #51 0\n@fprintln\npush #55 17\ntlen #55 18\neq -1 #55 18\nifn 5 #55 18\nres #55"
  " 18\nlet f #55 18\nrnil #55 21\nlet a #55 21\njmp 6 #55 18\npeek #55 18\ntget 0 #55 17\nlet f #55"
  " 18\nres #55 17\ntget 1 #55 17\nlet a #55 21\npush f #56 2\npush str #56 12\nres a #56 16\ncall #56"
  " 15\ncall writeln #56 4\nret #55 0\n@print\nlet a #59 15\npush fprint #60 2\npush a #60 14\npush OUT"
  " #60 9\ntupl 2 #60 12\ncall #60 8\nret #59 0\n@println\nlet a #63 17\npush fprintln #64 2\npush a"
  " #64 16\npush OUT #64 11\ntupl 2 #64 14\ncall #64 10\nret #63 0\n@error\nlet a #67 15\npush fprint"
  " #68 2\npush a #68 16\npush ERROR #68 9\ntupl 2 #68 14\ncall #68 8\nret #67 0\n@errorln\nlet a #71"
  " 17\npush fprintln #72 2\npush a #72 18\npush ERROR #72 11\ntupl 2 #72 16\ncall #72 10\nret #71"
  " 0\nbody\n\'import io_ext\\r\\n\'\n\'import struct\\r\\n\'\n\'\\r\\n\'\n\'self.IN ="
  " FileReader(\\\'__STDIN__\\\', True)\\r\\n\'\n\'self.OUT = FileWriter(\\\'__STDOUT__\\\',"
  " True)\\r\\n\'\n\'self.ERROR = FileWriter(\\\'__STDERR__\\\', True)\\r\\n\'\n\'\\r\\n\'\n\'class"
  " _FileInternal {\\r\\n\'\n\'  field file\\r\\n\'\n\'  new(fn, rw, a, binary) {\\r\\n\'\n\'    mode ="
  " cat(rw)\\r\\n\'\n\'    if binary {\\r\\n\'\n\'      mode.extend(\\\'b\\\')\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    if a {\\r\\n\'\n\'      mode.extend(\\\'+\\\')\\r\\n\'\n\'    }\\r\\n\'\n\'   "
  " file = __File(fn, mode)\\r\\n\'\n\'  }\\r\\n\'\n\'  method gets(n) await file.__gets(n)\\r\\n\'\n\'"
  "  method getline() await file.__getline()\\r\\n\'\n\'  method getall() await"
  " file.__getall()\\r\\n\'\n\'  method puts(s) await file.__puts(s)\\r\\n\'\n\'  method close() await"
  " file.__close()\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class FileReader {\\r\\n\'\n\'  field"
  " fi\\r\\n\'\n\'  new(fn, binary=False) {\\r\\n\'\n\'    fi = _FileInternal(fn, \\\'r\\\', False,"
  " binary)\\r\\n\'\n\'  }\\r\\n\'\n\'  method close() fi.close()\\r\\n\'\n\'  method gets(n)"
  " fi.gets(n)\\r\\n\'\n\'  method getline() fi.getline()\\r\\n\'\n\'  method getlines()"
  " fi.getlines()\\r\\n\'\n\'  method getall() fi.getall()\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class"
  " FileWriter {\\r\\n\'\n\'  field fi\\r\\n\'\n\'  new(fn, append=False, binary=False) {\\r\\n\'\n\'  "
  "  fi = _FileInternal(fn, \\\'w\\\', append, binary)\\r\\n\'\n\'  }\\r\\n\'\n\'  method write(s)"
  " fi.puts(s)\\r\\n\'\n\'  method writeln(s) {\\r\\n\'\n\'    fi.puts(s)\\r\\n\'\n\'   "
  " fi.puts(\\\'\\\\n\\\')\\r\\n\'\n\'  }\\r\\n\'\n\'  method close()"
  " fi.close()\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function fprint(f, a) {\\r\\n\'\n\' "
  " f.write(str(a))\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function fprintln(f, a) {\\r\\n\'\n\' "
  " f.writeln(str(a))\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function print(a) {\\r\\n\'\n\'  fprint(OUT,"
  " a)\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function println(a) {\\r\\n\'\n\'  fprintln(OUT,"
  " a)\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function error(a) {\\r\\n\'\n\'  fprint(ERROR,"
  " a)\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function errorln(a) {\\r\\n\'\n\'  fprintln(ERROR,"
  " a)\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'/*\\r\\n\'\n\'self.FileEvent ="
  " io_ext.FileEvent\\r\\n\'\n\'self.FileWatcher = io_ext.FileWatcher\\r\\n\'\n\'*/\'\n"};

const char *LIB_io_ext[] = {
  "module io_ext\nsource \'lib/io_ext.zn\'\nrnil #0 4\nset _ #0 0\nrnil #2 0\nexit 0\nbody\n\'_ ="
  " None\\r\\n\'\n\'\\r\\n\'\n\'None\\r\\n\'\n\'\\r\\n\'\n\'/*\\r\\n\'\n\'class FileEvent {\\r\\n\'\n\'"
  "  new(field file_name, field mask) {}\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    masks ="
  " []\\r\\n\'\n\'    for (k, v) in _IN_TO_STR {\\r\\n\'\n\'      if (k & mask) > 0 {\\r\\n\'\n\'      "
  "  masks.append(v)\\r\\n\'\n\'      }\\r\\n\'\n\'    }\\r\\n\'\n\'    return"
  " cat(\\\'FileEvent(file_name=\\\',\\r\\n\'\n\'        file_name, \\\', type=\\\',"
  " \\\',\\\'.join(masks), \\\')\\\')\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'*/\\r\\n\'\n\'\\r\\n\'\n\'/*\\r\\n\'\n\'class FileWatcher {\\r\\n\'\n\' "
  " field _fw, listeners, is_started\\r\\n\'\n\'  new() {\\r\\n\'\n\'    _fw ="
  " __FileWatcher()\\r\\n\'\n\'    listeners = {}\\r\\n\'\n\'    is_started = False\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  method watch(dir) {\\r\\n\'\n\'    if ~(dir is String) {\\r\\n\'\n\'      raise"
  " Error(\\\'FileWatcher.watch() only takes a String parameter.\\\')\\r\\n\'\n\'    }\\r\\n\'\n\'   "
  " if ~_fw.__is_valid() {\\r\\n\'\n\'      raise Error(\\\'FileWatcher is not valid.\\\')\\r\\n\'\n\' "
  "   }\\r\\n\'\n\'    wd = _fw.__watch(dir)\\r\\n\'\n\'    if ~is_started {\\r\\n\'\n\'     "
  " _start()\\r\\n\'\n\'      is_started = True\\r\\n\'\n\'    }\\r\\n\'\n\'    return wd\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  method unwatch(watch_dir) {\\r\\n\'\n\'    if ~(watch_dir is __WatchDir)"
  " {\\r\\n\'\n\'      raise Error(\\\'FileWatcher.unwatch() can only be called with a"
  " __WatchDir.\\\')\\r\\n\'\n\'    }\\r\\n\'\n\'    _fw.__unwatch(watch_dir)\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  method _start() async {\\r\\n\'\n\'    while True {\\r\\n\'\n\'      await"
  " _fw.__read()\\r\\n\'\n\'      files_and_masks = _fw.__get_read()\\r\\n\'\n\'      for (_, (file,"
  " mask)) in files_and_masks {\\r\\n\'\n\'        for (type, callbacks) in listeners {\\r\\n\'\n\'    "
  "      if (type & mask) > 0 {\\r\\n\'\n\'            for (_, callback) in callbacks {\\r\\n\'\n\'    "
  "          callback(FileEvent(file, mask))\\r\\n\'\n\'            }\\r\\n\'\n\'         "
  " }\\r\\n\'\n\'        }\\r\\n\'\n\'      }\\r\\n\'\n\'    }\\r\\n\'\n\'  }\\r\\n\'\n\'  method"
  " close() {\\r\\n\'\n\'    _fw.__close()\\r\\n\'\n\'  }\\r\\n\'\n\'  method listen(callback,"
  " types=ALL_EVENTS) {\\r\\n\'\n\'    if listeners[types] {\\r\\n\'\n\'     "
  " listeners[types].append(callback)\\r\\n\'\n\'    } else {\\r\\n\'\n\'      listeners[types] ="
  " [callback]\\r\\n\'\n\'    }\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'*/\\r\\n\'\n\'\\r\\n\'\n\'/*\\r\\n\'\n\'self.IN_ACCESS ="
  " 1\\r\\n\'\n\'self.IN_ATTRIB = 4\\r\\n\'\n\'self.IN_CLOSE = 24\\r\\n\'\n\'self.IN_CLOSE_WRITE ="
  " 8\\r\\n\'\n\'self.IN_CLOSE_NOWRITE = 16\\r\\n\'\n\'self.IN_CREATE = 256\\r\\n\'\n\'self.IN_DELETE ="
  " 512\\r\\n\'\n\'self.IN_DELETE_SELF = 1024\\r\\n\'\n\'self.IN_MODIFY = 2\\r\\n\'\n\'self.IN_MOVE ="
  " 192\\r\\n\'\n\'self.IN_MOVE_SELF = 2048\\r\\n\'\n\'self.IN_MOVED_FROM ="
  " 64\\r\\n\'\n\'self.IN_MOVED_TO = 128\\r\\n\'\n\'self.IN_OPEN = 32\\r\\n\'\n\'self.IN_IGNORED ="
  " 32768\\r\\n\'\n\'self.IN_ISDIR = 1073741824\\r\\n\'\n\'self.IN_Q_OVERFLOW ="
  " 16384\\r\\n\'\n\'self.IN_UNMOUNT = 8192\\r\\n\'\n\'self.ALL_EVENTS ="
  " 4095\\r\\n\'\n\'*/\\r\\n\'\n\'\\r\\n\'\n\'/*\\r\\n\'\n\'self._IN_TO_STR = {\\r\\n\'\n\'  1:"
  " \\\'ACCESS\\\',\\r\\n\'\n\'  4: \\\'ATTRIB\\\',\\r\\n\'\n\'  24: \\\'CLOSE\\\',\\r\\n\'\n\'  8:"
  " \\\'CLOSE_WRITE\\\',\\r\\n\'\n\'  16: \\\'CLOSE_NOWRITE\\\',\\r\\n\'\n\'  256:"
  " \\\'CREATE\\\',\\r\\n\'\n\'  512: \\\'DELETE\\\',\\r\\n\'\n\'  1024:"
  " \\\'DELETE_SELF\\\',\\r\\n\'\n\'  2: \\\'MODIFY\\\',\\r\\n\'\n\'  192: \\\'MOVE\\\',\\r\\n\'\n\' "
  " 2048: \\\'MOVE_SELF\\\',\\r\\n\'\n\'  64: \\\'MOVED_FROM\\\',\\r\\n\'\n\'  128:"
  " \\\'MOVED_TO\\\',\\r\\n\'\n\'  32: \\\'OPEN\\\',\\r\\n\'\n\'  32768: \\\'IGNORED\\\',\\r\\n\'\n\' "
  " 1073741824: \\\'ISDIR\\\',\\r\\n\'\n\'  16384: \\\'Q_OVERFLOW\\\',\\r\\n\'\n\'  8192:"
  " \\\'UNMOUNT\\\'\\r\\n\'\n\'}\\r\\n\'\n\'*/\'\n"};

const char *LIB_json[] = {
  "module json\nsource \'lib/json.zn\'\nlmdl struct #0 7\nmset struct #0 7\nexit 0\n@jsonify\nlet value"
  " #2 17\npush #3 5\nrnil #3 14\npush #3 11\neq #3 11\nif 25 #3 2\npush value #5 12\nrtru #5 21\npush"
  " #5 18\neq #5 18\nif 17 #5 9\npush value #7 12\nrfls #7 21\npush #7 18\neq #7 18\nif 9 #7 9\npush"
  " value #9 12\npush Object #9 21\nis #9 18\nifn 13 #9 9\npush _jsonify_object #10 11\nres value #10"
  " 27\ncall #10 26\nret #10 4\njmp 8 #9 9\nres \'false\' #8 12\nret #8 4\njmp 5 #7 9\nres \'true\' #6"
  " 12\nret #6 4\njmp 2 #5 9\nres \'null\' #4 12\nret #4 4\npush str #12 9\nres value #12 13\ncall #12"
  " 12\nret #12 2\n@_jsonify_object\nlet obj #15 25\npush #16 5\npush String #16 12\nis #16 9\nif 19"
  " #16 2\npush obj #18 12\npush Array #18 19\nis #18 16\nif 10 #18 9\npush obj #20 12\nres struct #20"
  " 19\ngtsh Map #20 26\nis #20 16\nifn 16 #20 9\npush _jsonify_map #21 11\nres obj #21 24\ncall #21"
  " 23\nret #21 4\njmp 11 #20 9\npush _jsonify_array #19 11\nres obj #19 26\ncall #19 25\nret #19"
  " 4\njmp 6 #18 9\nres \'\\\"\' #17 12\nadd obj #17 18\npush #17 22\npush \'\\\"\' #17 25\nadd #17"
  " 22\nret #17 4\nanew #23 12\nset entries #23 2\nnblk #24 2\npush obj #24 16\nclln class #24 20\npush"
  " #24 27\nclln fields #24 28\npush #24 13\ncall iter #24 13\npush #24 13\ndup #24 13\ncall has_next"
  " #24 13\nifn 28 #24 13\ndup #24 2\ncall next #24 13\npush #24 13\ndup #24 13\naidx 0 #24 13\nset _"
  " #24 7\naidx 1 #24 13\nset f #24 10\npush entries #25 4\npush \'\\\"\' #25 20\npush str #25 25\nres"
  " f #25 29\ncall #25 28\npush #25 23\nadd #25 23\npush #25 32\npush \'\\\":\' #25 35\nadd #25"
  " 32\npush #25 39\npush jsonify #25 41\npush obj #25 49\nres f #25 58\ncall $get #25 53\ncall #25"
  " 48\npush #25 39\nadd #25 39\ncall append #25 12\njmp -31 #24 13\nres #24 13\nbblk #24 2\npush \'{\'"
  " #27 10\npush \',\' #27 16\nres entries #27 24\ncall join #27 19\npush #27 13\nadd #27 13\npush #27"
  " 33\npush \'}\' #27 36\nadd #27 33\nret #27 2\n@_jsonify_array\nlet arr #30 24\npush \'[\' #31"
  " 10\npush \',\' #31 16\npush arr #31 24\njmp 5 #31 32\n@$anon_31_32\nlet e #31 32\npush jsonify #31"
  " 37\nres e #31 45\ncall #31 44\nret #31 32\nres $anon_31_32 #31 32\ncall map #31 28\ncall join #31"
  " 19\npush #31 13\nadd #31 13\npush #31 50\npush \']\' #31 53\nadd #31 50\nret #31"
  " 2\n@_jsonify_map\nlet map #34 22\nanew #35 12\nset entries #35 2\nnblk #36 2\npush map #36 16\ncall"
  " iter #36 13\npush #36 13\ndup #36 13\ncall has_next #36 13\nifn 26 #36 13\ndup #36 2\ncall next #36"
  " 13\npush #36 13\ndup #36 13\naidx 0 #36 13\nset k #36 7\naidx 1 #36 13\nset v #36 10\npush entries"
  " #37 4\npush \'\\\"\' #37 20\npush str #37 25\nres k #37 29\ncall #37 28\npush #37 23\nadd #37"
  " 23\npush #37 32\npush \'\\\":\' #37 35\nadd #37 32\npush #37 39\npush jsonify #37 41\nres v #37"
  " 49\ncall #37 48\npush #37 39\nadd #37 39\ncall append #37 12\njmp -29 #36 13\nres #36 13\nbblk #36"
  " 2\npush \'{\' #39 10\npush \',\' #39 16\nres entries #39 24\ncall join #39 19\npush #39 13\nadd #39"
  " 13\npush #39 33\npush \'}\' #39 36\nadd #39 33\nret #39 2\nbody\n\'import"
  " struct\\r\\n\'\n\'\\r\\n\'\n\'function jsonify(value) {\\r\\n\'\n\'  if value == None {\\r\\n\'\n\'"
  "    return \\\'null\\\'\\r\\n\'\n\'  } else if value == True {\\r\\n\'\n\'    return"
  " \\\'true\\\'\\r\\n\'\n\'  } else if value == False {\\r\\n\'\n\'    return"
  " \\\'false\\\'\\r\\n\'\n\'  } else if value is Object {\\r\\n\'\n\'    return"
  " _jsonify_object(value)\\r\\n\'\n\'  }\\r\\n\'\n\'  return"
  " str(value)\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function _jsonify_object(obj) {\\r\\n\'\n\'  if obj"
  " is String {\\r\\n\'\n\'    return \\\'\\\\\\\"\\\' + obj + \\\'\\\\\\\"\\\'\\r\\n\'\n\'  } else if"
  " obj is Array {\\r\\n\'\n\'    return _jsonify_array(obj)\\r\\n\'\n\'  } else if obj is struct.Map"
  " {\\r\\n\'\n\'    return _jsonify_map(obj)\\r\\n\'\n\'  }\\r\\n\'\n\'  entries = []\\r\\n\'\n\'  for"
  " (_, f) in obj.class().fields() {\\r\\n\'\n\'    entries.append(\\\'\\\"\\\' + str(f) +"
  " \\\'\\\":\\\' + jsonify(obj.$get(f)))\\r\\n\'\n\'  }\\r\\n\'\n\'  return \\\'{\\\' +"
  " \\\',\\\'.join(entries) + \\\'}\\\'\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function"
  " _jsonify_array(arr) {\\r\\n\'\n\'  return \\\'[\\\' + \\\',\\\'.join(arr.map(e -> jsonify(e))) +"
  " \\\']\\\'\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function _jsonify_map(map) {\\r\\n\'\n\'  entries ="
  " []\\r\\n\'\n\'  for (k, v) in map {\\r\\n\'\n\'    entries.append(\\\'\\\"\\\' + str(k) +"
  " \\\'\\\":\\\' + jsonify(v))\\r\\n\'\n\'  }\\r\\n\'\n\'  return \\\'{\\\' + \\\',\\\'.join(entries)"
  " + \\\'}\\\'\\r\\n\'\n\'}\'\n"};

const char *LIB_math[] = {
  "module math\nsource \'lib/math.zn\'\npush 0.000001 #3 15\nres self #3 0\nfld EPSILON #3 5\npush"
  " 3.141593 #10 10\nres self #10 0\nfld PI #10 5\npush exp #17 9\nres 1 #17 13\ncall #17 12\npush #17"
  " 7\nres self #17 0\nfld E #17 5\nexit 0\n@min\nlet sequence #20 13\npush #21 5\naidx 0 #21 14\nset m"
  " #21 1\nnblk #22 2\nres 1 #22 8\nset i #22 6\npush i #22 11\npush sequence #22 15\nclln len #22"
  " 24\npush #22 13\nlt #22 13\nifn 11 #22 2\npush sequence #23 7\naidx i #23 16\nlt m #23 21\nifn 3"
  " #23 4\npush sequence #24 10\naidx i #24 19\nset m #24 6\nres i #22 33\nadd 1 #22 35\nset i #22"
  " 31\njmp -17 #22 2\nbblk #22 2\nres m #27 2\nret #20 0\n@max\nlet sequence #31 13\npush #32 5\naidx"
  " 0 #32 14\nset m #32 1\nnblk #33 2\nres 1 #33 8\nset i #33 6\npush i #33 11\npush sequence #33"
  " 15\nclln len #33 24\npush #33 13\nlt #33 13\nifn 11 #33 2\npush sequence #34 7\naidx i #34 16\ngt m"
  " #34 21\nifn 3 #34 4\npush sequence #35 10\naidx i #35 19\nset m #35 6\nres i #33 33\nadd 1 #33"
  " 35\nset i #33 31\njmp -17 #33 2\nbblk #33 2\nres m #38 2\nret #31 0\n@log\npush #54 12\ntlen #54"
  " 13\neq -1 #54 13\nifn 6 #54 13\nres #54 13\nlet x #54 13\nres math #54 21\nget E #54 26\nlet base"
  " #54 16\njmp 12 #54 13\npeek #54 13\ntget 0 #54 12\nlet x #54 13\npeek #54 12\ntgte 2 #54 16\nifn 3"
  " #54 16\nres #54 16\ntget 1 #54 12\njmp 2 #54 16\nres math #54 21\nget E #54 26\nlet base #54"
  " 16\npush __log #55 2\npush base #55 11\npush x #55 8\ntupl 2 #55 9\ncall #55 7\nret #54 0\n@ln\nlet"
  " x #59 12\npush log #60 2\nres x #60 6\ncall #60 5\nret #59 0\n@log10\nlet x #64 15\npush log #65"
  " 2\npush 10 #65 9\npush x #65 6\ntupl 2 #65 7\ncall #65 5\nret #64 0\n@sqrt\nlet x #69 14\npush pow"
  " #69 17\npush 0.500000 #69 24\npush x #69 21\ntupl 2 #69 22\ncall #69 20\nret #69 0\n@div\npush #75"
  " 12\ntlen #75 13\neq -1 #75 13\nifn 5 #75 13\nres #75 13\nlet n #75 13\nrnil #75 16\nlet d #75"
  " 16\njmp 6 #75 13\npeek #75 13\ntget 0 #75 12\nlet n #75 13\nres #75 12\ntget 1 #75 12\nlet d #75"
  " 16\npush mod #76 17\npush d #76 24\npush n #76 21\ntupl 2 #76 22\ncall #76 20\npush #76 15\nres n"
  " #76 10\ndiv d #76 14\npush #76 15\ntupl 2 #76 15\nret #76 2\n@safe_divide\npush #80 20\ntlen #80"
  " 21\neq -1 #80 21\nifn 5 #80 21\nres #80 21\nlet n #80 21\nrnil #80 24\nlet d #80 24\njmp 6 #80"
  " 21\npeek #80 21\ntget 0 #80 20\nlet n #80 21\nres #80 20\ntget 1 #80 20\nlet d #80 24\nres d #81"
  " 5\neq 0 #81 10\nifn 2 #81 2\nrnil #82 11\nret #82 4\nres n #84 9\ndiv d #84 13\nret #84"
  " 2\nbody\n\'; Basic math functions.\\r\\n\'\n\'\\r\\n\'\n\'; A very small number that is greater"
  " than 0.\\r\\n\'\n\'self.EPSILON = 0.000001\\r\\n\'\n\'\\r\\n\'\n\'; Pi"
  " approximated.\\r\\n\'\n\';\\r\\n\'\n\'; The ratio of the circumference of the circle to its"
  " diameter.\\r\\n\'\n\'; Note: This is only a constant approximation of pi at double"
  " precision.\\r\\n\'\n\';\\r\\n\'\n\'self.PI = 3.141592653589793\\r\\n\'\n\'\\r\\n\'\n\'; Euler\\\'s"
  " number approximated.\\r\\n\'\n\';\\r\\n\'\n\'; It approximates the value of (1 + 1/n)*n as n"
  " approaches infinity. It is the\\r\\n\'\n\'; base of natural"
  " logarithm.\\r\\n\'\n\';\\r\\n\'\n\'self.E = exp(1)\\r\\n\'\n\'\\r\\n\'\n\'; Returns the"
  " comparatively smalles number from [sequence].\\r\\n\'\n\'function min(sequence) {\\r\\n\'\n\'tm ="
  " sequence[0]\\r\\n\'\n\'  for i=1, i < sequence.len(), i=i+1 {\\r\\n\'\n\'    if sequence[i] < m"
  " {\\r\\n\'\n\'      m = sequence[i]\\r\\n\'\n\'    }\\r\\n\'\n\'  }\\r\\n\'\n\' "
  " m\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Returns the comparatively largest number from"
  " [sequence].\\r\\n\'\n\'function max(sequence) {\\r\\n\'\n\'tm = sequence[0]\\r\\n\'\n\'  for i=1, i"
  " < sequence.len(), i=i+1 {\\r\\n\'\n\'    if sequence[i] > m {\\r\\n\'\n\'      m ="
  " sequence[i]\\r\\n\'\n\'    }\\r\\n\'\n\'  }\\r\\n\'\n\'  m\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\';"
  " Returns the value of [num] raised to [power], i.e., num^power.\\r\\n\'\n\'; function pow(num,"
  " power) {}\\r\\n\'\n\'\\r\\n\'\n\'; Returns the absolute value of [x].\\r\\n\'\n\'; function abs(x)"
  " {}\\r\\n\'\n\'\\r\\n\'\n\'; Returns the ceiling of [x].\\r\\n\'\n\'; function ceil(x)"
  " {}\\r\\n\'\n\'\\r\\n\'\n\'; Returns the floor of [x].\\r\\n\'\n\'; function floor(x)"
  " {}\\r\\n\'\n\'\\r\\n\'\n\'; Returns the logarithm of the specified value [x] with base"
  " [base].\\r\\n\'\n\'function log(x, base=math.E) {\\r\\n\'\n\'  __log(x,"
  " base)\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Returns the natural logarithm of the specified valued"
  " [x].\\r\\n\'\n\'function ln(x) {\\r\\n\'\n\'  log(x)\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Returns"
  " the base-10 logarithm of the specified value [x].\\r\\n\'\n\'function log10(x) {\\r\\n\'\n\' "
  " log(x, 10)\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Returns the square root of"
  " [x].\\r\\n\'\n\'function sqrt(x) pow(x, 0.5)\\r\\n\'\n\'\\r\\n\'\n\'; Returns the remainder of [n]"
  " divided by [d].\\r\\n\'\n\'; function mod(n, d) {}\\r\\n\'\n\'\\r\\n\'\n\'; Returns (n / d, mod(n,"
  " d)).\\r\\n\'\n\'function div(n, d) {\\r\\n\'\n\'  return (n / d, mod(n,"
  " d))\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Like [n] / [d], except when [d] is 0, then returns"
  " None.\\r\\n\'\n\'function safe_divide(n, d) {\\r\\n\'\n\'  if d == 0 {\\r\\n\'\n\'    return"
  " None\\r\\n\'\n\'  }\\r\\n\'\n\'  return n / d\\r\\n\'\n\'}\'\n"};

const char *LIB_memory[] = {
  "module memory\nsource \'lib/memory.zn\'\nrnil #0 4\nset _ #0 0\nexit 0\nclass GCStatus\nfield"
  " objects_collected\nfield remaining_object_count\nfield object_counts\n@new\npush #2 6\npnil #3"
  " 12\nres self #3 12\nfld objects_collected #3 12\npnil #4 12\nres self #4 12\nfld"
  " remaining_object_count #4 12\npnil #5 12\nres self #5 12\nfld object_counts #5 12\ntlen #3 12\neq"
  " -1 #3 12\nifn 11 #3 12\nres self #3 12\nfld objects_collected #3 12\nrnil #4 12\npush #4 12\nres"
  " self #4 12\nfld remaining_object_count #4 12\nrnil #5 12\npush #5 12\nres self #5 12\nfld"
  " object_counts #5 12\njmp 15 #3 12\npeek #3 12\ntget 0 #3 5\npush #3 12\nres self #3 12\nfld"
  " objects_collected #3 12\npeek #4 12\ntget 1 #3 5\npush #4 12\nres self #4 12\nfld"
  " remaining_object_count #4 12\nres #3 5\ntget 2 #3 5\npush #5 12\nres self #5 12\nfld object_counts"
  " #5 12\nres self #3 2\nret #3 2\n@to_s\npush sort #9 4\njmp 46 #9 24\n@$anon_9_24\npush #9 24\ntlen"
  " #9 25\neq -1 #9 25\nifn 5 #9 25\nres #9 25\nlet oc1 #9 25\nrnil #9 30\nlet oc2 #9 30\njmp 6 #9"
  " 25\npeek #9 25\ntget 0 #9 24\nlet oc1 #9 25\nres #9 24\ntget 1 #9 24\nlet oc2 #9 30\npush oc1 #10"
  " 9\naidx 1 #10 13\npush #10 16\npush oc2 #10 19\naidx 1 #10 23\npush #10 16\neq #10 16\nifn 15 #10"
  " 6\npush cmp #11 16\npush oc2 #11 35\naidx 0 #11 39\npush #11 41\nclln name #11 42\npush #11"
  " 33\npush oc1 #11 20\naidx 0 #11 24\npush #11 26\nclln name #11 27\npush #11 33\ntupl 2 #11 33\ncall"
  " #11 19\nmult -1 #11 15\nret #11 8\npush oc1 #13 13\naidx 1 #13 17\npush #13 20\npush oc2 #13"
  " 22\naidx 1 #13 26\npush #13 20\nsub #13 20\nret #13 6\npush $anon_9_24 #9 24\npush object_counts #9"
  " 9\ntupl 2 #9 22\ncall #9 8\npush cat #15 13\npush \'\\n\' #20 9\npush remaining_object_count #19"
  " 8\npush \'\\nRemaining objects: \' #18 9\npush objects_collected #17 8\npush \'Objects collected:"
  " \' #16 9\ntupl 5 #16 29\ncall #15 16\nset result #15 4\nres object_counts #21 7\nifn 35 #21 4\nnblk"
  " #22 6\npush object_counts #22 31\ncall iter #22 28\npush #22 28\ndup #22 28\ncall has_next #22"
  " 28\nifn 26 #22 28\ndup #22 6\ncall next #22 28\npush #22 28\ndup #22 28\naidx 0 #22 28\nset _ #22"
  " 11\naidx 1 #22 28\npush #22 28\ndup #22 28\naidx 0 #22 28\nset cls #22 15\naidx 1 #22 28\nset count"
  " #22 20\npush result #23 8\npush cat #23 22\npush \'\\n\' #23 59\npush cls #23 46\nclln name #23"
  " 50\npush #23 30\npush \' x \' #23 40\npush count #23 32\npush \'  \' #23 27\ntupl 5 #23 30\ncall"
  " #23 25\ncall extend #23 15\njmp -29 #22 28\nres #22 28\nbblk #22 6\nres result #26 11\nret #26"
  " 4\nendclass\n@collect_garbage:async\npush GCStatus #32 2\npush __collect_garbage #32 17\nclln #32"
  " 34\nwait #32 11\ncall #32 10\nret #31 0\nbody\n\'_ = None\\r\\n\'\n\'; Container for garbage"
  " collection results\\r\\n\'\n\'class GCStatus {\\r\\n\'\n\'  new(field"
  " objects_collected,\\r\\n\'\n\'      field remaining_object_count,\\r\\n\'\n\'      field"
  " object_counts) {\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'   "
  " sort(object_counts, (oc1, oc2) {\\r\\n\'\n\'      if oc1[1] == oc2[1] {\\r\\n\'\n\'        return"
  " -cmp(oc1[0].name(), oc2[0].name())\\r\\n\'\n\'      }\\r\\n\'\n\'      return oc1[1] -"
  " oc2[1]\\r\\n\'\n\'    })\\r\\n\'\n\'    result = cat(\\r\\n\'\n\'        \\\'Objects collected:"
  " \\\',\\r\\n\'\n\'        objects_collected,\\r\\n\'\n\'        \\\'\\\\nRemaining objects:"
  " \\\',\\r\\n\'\n\'        remaining_object_count,\\r\\n\'\n\'        \\\'\\\\n\\\')\\r\\n\'\n\'   "
  " if object_counts {\\r\\n\'\n\'      for (_, (cls, count)) in object_counts {\\r\\n\'\n\'       "
  " result.extend(cat(\\\'  \\\', count, \\\' x \\\', cls.name(), \\\'\\\\n\\\'))\\r\\n\'\n\'     "
  " }\\r\\n\'\n\'    }\\r\\n\'\n\'    return result\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Forces a garbage collection and returns the result of the"
  " colletion.\\r\\n\'\n\'function collect_garbage() async {\\r\\n\'\n\'  GCStatus(await"
  " __collect_garbage())\\r\\n\'\n\'}\'\n"};

const char *LIB_net[] = {
  "module net\nsource \'lib/net.zn\'\nlmdl async #0 7\nmset async #0 7\nlmdl error #1 7\nmset error #1"
  " 7\nlmdl inject #2 7\nmset inject #2 7\nlmdl io #3 7\nmset io #3 7\nlmdl net #4 7\nmset net #4"
  " 7\nlmdl socket #5 7\nmset socket #5 7\nlmdl struct #6 7\nmset struct #6 7\npush"
  " HttpRequestController #314 6\nres RequestController #314 30\ncall $__set_super #314 30\nres inject"
  " #223 1\ngtsh Inject #223 8\npush Object #223 19\nclln #223 19\npush #223 19\npush HttpResponse #223"
  " 35\npush HttpRequest #223 22\nanew 2 #223 21\npush #223 19\npeek 1 #223 19\nfld keys #223 15\nres"
  " #223 19\ncall #223 8\npush #223 8\npush #223 8\nget annotate #223 8\nif 2 #223 8\nres #223 8\njmp 2"
  " #223 8\nres Cookies #224 6\ncall annotate #223 8\nres #223 8\npush Cookies #224 6\ncall"
  " add_annotation #223 8\nres async #391 1\ngtsh RemoteClass #391 7\nclln #391 7\npush #391 7\npush"
  " #391 7\nget annotate #391 7\nif 2 #391 7\nres #391 7\njmp 2 #391 7\nres ApplicationRunner #392"
  " 6\ncall annotate #391 7\nres #391 7\npush ApplicationRunner #392 6\ncall add_annotation #391"
  " 7\npush struct #368 37\nclln Map #368 37\npush #368 37\ndup #369 7\npush Get #369 9\npush \'GET\'"
  " #369 3\ntupl 2 #369 7\ncall __set__ #369 7\ndup #370 8\npush Head #370 10\npush \'HEAD\' #370"
  " 3\ntupl 2 #370 8\ncall __set__ #370 8\ndup #371 8\npush Post #371 10\npush \'POST\' #371 3\ntupl 2"
  " #371 8\ncall __set__ #371 8\ndup #372 7\npush Put #372 9\npush \'PUT\' #372 3\ntupl 2 #372 7\ncall"
  " __set__ #372 7\ndup #373 10\npush Delete #373 12\npush \'DELETE\' #373 3\ntupl 2 #373 10\ncall"
  " __set__ #373 10\ndup #374 11\npush Connect #374 13\npush \'CONNECT\' #374 3\ntupl 2 #374 11\ncall"
  " __set__ #374 11\ndup #375 11\npush Options #375 13\npush \'OPTIONS\' #375 3\ntupl 2 #375 11\ncall"
  " __set__ #375 11\ndup #376 9\npush Trace #376 11\npush \'TRACE\' #376 3\ntupl 2 #376 9\ncall __set__"
  " #376 9\ndup #377 9\npush Patch #377 11\npush \'PATCH\' #377 3\ntupl 2 #377 9\ncall __set__ #377"
  " 9\nres self #368 0\nfld _REQUEST_METHOD_TO_ANNOTATION #368 5\nexit 0\nclass Header\nfield"
  " protocol\nfield version\nfield status_code\nfield status\nfield content_type\nfield"
  " charset\n@new\npush #8 6\npnil #9 12\nres self #9 12\nfld protocol #9 12\npnil #10 12\nres self #10"
  " 12\nfld version #10 12\npnil #11 12\nres self #11 12\nfld status_code #11 12\npnil #12 12\nres self"
  " #12 12\nfld status #12 12\npnil #13 12\nres self #13 12\nfld content_type #13 12\npnil #14 12\nres"
  " self #14 12\nfld charset #14 12\ntlen #9 12\neq -1 #9 12\nifn 23 #9 12\nres self #9 12\nfld"
  " protocol #9 12\nrnil #10 12\npush #10 12\nres self #10 12\nfld version #10 12\nrnil #11 12\npush"
  " #11 12\nres self #11 12\nfld status_code #11 12\nrnil #12 12\npush #12 12\nres self #12 12\nfld"
  " status #12 12\nrnil #13 12\npush #13 12\nres self #13 12\nfld content_type #13 12\nrnil #14"
  " 12\npush #14 12\nres self #14 12\nfld charset #14 12\njmp 30 #9 12\npeek #9 12\ntget 0 #9 5\npush"
  " #9 12\nres self #9 12\nfld protocol #9 12\npeek #10 12\ntget 1 #9 5\npush #10 12\nres self #10"
  " 12\nfld version #10 12\npeek #11 12\ntget 2 #9 5\npush #11 12\nres self #11 12\nfld status_code #11"
  " 12\npeek #12 12\ntget 3 #9 5\npush #12 12\nres self #12 12\nfld status #12 12\npeek #13 12\ntget 4"
  " #9 5\npush #13 12\nres self #13 12\nfld content_type #13 12\nres #9 5\ntget 5 #9 5\npush #14"
  " 12\nres self #14 12\nfld charset #14 12\nres self #9 2\nret #9 2\n@to_s\npush cat #16 4\npush"
  " \'\\r\\n\\r\\n\' #19 35\npush charset #19 25\npush \'; charset=\' #19 12\npush content_type #18"
  " 33\npush \'\\r\\nContent-Type: \' #18 12\npush status #17 29\npush \' \' #17 25\npush status_code"
  " #17 11\npush \' \' #16 33\npush version #16 23\npush \'/\' #16 19\npush protocol #16 8\ntupl 12 #16"
  " 16\ncall #16 7\nret #15 2\nendclass\nclass HttpRequest\nfield _headers\nfield type\nfield"
  " path\nfield params\nfield protocol\nfield version\n@new\npush #41 6\npnil #42 10\nres self #42"
  " 10\nfld _headers #42 10\npnil #43 14\nres self #43 14\nfld type #43 14\npnil #44 14\nres self #44"
  " 14\nfld path #44 14\npnil #45 14\nres self #45 14\nfld params #45 14\npnil #46 14\nres self #46"
  " 14\nfld protocol #46 14\npnil #47 14\nres self #47 14\nfld version #47 14\ntlen #43 14\neq -1 #43"
  " 14\nifn 21 #43 14\nres self #43 14\nfld type #43 14\nrnil #44 14\npush #44 14\nres self #44 14\nfld"
  " path #44 14\nrnil #45 14\npush #45 14\nres self #45 14\nfld params #45 14\nrnil #46 14\npush #46"
  " 14\nres self #46 14\nfld protocol #46 14\nrnil #47 14\npush #47 14\nres self #47 14\nfld version"
  " #47 14\nrnil #48 8\nlet headers #48 8\njmp 28 #43 14\npeek #43 14\ntget 0 #43 7\npush #43 14\nres"
  " self #43 14\nfld type #43 14\npeek #44 14\ntget 1 #43 7\npush #44 14\nres self #44 14\nfld path #44"
  " 14\npeek #45 14\ntget 2 #43 7\npush #45 14\nres self #45 14\nfld params #45 14\npeek #46 14\ntget 3"
  " #43 7\npush #46 14\nres self #46 14\nfld protocol #46 14\npeek #47 14\ntget 4 #43 7\npush #47"
  " 14\nres self #47 14\nfld version #47 14\nres #43 7\ntget 5 #43 7\nlet headers #48 8\nres headers"
  " #49 21\nset _headers #49 10\nres self #43 4\nret #43 4\n@get_header_value\nlet key #51 28\npush"
  " _headers #52 13\naidx key #52 22\nret #52 6\n@get_host\npush _headers #55 13\nres \'Host\' #55"
  " 23\naidx #55 21\nret #55 6\n@get_connection\npush _headers #58 13\nres \'Connection\' #58 23\naidx"
  " #58 21\nret #58 6\n@get_user_agent\npush _headers #61 13\nres \'User-Agent\' #61 23\naidx #61"
  " 21\nret #61 6\n@get_accept\npush _headers #64 13\nres \'Accept\' #64 23\naidx #64 21\npush #64"
  " 31\nres \',\' #64 39\ncall split #64 32\nret #64 6\n@get_cookie\npush _headers #67 13\nres"
  " \'Cookie\' #67 23\naidx #67 21\nret #67 6\n@to_s\npush cat #70 12\npush path #70 27\npush \' \' #70"
  " 23\npush type #70 16\ntupl 3 #70 20\ncall #70 15\nset ret #70 6\nres params #71 9\nifn 6 #71"
  " 16\nres params #71 21\ngtsh keys #71 28\nclln len #71 33\npush #71 39\npush 0 #71 41\ngt #71"
  " 39\nifn 36 #71 6\npush ret #72 8\nres \'?\' #72 20\ncall extend #72 12\nanew #73 20\nset param_arr"
  " #73 8\nnblk #74 8\npush params #74 22\ncall iter #74 19\npush #74 19\ndup #74 19\ncall has_next #74"
  " 19\nifn 17 #74 19\ndup #74 8\ncall next #74 19\npush #74 19\ndup #74 19\naidx 0 #74 19\nset k #74"
  " 13\naidx 1 #74 19\nset v #74 16\npush param_arr #75 10\npush cat #75 27\npush v #75 39\npush \'=\'"
  " #75 35\npush k #75 31\ntupl 3 #75 32\ncall #75 30\ncall append #75 20\njmp -20 #74 19\nres #74"
  " 19\nbblk #74 8\npush ret #77 8\npush \'&\' #77 20\nres param_arr #77 28\ncall join #77 23\ncall"
  " extend #77 12\npush ret #79 6\nres \' \' #79 18\ncall extend #79 10\npush #79 21\nres protocol #79"
  " 29\ncall extend #79 22\npush #79 38\nres \'/\' #79 47\ncall extend #79 39\npush #80 10\nres version"
  " #80 18\ncall extend #80 11\npush #80 26\nres \'\\r\\n\' #80 35\ncall extend #80 27\nres _headers"
  " #81 9\nifn 35 #81 6\nnblk #82 8\npush _headers #82 22\ncall iter #82 19\npush #82 19\ndup #82"
  " 19\ncall has_next #82 19\nifn 26 #82 19\ndup #82 8\ncall next #82 19\npush #82 19\ndup #82 19\naidx"
  " 0 #82 19\nset k #82 13\naidx 1 #82 19\nset v #82 16\npush ret #83 10\nres \'  \' #83 22\ncall"
  " extend #83 14\npush #83 26\nres k #83 34\ncall extend #83 27\npush #83 36\nres \': \' #83 45\ncall"
  " extend #83 37\npush #83 49\npush str #83 57\nres v #83 61\ncall #83 60\ncall extend #83 50\npush"
  " #84 14\nres \'\\r\\n\' #84 23\ncall extend #84 15\njmp -29 #82 19\nres #82 19\nbblk #82 8\nres ret"
  " #87 13\nret #87 6\nendclass\nclass HttpResponse\nfield _protocol\nfield _version\nfield"
  " _status_code\nfield _status\nfield _headers\nfield _content\nfield _set_cookies\n@new\npush #92"
  " 6\npnil #93 8\nres self #93 8\nfld _protocol #93 8\npnil #93 19\nres self #93 19\nfld _version #93"
  " 19\npnil #93 29\nres self #93 29\nfld _status_code #93 29\npnil #93 43\nres self #93 43\nfld"
  " _status #93 43\npnil #94 8\nres self #94 8\nfld _headers #94 8\npnil #94 18\nres self #94 18\nfld"
  " _content #94 18\npnil #94 28\nres self #94 28\nfld _set_cookies #94 28\nres #92 6\nres \'HTTP\' #96"
  " 17\nset _protocol #96 4\nres 1.100000 #97 15\nset _version #97 4\nres 200 #98 19\nset _status_code"
  " #98 4\nres \'OK\' #99 15\nset _status #99 4\npush struct #100 15\nclln Map #100 15\nset _headers"
  " #100 4\npush \'text/html\' #101 32\npush _headers #101 4\nres \'Content-Type\' #101 14\naset #101"
  " 12\npush \'bytes\' #102 33\npush _headers #102 4\nres \'Accept-Ranges\' #102 14\naset #102 12\npush"
  " 0 #103 33\npush _headers #103 4\nres \'Content-Length\' #103 14\naset #103 12\nres \'\' #104"
  " 16\nset _content #104 4\npush struct #105 19\nclln Map #105 19\nset _set_cookies #105 4\nres self"
  " #95 2\nret #95 2\n@set_status\nlet status #107 20\nset _status #108 4\nres self #109 11\nret #109"
  " 4\n@set_status_code\nlet status_code #111 25\nset _status_code #112 4\nres self #113 11\nret #113"
  " 4\n@set_server\nlet server #115 20\npush #116 25\npush _headers #116 4\nres \'Server\' #116"
  " 14\naset #116 12\nres self #117 11\nret #117 4\n@set_date\nlet date_text #119 18\npush #120"
  " 23\npush _headers #120 4\nres \'Date\' #120 14\naset #120 12\nres self #121 11\nret #121"
  " 4\n@set_last_modified\nlet date_text #123 27\npush #124 32\npush _headers #124 4\nres"
  " \'Last-Modified\' #124 14\naset #124 12\nres self #125 11\nret #125 4\n@set_content_type\nlet type"
  " #127 26\npush #128 31\npush _headers #128 4\nres \'Content-Type\' #128 14\naset #128 12\nres self"
  " #129 11\nret #129 4\n@set_accept_ranges\nlet ranges #131 27\npush #132 32\npush _headers #132"
  " 4\nres \'Accept-Ranges\' #132 14\naset #132 12\nres self #133 11\nret #133 4\n@set_cookie\npush"
  " #135 19\ntlen #135 20\neq -1 #135 20\nifn 5 #135 20\nres #135 20\nlet name #135 20\nrnil #135"
  " 26\nlet value #135 26\njmp 6 #135 20\npeek #135 20\ntget 0 #135 19\nlet name #135 20\nres #135"
  " 19\ntget 1 #135 19\nlet value #135 26\npush str #136 30\nres value #136 34\ncall #136 33\npush #136"
  " 28\npush _set_cookies #136 4\npush str #136 17\nres name #136 21\ncall #136 20\naset #136 16\nret"
  " #135 2\n@add_content\nlet text #138 21\npush _content #139 4\nres text #139 20\ncall extend #139"
  " 13\npush _headers #140 33\nres \'Content-Length\' #140 43\naidx #140 41\npush #140 60\npush text"
  " #140 62\nclln len #140 67\npush #140 60\nadd #140 60\npush #140 31\npush _headers #140 4\nres"
  " \'Content-Length\' #140 14\naset #140 12\nres self #141 11\nret #141 4\n@to_s\npush cat #144"
  " 10\npush \'\\r\\n\' #144 74\npush _status #144 64\npush \' \' #144 60\npush _status_code #144"
  " 45\npush \' \' #144 41\npush _version #144 30\npush \'/\' #144 26\npush _protocol #144 14\ntupl 8"
  " #144 23\ncall #144 13\nset res #144 4\nnblk #145 4\npush _headers #145 18\ncall iter #145 15\npush"
  " #145 15\ndup #145 15\ncall has_next #145 15\nifn 18 #145 15\ndup #145 4\ncall next #145 15\npush"
  " #145 15\ndup #145 15\naidx 0 #145 15\nset k #145 9\naidx 1 #145 15\nset v #145 12\npush res #146"
  " 6\npush cat #146 17\npush \'\\r\\n\' #146 34\npush v #146 30\npush \': \' #146 25\npush k #146"
  " 21\ntupl 4 #146 22\ncall #146 20\ncall extend #146 10\njmp -21 #145 15\nres #145 15\nbblk #145"
  " 4\nnblk #148 4\npush _set_cookies #148 25\ncall iter #148 22\npush #148 22\ndup #148 22\ncall"
  " has_next #148 22\nifn 22 #148 22\ndup #148 4\ncall next #148 22\npush #148 22\ndup #148 22\naidx 0"
  " #148 22\nset name #148 9\naidx 1 #148 22\nset value #148 15\npush res #149 6\npush cat #149"
  " 18\npush \'\\r\\n\' #149 72\npush _set_cookie_string #149 38\npush value #149 63\npush name #149"
  " 57\ntupl 2 #149 61\ncall #149 56\npush #149 36\npush \'Set-Cookie: \' #149 23\ntupl 3 #149 36\ncall"
  " #149 21\ncall extend #149 10\njmp -25 #148 22\nres #148 22\nbblk #148 4\npush res #151 4\nres"
  " \'\\r\\n\' #151 16\ncall extend #151 8\npush res #152 4\nres _content #152 15\ncall extend #152"
  " 8\nres res #153 11\nret #153 4\n@_set_cookie_string\npush #155 27\ntlen #155 28\neq -1 #155 28\nifn"
  " 5 #155 28\nres #155 28\nlet name #155 28\nrnil #155 34\nlet value #155 34\njmp 6 #155 28\npeek #155"
  " 28\ntget 0 #155 27\nlet name #155 28\nres #155 27\ntget 1 #155 27\nlet value #155 34\npush cat #156"
  " 11\npush \'\\\"\' #156 35\npush value #156 27\npush \'=\\\"\' #156 22\npush name #156 15\ntupl 4"
  " #156 19\ncall #156 14\nret #156 4\nendclass\nclass Cookies\nfield cookies_map\nfield req\nfield"
  " resp\n@new\npush #224 6\npnil #225 8\nres self #225 8\nfld cookies_map #225 8\npnil #227 12\nres"
  " self #227 12\nfld req #227 12\npnil #227 23\nres self #227 23\nfld resp #227 23\ntlen #227 12\neq"
  " -1 #227 12\nifn 7 #227 12\nres self #227 12\nfld req #227 12\nrnil #227 23\npush #227 23\nres self"
  " #227 23\nfld resp #227 23\njmp 10 #227 12\npeek #227 12\ntget 0 #227 5\npush #227 12\nres self #227"
  " 12\nfld req #227 12\nres #227 5\ntget 1 #227 5\npush #227 23\nres self #227 23\nfld resp #227"
  " 23\npush _parse_cookie_map #228 18\npush req #228 36\nclln get_cookie #228 40\ncall #228 35\nset"
  " cookies_map #228 4\nres self #227 2\nret #227 2\n@__index__\nlet name #230 12\npush cookies_map"
  " #231 11\naidx name #231 23\nret #231 4\n@__set__\npush #233 12\ntlen #233 13\neq -1 #233 13\nifn 5"
  " #233 13\nres #233 13\nlet name #233 13\nrnil #233 19\nlet value #233 19\njmp 6 #233 13\npeek #233"
  " 13\ntget 0 #233 12\nlet name #233 13\nres #233 12\ntget 1 #233 12\nlet value #233 19\npush value"
  " #234 24\npush cookies_map #234 4\nres name #234 16\naset #234 15\npush resp #235 4\npush value #235"
  " 26\npush name #235 20\ntupl 2 #235 24\ncall set_cookie #235 9\nret #233 2\n@to_s\npush cookies_map"
  " #238 11\nclln to_s #238 23\nret #238 4\n@_parse_cookie_map\nlet cookie_string #240 27\nnot #241"
  " 7\nif 3 #241 22\npush cookie_string #241 25\npush \'\' #241 43\neq #241 39\nifn 3 #241 4\npush"
  " struct #242 13\nclln Map #242 13\nret #242 6\npush struct #245 10\nclln Map #245 10\nset res #245"
  " 4\npush cookie_string #246 10\nres \'; \' #246 31\ncall split #246 24\nset kvs #246 4\nnblk #247"
  " 4\nres 0 #247 10\nset i #247 8\npush i #247 13\npush kvs #247 15\nclln len #247 19\npush #247"
  " 14\nlt #247 14\nifn 15 #247 4\npush kvs #248 11\naidx i #248 15\npush #248 17\nres \'=\' #248"
  " 25\ncall split #248 18\nset kv #248 6\npush #249 19\naidx 1 #249 22\npush #249 17\npush res #249"
  " 6\npush kv #249 10\naidx 0 #249 13\naset #249 9\ninc i #247 28\njmp -21 #247 4\nbblk #247 4\nres"
  " res #251 11\nret #251 4\nendclass\nclass HttpSocketHandle\nfield raw_handle\n@new\npush #255"
  " 6\npnil #256 12\nres self #256 12\nfld raw_handle #256 12\nres self #256 12\nfld raw_handle #256"
  " 12\nres self #256 2\nret #256 2\n@receive:async\npush raw_handle #259 24\nclln receive #259"
  " 35\nwait #259 18\nset raw_request #259 4\nnot #261 7\nifn 2 #261 4\nrnil #262 13\nret #262 6\npush"
  " parse_request #264 11\nres raw_request #264 25\ncall #264 24\nret #264 4\n@send:async\nlet"
  " http_response #266 14\npush #267 9\npush HttpResponse #267 26\nis #267 23\nnot #267 7\nifn 4 #267"
  " 4\npush Error #268 12\nres \'HttpSocketHandle.send() expects an HttpResponse argument.\' #268"
  " 19\ncall #268 17\nrais #268 6\npush raw_handle #270 10\npush http_response #270 26\nclln to_s #270"
  " 40\ncall send #270 21\nwait #270 4\nret #266 2\n@close\npush raw_handle #273 4\nclln close #273"
  " 15\nret #272 2\nendclass\nclass HttpSocket\nfield raw_socket\n@new\npush #277 6\npnil #278 12\nres"
  " self #278 12\nfld raw_socket #278 12\nres self #278 12\nfld raw_socket #278 12\nres self #278"
  " 2\nret #278 2\n@accept:async\npush HttpSocketHandle #281 4\npush raw_socket #281 27\nclln accept"
  " #281 38\nwait #281 21\ncall #281 20\nret #280 2\n@close\npush raw_socket #284 4\nclln close #284"
  " 15\nret #283 2\nendclass\nclass Rpc\n@annotate\nlet _ #288 28\nret #288 12\nendclass\nclass"
  " Get\n@annotate\nlet _ #290 28\nret #290 12\nendclass\nclass Head\n@annotate\nlet _ #291 29\nret"
  " #291 13\nendclass\nclass Post\n@annotate\nlet _ #292 29\nret #292 13\nendclass\nclass"
  " Put\n@annotate\nlet _ #293 28\nret #293 12\nendclass\nclass Delete\n@annotate\nlet _ #294 31\nret"
  " #294 15\nendclass\nclass Connect\n@annotate\nlet _ #295 32\nret #295 16\nendclass\nclass"
  " Options\n@annotate\nlet _ #296 32\nret #296 16\nendclass\nclass Trace\n@annotate\nlet _ #297"
  " 30\nret #297 14\nendclass\nclass Patch\n@annotate\nlet _ #298 30\nret #298 14\nendclass\nclass"
  " RequestController\nfield matcher_fn\n@new\npush #304 6\npnil #305 12\nres self #305 12\nfld"
  " matcher_fn #305 12\npeek #304 6\ntgte 1 #305 12\nif 2 #305 12\nres always_true #305 23\njmp 1 #305"
  " 12\nres #305 12\ntget 0 #305 12\npush #305 12\nres self #305 12\nfld matcher_fn #305 12\nres self"
  " #305 2\nret #305 2\n@marshall\nlet req #306 18\nret #306 2\n@unmarshall\nlet resp #307 20\nret #307"
  " 2\n@preinject\npush #308 18\ntlen #308 19\neq -1 #308 19\nifn 5 #308 19\nres #308 19\nlet injector"
  " #308 19\nrnil #308 29\nlet req #308 29\njmp 6 #308 19\npeek #308 19\ntget 0 #308 18\nlet injector"
  " #308 19\nres #308 18\ntget 1 #308 18\nlet req #308 29\nret #308 2\n@process\npush #309 16\ntlen"
  " #309 17\neq -1 #309 17\nifn 7 #309 17\nres #309 17\nlet controller #309 17\nrnil #309 29\nlet req"
  " #309 29\nrnil #309 34\nlet injector #309 34\njmp 9 #309 17\npeek #309 17\ntget 0 #309 16\nlet"
  " controller #309 17\npeek #309 29\ntget 1 #309 16\nlet req #309 29\nres #309 16\ntget 2 #309 16\nlet"
  " injector #309 34\npush find_annotated_method #310 11\npush Rpc #310 45\npush controller #310"
  " 33\ntupl 2 #310 43\ncall #310 32\npush #310 49\nres req #310 50\ncall #310 49\nret #310"
  " 4\nendclass\nclass HttpRequestController\n@new\npush #315 6\ntgte 1 #315 6\nif 2 #315 6\nres"
  " always_true #315 22\njmp 1 #315 6\nres #315 6\ntget 0 #315 6\nlet http_matcher_fn #315 6\npush"
  " super #316 4\nres RequestController #316 10\ncall #316 9\npush #316 28\nres http_matcher_fn #316"
  " 29\ncall #316 28\nres self #315 2\nret #315 2\n@marshall\nlet req #319 18\npush parse_request #320"
  " 15\nres req #320 29\ncall #320 28\nset http_req #320 4\npush io #321 4\npush \'HTTP/\' #321 16\nres"
  " http_req #321 25\ngtsh version #321 34\nadd #321 23\npush #321 42\npush \' \' #321 45\nadd #321"
  " 42\npush #321 48\nres http_req #321 50\ngtsh path #321 59\nadd #321 48\ncall println #321 7\nres"
  " http_req #322 11\nret #322 4\n@unmarshall\nlet resp #325 20\npush #325 28\nclln to_s #325 33\nret"
  " #325 2\n@preinject\npush #327 18\ntlen #327 19\neq -1 #327 19\nifn 5 #327 19\nres #327 19\nlet"
  " injector #327 19\nrnil #327 29\nlet req #327 29\njmp 6 #327 19\npeek #327 19\ntget 0 #327 18\nlet"
  " injector #327 19\nres #327 18\ntget 1 #327 18\nlet req #327 29\npush net #328 11\nclln HttpResponse"
  " #328 15\nset resp #328 4\npush injector #329 4\njmp 2 #329 34\n@$anon_329_34\nres req #329 40\nret"
  " #329 34\npush $anon_329_34 #329 34\npush HttpRequest #329 21\ntupl 2 #329 32\ncall install #329"
  " 13\npush injector #330 4\njmp 2 #330 35\n@$anon_330_35\nres resp #330 41\nret #330 35\npush"
  " $anon_330_35 #330 35\npush HttpResponse #330 21\ntupl 2 #330 33\ncall install #330 13\nret #327"
  " 2\n@process\npush #333 16\ntlen #333 17\neq -1 #333 17\nifn 7 #333 17\nres #333 17\nlet controller"
  " #333 17\nrnil #333 29\nlet req #333 29\nrnil #333 34\nlet injector #333 34\njmp 9 #333 17\npeek"
  " #333 17\ntget 0 #333 16\nlet controller #333 17\npeek #333 29\ntget 1 #333 16\nlet req #333 29\nres"
  " #333 16\ntget 2 #333 16\nlet injector #333 34\npush injector #334 11\nres HttpResponse #334"
  " 24\ncall get #334 20\nset resp #334 4\npush find_annotated_method #335 4\npush _get_label #335"
  " 38\nres req #335 49\ncall #335 48\npush #335 36\npush controller #335 26\ntupl 2 #335 36\ncall #335"
  " 25\npush #335 54\npush resp #335 60\npush req #335 55\ntupl 2 #335 58\ncall #335 54\nres resp #336"
  " 11\nret #336 4\n@_get_label\nlet req #339 20\npush _REQUEST_METHOD_TO_ANNOTATION #339 27\nres req"
  " #339 57\nget type #339 61\naidx #339 56\nret #339 2\nendclass\nclass Application\nfield"
  " controller_classes\nfield provider_sets\nfield host\nfield port\n@new\npush #342 6\npnil #343"
  " 8\nres self #343 8\nfld controller_classes #343 8\npnil #343 28\nres self #343 28\nfld"
  " provider_sets #343 28\npnil #345 12\nres self #345 12\nfld host #345 12\npnil #345 24\nres self"
  " #345 24\nfld port #345 24\ntlen #345 12\neq -1 #345 12\nifn 7 #345 12\nres self #345 12\nfld host"
  " #345 12\nrnil #345 24\npush #345 24\nres self #345 24\nfld port #345 24\njmp 10 #345 12\npeek #345"
  " 12\ntget 0 #345 5\npush #345 12\nres self #345 12\nfld host #345 12\nres #345 5\ntget 1 #345"
  " 5\npush #345 24\nres self #345 24\nfld port #345 24\nanew #346 25\nset controller_classes #346"
  " 4\nanew #347 20\nset provider_sets #347 4\nres self #345 2\nret #345 2\n@add_controller\nlet"
  " ctrlr_cls #350 24\npush controller_classes #351 4\nres ctrlr_cls #351 30\ncall append #351 23\nres"
  " self #352 11\nret #352 4\n@add_provider_set\nlet ps #355 26\npush provider_sets #356 4\nres ps #356"
  " 25\ncall append #356 18\nres self #357 11\nret #357 4\n@start\npush io #361 4\npush \'Starting app"
  " at \' #361 16\npush str #361 36\nres host #361 40\ncall #361 39\npush #361 34\nadd #361 34\npush"
  " #361 46\npush \':\' #361 49\nadd #361 46\npush #361 52\npush str #361 55\nres port #361 59\ncall"
  " #361 58\npush #361 52\nadd #361 52\ncall println #361 7\npush async #362 4\npush provider_sets #364"
  " 41\npush controller_classes #364 21\npush port #364 15\npush host #364 9\ntupl 4 #364 13\npush #363"
  " 25\npush ApplicationRunner #363 8\ntupl 2 #363 25\ncall create_remote #362 10\nret #360"
  " 2\nendclass\nclass ApplicationRunner\nfield injector\nfield host\nfield port\nfield"
  " controller_classes\nfield provider_sets\n@new\npush #392 6\npnil #393 8\nres self #393 8\nfld"
  " injector #393 8\npnil #394 12\nres self #394 12\nfld host #394 12\npnil #394 24\nres self #394"
  " 24\nfld port #394 24\npnil #394 36\nres self #394 36\nfld controller_classes #394 36\npnil #394"
  " 62\nres self #394 62\nfld provider_sets #394 62\ntlen #394 12\neq -1 #394 12\nifn 15 #394 12\nres"
  " self #394 12\nfld host #394 12\nrnil #394 24\npush #394 24\nres self #394 24\nfld port #394"
  " 24\nrnil #394 36\npush #394 36\nres self #394 36\nfld controller_classes #394 36\nanew #394"
  " 76\npush #394 62\nres self #394 62\nfld provider_sets #394 62\njmp 25 #394 12\npeek #394 12\ntget 0"
  " #394 5\npush #394 12\nres self #394 12\nfld host #394 12\npeek #394 24\ntget 1 #394 5\npush #394"
  " 24\nres self #394 24\nfld port #394 24\npeek #394 36\ntget 2 #394 5\npush #394 36\nres self #394"
  " 36\nfld controller_classes #394 36\npeek #394 5\ntgte 4 #394 62\nifn 3 #394 62\nres #394 62\ntget 3"
  " #394 5\njmp 1 #394 62\nanew #394 76\npush #394 62\nres self #394 62\nfld provider_sets #394"
  " 62\npush inject #395 15\nclln Injector #395 22\nset injector #395 4\npush provider_sets #396 4\njmp"
  " 6 #396 23\n@$anon_396_23\nlet ps #396 23\npush injector #396 29\npush ps #396 46\nclln #396"
  " 48\ncall install #396 38\nret #396 23\nres $anon_396_23 #396 23\ncall each #396 18\nnblk #397"
  " 4\npush controller_classes #397 26\ncall iter #397 23\npush #397 23\ndup #397 23\ncall has_next"
  " #397 23\nifn 12 #397 23\ndup #397 4\ncall next #397 23\npush #397 23\ndup #397 23\naidx 0 #397"
  " 23\nset _ #397 9\naidx 1 #397 23\nset ctrlr_cls #397 12\npush injector #398 6\nres ctrlr_cls #398"
  " 23\ncall install #398 15\njmp -15 #397 23\nres #397 23\nbblk #397 4\nres self #394 2\nret #394"
  " 2\n@_select_controller\nlet request #402 28\nnblk #403 4\npush controller_classes #403 26\ncall"
  " iter #403 23\npush #403 23\ndup #403 23\ncall has_next #403 23\nifn 21 #403 23\ndup #403 4\ncall"
  " next #403 23\npush #403 23\ndup #403 23\naidx 0 #403 23\nset _ #403 9\naidx 1 #403 23\nset"
  " ctrlr_cls #403 12\npush _get_request_controller #404 18\nres ctrlr_cls #404 42\ncall #404 41\nset"
  " req_ctrlr #404 6\npush #405 9\nres request #405 30\ncall matcher_fn #405 19\nifn 4 #405 6\npush"
  " ctrlr_cls #406 27\npush req_ctrlr #406 16\ntupl 2 #406 25\nret #406 8\njmp -24 #403 23\nres #403"
  " 23\nbblk #403 4\nrnil #409 18\npush #409 16\nrnil #409 12\npush #409 16\ntupl 2 #409 16\nret #409"
  " 4\n@process\npush #412 16\ntlen #412 17\neq -1 #412 17\nifn 5 #412 17\nres #412 17\nlet request"
  " #412 17\nrnil #412 26\nlet timer #412 26\njmp 6 #412 17\npeek #412 17\ntget 0 #412 16\nlet request"
  " #412 17\nres #412 16\ntget 1 #412 16\nlet timer #412 26\npush _select_controller #413 29\nres"
  " request #413 48\ncall #413 47\npush #413 27\ndup #413 27\naidx 0 #413 27\nset req_ctrlr #413"
  " 5\naidx 1 #413 27\nset ctrlr_cls #413 16\nres req_ctrlr #414 8\nnot #414 7\nif 2 #414 18\nres"
  " ctrlr_cls #414 22\nnot #414 21\nifn 9 #414 4\npush error #415 12\npush \'No controller found for"
  " request: \' #415 25\npush str #415 62\nres request #415 66\ncall #415 65\npush #415 60\nadd #415"
  " 60\ncall Error #415 18\nrais #415 6\npush req_ctrlr #417 14\nres request #417 33\ncall marshall"
  " #417 24\nset request #417 4\npush req_ctrlr #418 4\npush request #418 34\npush injector #418"
  " 24\ntupl 2 #418 32\ncall preinject #418 14\npush injector #419 12\nres ctrlr_cls #419 25\ncall get"
  " #419 21\nset ctrlr #419 4\npush req_ctrlr #420 11\npush injector #420 45\npush request #420"
  " 36\npush ctrlr #420 29\ntupl 3 #420 34\ncall process #420 21\nset resp #420 4\npush req_ctrlr #421"
  " 11\nres resp #421 32\ncall unmarshall #421 21\nset resp #421 4\nret #422"
  " 4\n@_get_request_controller\nlet ctrlr_cls #425 33\npush #426 17\nclln all_annotations #426"
  " 27\npush #426 44\njmp 5 #426 51\n@$anon_426_51\nlet a #426 51\npush #426 56\npush RequestController"
  " #426 61\nis #426 58\nret #426 51\nres $anon_426_51 #426 51\ncall where #426 45\nset req_ctrlrs #426"
  " 4\npush #427 7\nclln len #427 18\neq 0 #427 27\nif 14 #427 4\npush req_ctrlrs #429 14\nclln len"
  " #429 25\ngt 1 #429 33\nifn 19 #429 11\npush error #430 12\npush str #430 24\nres ctrlr_cls #430"
  " 28\ncall #430 27\npush #430 39\npush \' has multiple RequestController annotations.\' #430 42\nadd"
  " #430 39\ncall Error #430 18\nrais #430 6\njmp 9 #429 11\npush error #428 12\npush str #428 24\nres"
  " ctrlr_cls #428 28\ncall #428 27\npush #428 39\npush \' has no RequestController annotation.\' #428"
  " 42\nadd #428 39\ncall Error #428 18\nrais #428 6\npush req_ctrlrs #432 11\naidx 0 #432 22\nret #432"
  " 4\n@run\npush socket #436 11\npush port #436 45\npush host #436 39\ntupl 2 #436 43\ncall"
  " create_server_socket #436 18\nset sock #436 4\nnblk #437 4\nrtru #437 10\nifn 32 #437 4\npush sock"
  " #438 21\nclln accept #438 26\nwait #438 15\nset handle #438 6\nnblk #439 6\nctch 15 #443 8\npush"
  " handle #440 20\nclln receive #440 27\nwait #440 14\nset req #440 8\npush process #441 15\npush"
  " timer #441 28\npush req #441 23\ntupl 2 #441 26\ncall #441 22\nset resp #441 8\npush handle #442"
  " 14\nres resp #442 26\ncall send #442 21\nwait #442 8\njmp 7 #443 8\nset e #443 14\npush io #444"
  " 8\npush e #444 30\nres io #444 20\ngtsh ERROR #444 23\ntupl 2 #444 28\ncall fprintln #444 11\nbblk"
  " #439 6\npush handle #446 6\nclln close #446 13\njmp -34 #437 4\nbblk #437 4\nret #435"
  " 2\nendclass\nclass Server\nfield apps\n@new\npush #451 6\npnil #452 8\nres self #452 8\nfld apps"
  " #452 8\nres #451 6\nanew #455 11\nset apps #455 4\nres self #454 2\nret #454"
  " 2\n@add_application\nlet app #458 25\npush apps #459 4\nres app #459 16\ncall append #459 9\nres"
  " self #460 11\nret #460 4\n@run\npush async #464 10\npush apps #464 20\njmp 6 #464"
  " 29\n@$anon_464_29\nlet app #464 29\npush #464 36\nclln start #464 40\npush #464 47\nclln run #464"
  " 48\nret #464 29\nres $anon_464_29 #464 29\ncall map #464 25\ncall all #464 16\nwait #464 4\nret"
  " #463 2\nendclass\n@parse_header\nlet header_text #23 22\npush #24 6\nres \'/\' #24 24\ncall find"
  " #24 18\nset i #24 2\npush header_text #25 13\npush i #25 35\npush 0 #25 32\ntupl 2 #25 33\ncall"
  " substr #25 25\nset protocol #25 2\nres i #26 7\nadd 1 #26 11\npush #26 13\npush header_text #26"
  " 15\nres i #26 37\nadd 1 #26 39\npush #26 35\npush \' \' #26 33\ntupl 2 #26 35\ncall find #26"
  " 27\npush #26 13\nadd #26 13\nset i2 #26 2\npush header_text #27 12\npush i2 #27 36\nres i #27"
  " 31\nadd 1 #27 33\npush #27 34\ntupl 2 #27 34\ncall substr #27 24\nset version #27 2\nres i2 #28"
  " 7\nadd 1 #28 12\npush #28 14\npush header_text #28 16\nres i2 #28 38\nadd 1 #28 41\npush #28"
  " 36\npush \' \' #28 34\ntupl 2 #28 36\ncall find #28 28\npush #28 14\nadd #28 14\nset i3 #28 2\npush"
  " header_text #29 16\npush i3 #29 41\nres i2 #29 35\nadd 1 #29 38\npush #29 39\ntupl 2 #29 39\ncall"
  " substr #29 28\nset status_code #29 2\nres i3 #30 7\nadd 1 #30 12\npush #30 14\npush header_text #30"
  " 16\nres i3 #30 41\nadd 1 #30 44\npush #30 39\npush \'\\r\\n\' #30 34\ntupl 2 #30 39\ncall find #30"
  " 28\npush #30 14\nadd #30 14\nset i4 #30 2\npush header_text #31 11\npush i4 #31 36\nres i3 #31"
  " 30\nadd 1 #31 33\npush #31 34\ntupl 2 #31 34\ncall substr #31 23\nset status #31 2\nres i4 #32"
  " 7\nadd 1 #32 12\npush #32 14\npush header_text #32 16\nres i4 #32 38\nadd 1 #32 41\npush #32"
  " 36\npush \' \' #32 34\ntupl 2 #32 36\ncall find #32 28\npush #32 14\nadd #32 14\nset i5 #32 2\nadd"
  " 1 #33 12\npush #33 14\npush header_text #33 16\nres i5 #33 38\nadd 1 #33 41\npush #33 36\npush"
  " \';\' #33 34\ntupl 2 #33 36\ncall find #33 28\npush #33 14\nadd #33 14\nset i6 #33 2\npush"
  " header_text #34 17\npush i6 #34 42\nres i5 #34 36\nadd 1 #34 39\npush #34 40\ntupl 2 #34 40\ncall"
  " substr #34 29\nset content_type #34 2\nres i6 #35 7\nadd 1 #35 12\npush #35 14\npush header_text"
  " #35 16\nres i6 #35 38\nadd 1 #35 41\npush #35 36\npush \'=\' #35 34\ntupl 2 #35 36\ncall find #35"
  " 28\npush #35 14\nadd #35 14\nset i7 #35 2\nadd 1 #36 12\npush #36 14\npush header_text #36 16\nres"
  " i7 #36 41\nadd 1 #36 44\npush #36 39\npush \'\\r\\n\' #36 34\ntupl 2 #36 39\ncall find #36 28\npush"
  " #36 14\nadd #36 14\nset i8 #36 2\npush header_text #37 12\npush i8 #37 37\nres i7 #37 31\nadd 1 #37"
  " 34\npush #37 35\ntupl 2 #37 35\ncall substr #37 24\nset charset #37 2\npush Header #38 9\npush"
  " charset #38 70\npush content_type #38 56\npush status #38 48\npush status_code #38 35\npush version"
  " #38 26\npush protocol #38 16\ntupl 6 #38 24\ncall #38 15\nret #38 2\n@redirect\npush #160 17\ntlen"
  " #160 18\neq -1 #160 18\nifn 7 #160 18\nres #160 18\nlet request #160 18\nrnil #160 27\nlet response"
  " #160 27\nrnil #160 37\nlet target #160 37\njmp 9 #160 18\npeek #160 18\ntget 0 #160 17\nlet request"
  " #160 18\npeek #160 27\ntget 1 #160 17\nlet response #160 27\nres #160 17\ntget 2 #160 17\nlet"
  " target #160 37\npush response #161 2\nres 301 #161 27\ncall set_status_code #161 11\nres target"
  " #162 13\nset location #162 2\nres request #163 5\nget params #163 13\nifn 7 #163 20\nres request"
  " #163 25\nget params #163 33\ngtsh keys #163 40\nclln len #163 45\npush #163 51\npush 0 #163 53\ngt"
  " #163 51\nifn 37 #163 2\npush location #164 4\nres \'?\' #164 21\ncall extend #164 13\nanew #165"
  " 16\nset param_arr #165 4\nnblk #166 4\nres request #166 18\ngtsh params #166 26\ncall iter #166"
  " 15\npush #166 15\ndup #166 15\ncall has_next #166 15\nifn 17 #166 15\ndup #166 4\ncall next #166"
  " 15\npush #166 15\ndup #166 15\naidx 0 #166 15\nset k #166 9\naidx 1 #166 15\nset v #166 12\npush"
  " param_arr #167 6\npush cat #167 23\npush v #167 35\npush \'=\' #167 31\npush k #167 27\ntupl 3 #167"
  " 28\ncall #167 26\ncall append #167 16\njmp -20 #166 15\nres #166 15\nbblk #166 4\npush location"
  " #169 4\npush \'&\' #169 21\nres param_arr #169 29\ncall join #169 24\ncall extend #169 13\npush"
  " location #171 34\nres response #171 2\ngtsh _headers #171 11\nres \'Location\' #171 21\naset #171"
  " 19\nres response #172 9\nret #172 2\n@parse_params\nlet path #175 22\npush #176 12\nres \'?\' #176"
  " 23\ncall find #176 17\nset q_index #176 2\nnot #177 5\nifn 6 #177 2\npush struct #178 18\nclln Map"
  " #178 18\npush #178 16\npush path #178 12\ntupl 2 #178 16\nret #178 4\npush path #182 4\nres q_index"
  " #182 16\nadd 1 #182 26\ncall substr #182 9\npush #183 6\nres \'&\' #183 14\ncall split #183 7\npush"
  " #184 6\npush struct #194 8\nclln Map #194 8\npush #193 9\njmp 40 #185 8\n@$anon_185_8\npush #185"
  " 8\ntlen #185 9\neq -1 #185 9\nifn 5 #185 9\nres #185 9\nlet a #185 9\nrnil #185 12\nlet part #185"
  " 12\njmp 6 #185 9\npeek #185 9\ntget 0 #185 8\nlet a #185 9\nres #185 8\ntget 1 #185 8\nlet part"
  " #185 12\npush part #186 21\nres \'=\' #186 32\ncall find #186 26\nset eq_index #186 10\nnot #187"
  " 13\nifn 5 #187 10\npush \'1\' #188 22\npush a #188 12\nres part #188 14\naset #188 13\njmp 12 #187"
  " 10\npush part #190 42\nres eq_index #190 54\nadd 1 #190 65\ncall substr #190 47\npush #190 40\npush"
  " a #190 12\npush part #190 14\npush eq_index #190 29\npush 0 #190 26\ntupl 2 #190 27\ncall substr"
  " #190 19\naset #190 13\nres a #192 17\nret #192 10\npush $anon_185_8 #185 8\ntupl 2 #193 9\ncall"
  " collect #184 7\npush #181 27\npush path #181 4\npush q_index #181 19\npush 0 #181 16\ntupl 2 #181"
  " 17\ncall substr #181 9\npush #181 27\ntupl 2 #181 27\nret #175 0\n@parse_request\nlet req #197"
  " 23\nnblk #198 2\nctch 98 #217 4\npush req #199 12\nres \'\\r\\n\' #199 23\ncall split #199 16\nset"
  " parts #199 4\npush #200 7\nclln len #200 13\neq 0 #200 22\nifn 8 #200 4\npush error #201 12\npush"
  " cat #201 24\npush req #201 49\npush \'Invalid request: \' #201 29\ntupl 2 #201 47\ncall #201"
  " 27\ncall Error #201 18\nrais #201 6\npush parts #203 14\naidx 0 #203 20\npush #203 22\nclln trim"
  " #203 23\nset request #203 4\npush #204 15\nres \' \' #204 30\ncall split #204 23\nset req_head #204"
  " 4\npush #205 11\naidx 0 #205 20\nset type #205 4\npush req_head #206 11\naidx 1 #206 20\nset path"
  " #206 4\npush parse_params #207 21\nres path #207 34\ncall #207 33\npush #207 19\ndup #207 19\naidx"
  " 0 #207 19\nset path #207 5\naidx 1 #207 19\nset params #207 11\npush req_head #208 15\naidx 2 #208"
  " 24\npush #208 26\nres \'/\' #208 34\ncall split #208 27\nset protocol #208 4\npush struct #210"
  " 10\nclln Map #210 10\nset map #210 4\nnblk #211 4\nres 1 #211 10\nset i #211 8\npush i #211"
  " 13\npush parts #211 15\nclln len #211 21\npush #211 14\nlt #211 14\nifn 24 #211 4\npush parts #212"
  " 11\naidx i #212 17\npush #212 19\nres \':\' #212 27\ncall split #212 20\nset kv #212 6\npush #213"
  " 12\naidx 0 #213 15\npush #213 17\nclln trim #213 18\nset key #213 6\npush kv #214 26\naidx 1 #214"
  " 29\npush #214 31\nclln trim #214 32\npush #214 24\npush map #214 6\npush kv #214 10\naidx 0 #214"
  " 13\npush #214 15\nclln trim #214 16\naset #214 9\ninc i #211 30\njmp -30 #211 4\nbblk #211 4\npush"
  " HttpRequest #216 11\npush map #216 69\npush protocol #216 56\naidx 1 #216 65\npush #216 27\npush"
  " protocol #216 43\naidx 0 #216 52\npush #216 27\npush params #216 35\npush path #216 29\npush type"
  " #216 23\ntupl 6 #216 27\ncall #216 22\nret #216 4\njmp 9 #217 4\nset e #217 10\npush io #218"
  " 4\npush e #218 26\nres io #218 16\ngtsh ERROR #218 19\ntupl 2 #218 24\ncall fprintln #218 7\nrnil"
  " #219 11\nret #219 4\nbblk #198 2\nret #197 0\n@always_true\nrtru #301 2\nret #300"
  " 0\n@find_annotated_method\npush #380 30\ntlen #380 31\neq -1 #380 31\nifn 5 #380 31\nres #380"
  " 31\nlet instance #380 31\nrnil #380 41\nlet annot #380 41\njmp 6 #380 31\npeek #380 31\ntget 0 #380"
  " 30\nlet instance #380 31\nres #380 30\ntget 1 #380 30\nlet annot #380 41\npush instance #381"
  " 8\nclln class #381 17\nset cls #381 2\npush #382 12\nclln all_methods #382 16\npush #382 29\njmp 14"
  " #382 36\n@$anon_382_36\nlet m #382 36\ngtsh annotations #382 43\njmp 5 #382 61\n@$anon_382_61\nlet"
  " a #382 61\npush #382 66\npush annot #382 71\nis #382 68\nret #382 61\nres $anon_382_61 #382"
  " 61\ncall where #382 55\npush #382 77\nclln len #382 78\ngt 0 #382 86\nret #382 36\nres $anon_382_36"
  " #382 36\ncall where #382 30\nset methods #382 2\npush #383 5\nclln len #383 13\neq 0 #383 22\nif 23"
  " #383 2\npush methods #385 12\nclln len #385 20\ngt 1 #385 28\nifn 37 #385 9\npush error #386"
  " 10\npush str #386 22\nres cls #386 26\ncall #386 25\npush #386 31\npush \' has multiple \' #386"
  " 34\nadd #386 31\npush #386 50\npush str #386 52\nres annot #386 56\ncall #386 55\npush #386 50\nadd"
  " #386 50\npush #386 63\npush \' annotated methods.\' #386 66\nadd #386 63\ncall Error #386 16\nrais"
  " #386 4\njmp 18 #385 9\npush error #384 10\npush str #384 22\nres cls #384 26\ncall #384 25\npush"
  " #384 31\npush \' has no \' #384 34\nadd #384 31\npush #384 44\npush str #384 46\nres annot #384"
  " 50\ncall #384 49\npush #384 44\nadd #384 44\npush #384 57\npush \' annotated methods.\' #384"
  " 60\nadd #384 57\ncall Error #384 16\nrais #384 4\npush instance #388 9\npush methods #388 23\naidx"
  " 0 #388 31\npush #388 33\nclln name #388 34\ncall $get #388 18\nret #388 2\nbody\n\'import"
  " async\\r\\n\'\n\'import error\\r\\n\'\n\'import inject\\r\\n\'\n\'import io\\r\\n\'\n\'import"
  " net\\r\\n\'\n\'import socket\\r\\n\'\n\'import struct\\r\\n\'\n\'\\r\\n\'\n\'class Header"
  " {\\r\\n\'\n\'  new(field protocol,\\r\\n\'\n\'      field version,\\r\\n\'\n\'      field"
  " status_code,\\r\\n\'\n\'      field status,\\r\\n\'\n\'      field content_type,\\r\\n\'\n\'     "
  " field charset) {}\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    cat(protocol, \\\'/\\\', version,"
  " \\\' \\\',\\r\\n\'\n\'           status_code, \\\' \\\', status,\\r\\n\'\n\'          "
  " \\\'\\\\r\\\\nContent-Type: \\\', content_type,\\r\\n\'\n\'           \\\'; charset=\\\', charset,"
  " \\\'\\\\r\\\\n\\\\r\\\\n\\\')\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function"
  " parse_header(header_text) {\\r\\n\'\n\'  i = header_text.find(\\\'/\\\')\\r\\n\'\n\'  protocol ="
  " header_text.substr(0, i)\\r\\n\'\n\'  i2 = i + 1 + header_text.find(\\\' \\\', i+1)\\r\\n\'\n\' "
  " version = header_text.substr(i+1, i2)\\r\\n\'\n\'  i3 = i2 + 1 + header_text.find(\\\' \\\',"
  " i2+1)\\r\\n\'\n\'  status_code = header_text.substr(i2+1, i3)\\r\\n\'\n\'  i4 = i3 + 1 +"
  " header_text.find(\\\'\\\\r\\\\n\\\', i3+1)\\r\\n\'\n\'  status = header_text.substr(i3+1,"
  " i4)\\r\\n\'\n\'  i5 = i4 + 1 + header_text.find(\\\' \\\', i4+1)\\r\\n\'\n\'  i6 = i5 + 1 +"
  " header_text.find(\\\';\\\', i5+1)\\r\\n\'\n\'  content_type = header_text.substr(i5+1,"
  " i6)\\r\\n\'\n\'  i7 = i6 + 1 + header_text.find(\\\'=\\\', i6+1)\\r\\n\'\n\'  i8 = i7 + 1 +"
  " header_text.find(\\\'\\\\r\\\\n\\\', i7+1)\\r\\n\'\n\'  charset = header_text.substr(i7+1,"
  " i8)\\r\\n\'\n\'  return Header(protocol, version, status_code, status, content_type,"
  " charset)\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class HttpRequest {\\r\\n\'\n\'    field"
  " _headers\\r\\n\'\n\'    new(field type,\\r\\n\'\n\'        field path,\\r\\n\'\n\'        field"
  " params,\\r\\n\'\n\'        field protocol,\\r\\n\'\n\'        field version,\\r\\n\'\n\'       "
  " headers) {\\r\\n\'\n\'          _headers = headers\\r\\n\'\n\'        }\\r\\n\'\n\'    method"
  " get_header_value(key) {\\r\\n\'\n\'      return _headers[key]\\r\\n\'\n\'    }\\r\\n\'\n\'   "
  " method get_host() {\\r\\n\'\n\'      return _headers[\\\'Host\\\']\\r\\n\'\n\'    }\\r\\n\'\n\'   "
  " method get_connection() {\\r\\n\'\n\'      return _headers[\\\'Connection\\\']\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    method get_user_agent() {\\r\\n\'\n\'      return"
  " _headers[\\\'User-Agent\\\']\\r\\n\'\n\'    }\\r\\n\'\n\'    method get_accept() {\\r\\n\'\n\'     "
  " return _headers[\\\'Accept\\\'].split(\\\',\\\')\\r\\n\'\n\'    }\\r\\n\'\n\'    method"
  " get_cookie() {\\r\\n\'\n\'      return _headers[\\\'Cookie\\\']\\r\\n\'\n\'    }\\r\\n\'\n\'   "
  " method to_s() {\\r\\n\'\n\'      ret = cat(type, \\\' \\\', path)\\r\\n\'\n\'      if params and"
  " (params.keys.len() > 0) {\\r\\n\'\n\'        ret.extend(\\\'?\\\')\\r\\n\'\n\'        param_arr ="
  " []\\r\\n\'\n\'        for (k, v) in params {\\r\\n\'\n\'          param_arr.append(cat(k,"
  " \\\'=\\\', v))\\r\\n\'\n\'        }\\r\\n\'\n\'       "
  " ret.extend(\\\'&\\\'.join(param_arr))\\r\\n\'\n\'      }\\r\\n\'\n\'      ret.extend(\\\'"
  " \\\').extend(protocol).extend(\\\'/\\\')\\r\\n\'\n\'         "
  " .extend(version).extend(\\\'\\\\r\\\\n\\\')\\r\\n\'\n\'      if _headers {\\r\\n\'\n\'        for"
  " (k, v) in _headers {\\r\\n\'\n\'          ret.extend(\\\'  \\\').extend(k).extend(\\\':"
  " \\\').extend(str(v))\\r\\n\'\n\'              .extend(\\\'\\\\r\\\\n\\\')\\r\\n\'\n\'       "
  " }\\r\\n\'\n\'      }\\r\\n\'\n\'      return ret\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'\\r\\n\'\n\'class HttpResponse {\\r\\n\'\n\'  field"
  " _protocol, _version, _status_code, _status\\r\\n\'\n\'  field _headers, _content,"
  " _set_cookies\\r\\n\'\n\'  new() {\\r\\n\'\n\'    _protocol = \\\'HTTP\\\'\\r\\n\'\n\'    _version ="
  " 1.1\\r\\n\'\n\'    _status_code = 200\\r\\n\'\n\'    _status = \\\'OK\\\'\\r\\n\'\n\'    _headers ="
  " {}\\r\\n\'\n\'    _headers[\\\'Content-Type\\\'] = \\\'text/html\\\'\\r\\n\'\n\'   "
  " _headers[\\\'Accept-Ranges\\\'] = \\\'bytes\\\'\\r\\n\'\n\'    _headers[\\\'Content-Length\\\'] ="
  " 0\\r\\n\'\n\'    _content = \\\'\\\'\\r\\n\'\n\'    _set_cookies = {}\\r\\n\'\n\'  }\\r\\n\'\n\' "
  " method set_status(status) {\\r\\n\'\n\'    _status = status\\r\\n\'\n\'    return self\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  method set_status_code(status_code) {\\r\\n\'\n\'    _status_code ="
  " status_code\\r\\n\'\n\'    return self\\r\\n\'\n\'  }\\r\\n\'\n\'  method set_server(server)"
  " {\\r\\n\'\n\'    _headers[\\\'Server\\\'] = server\\r\\n\'\n\'    return self\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  method set_date(date_text) {\\r\\n\'\n\'    _headers[\\\'Date\\\'] ="
  " date_text\\r\\n\'\n\'    return self\\r\\n\'\n\'  }\\r\\n\'\n\'  method"
  " set_last_modified(date_text) {\\r\\n\'\n\'    _headers[\\\'Last-Modified\\\'] ="
  " date_text\\r\\n\'\n\'    return self\\r\\n\'\n\'  }\\r\\n\'\n\'  method set_content_type(type)"
  " {\\r\\n\'\n\'    _headers[\\\'Content-Type\\\'] = type\\r\\n\'\n\'    return self\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  method set_accept_ranges(ranges) {\\r\\n\'\n\'    _headers[\\\'Accept-Ranges\\\'] ="
  " ranges\\r\\n\'\n\'    return self\\r\\n\'\n\'  }\\r\\n\'\n\'  method set_cookie(name, value)"
  " {\\r\\n\'\n\'    _set_cookies[str(name)] = str(value)\\r\\n\'\n\'  }\\r\\n\'\n\'  method"
  " add_content(text) {\\r\\n\'\n\'    _content.extend(text)\\r\\n\'\n\'   "
  " _headers[\\\'Content-Length\\\'] = _headers[\\\'Content-Length\\\'] + text.len()\\r\\n\'\n\'   "
  " return self\\r\\n\'\n\'  }\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    res = cat(_protocol,"
  " \\\'/\\\', _version, \\\' \\\', _status_code, \\\' \\\', _status, \\\'\\\\r\\\\n\\\')\\r\\n\'\n\'  "
  "  for (k, v) in _headers {\\r\\n\'\n\'      res.extend(cat(k, \\\': \\\', v,"
  " \\\'\\\\r\\\\n\\\'))\\r\\n\'\n\'    }\\r\\n\'\n\'    for (name, value) in _set_cookies"
  " {\\r\\n\'\n\'      res.extend((cat(\\\'Set-Cookie: \\\', _set_cookie_string(name, value),"
  " \\\'\\\\r\\\\n\\\')))\\r\\n\'\n\'    }\\r\\n\'\n\'    res.extend(\\\'\\\\r\\\\n\\\')\\r\\n\'\n\'   "
  " res.extend(_content)\\r\\n\'\n\'    return res\\r\\n\'\n\'  }\\r\\n\'\n\'  method"
  " _set_cookie_string(name, value) {\\r\\n\'\n\'    return cat(name, \\\'=\\\"\\\', value,"
  " \\\'\\\"\\\')\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function redirect(request,"
  " response, target) {\\r\\n\'\n\'  response.set_status_code(301)\\r\\n\'\n\'  location ="
  " target\\r\\n\'\n\'  if request.params and (request.params.keys.len() > 0) {\\r\\n\'\n\'   "
  " location.extend(\\\'?\\\')\\r\\n\'\n\'    param_arr = []\\r\\n\'\n\'    for (k, v) in"
  " request.params {\\r\\n\'\n\'      param_arr.append(cat(k, \\\'=\\\', v))\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    location.extend(\\\'&\\\'.join(param_arr))\\r\\n\'\n\'  }\\r\\n\'\n\' "
  " response._headers[\\\'Location\\\'] = location\\r\\n\'\n\'  return"
  " response\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function parse_params(path) {\\r\\n\'\n\'  q_index ="
  " path.find(\\\'?\\\')\\r\\n\'\n\'  if ~q_index {\\r\\n\'\n\'    return (path, {})\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  (\\r\\n\'\n\'    path.substr(0, q_index),\\r\\n\'\n\'    path.substr(q_index +"
  " 1)\\r\\n\'\n\'      .split(\\\'&\\\')\\r\\n\'\n\'      .collect(\\r\\n\'\n\'        (a, part)"
  " {\\r\\n\'\n\'          eq_index = part.find(\\\'=\\\')\\r\\n\'\n\'          if ~eq_index"
  " {\\r\\n\'\n\'            a[part] =\\\'1\\\'\\r\\n\'\n\'          } else {\\r\\n\'\n\'           "
  " a[part.substr(0, eq_index)] = part.substr(eq_index + 1)\\r\\n\'\n\'          }\\r\\n\'\n\'         "
  " return a\\r\\n\'\n\'        },\\r\\n\'\n\'        {}))\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function"
  " parse_request(req) {\\r\\n\'\n\'  try {\\r\\n\'\n\'    parts ="
  " req.split(\\\'\\\\r\\\\n\\\')\\r\\n\'\n\'    if parts.len() == 0 {\\r\\n\'\n\'      raise"
  " error.Error(cat(\\\'Invalid request: \\\', req))\\r\\n\'\n\'    }\\r\\n\'\n\'    request ="
  " parts[0].trim()\\r\\n\'\n\'    req_head = request.split(\\\' \\\')\\r\\n\'\n\'    type ="
  " req_head[0]\\r\\n\'\n\'    path = req_head[1]\\r\\n\'\n\'    (path, params) ="
  " parse_params(path)\\r\\n\'\n\'    protocol = req_head[2].split(\\\'/\\\')\\r\\n\'\n\'   "
  " \\r\\n\'\n\'    map = {}\\r\\n\'\n\'    for i=1, i<parts.len(), i=i+1 {\\r\\n\'\n\'      kv ="
  " parts[i].split(\\\':\\\')\\r\\n\'\n\'      key = kv[0].trim()\\r\\n\'\n\'      map[kv[0].trim()] ="
  " kv[1].trim()\\r\\n\'\n\'    }\\r\\n\'\n\'    return HttpRequest(type, path, params, protocol[0],"
  " protocol[1], map)\\r\\n\'\n\'  } catch e {\\r\\n\'\n\'    io.fprintln(io.ERROR, e)\\r\\n\'\n\'   "
  " return None\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'@inject.Inject(keys: [HttpRequest,"
  " HttpResponse])\\r\\n\'\n\'class Cookies {\\r\\n\'\n\'  field cookies_map\\r\\n\'\n\'\\r\\n\'\n\' "
  " new(field req, field resp) {\\r\\n\'\n\'    cookies_map ="
  " _parse_cookie_map(req.get_cookie())\\r\\n\'\n\'  }\\r\\n\'\n\'  method [](name) {\\r\\n\'\n\'   "
  " return cookies_map[name]\\r\\n\'\n\'  }\\r\\n\'\n\'  method []=(name, value) {\\r\\n\'\n\'   "
  " cookies_map[name] = value\\r\\n\'\n\'    resp.set_cookie(name, value)\\r\\n\'\n\'  }\\r\\n\'\n\' "
  " method to_s() {\\r\\n\'\n\'    return cookies_map.to_s()\\r\\n\'\n\'  }\\r\\n\'\n\'  method"
  " _parse_cookie_map(cookie_string) {\\r\\n\'\n\'    if ~cookie_string or cookie_string == \\\'\\\'"
  " {\\r\\n\'\n\'      return {}\\r\\n\'\n\'    }\\r\\n\'\n\'\\r\\n\'\n\'    res = {}\\r\\n\'\n\'   "
  " kvs = cookie_string.split(\\\'; \\\')\\r\\n\'\n\'    for i=0, i<kvs.len(), i=i+1 {\\r\\n\'\n\'     "
  " kv = kvs[i].split(\\\'=\\\')\\r\\n\'\n\'      res[kv[0]] = kv[1]\\r\\n\'\n\'    }\\r\\n\'\n\'   "
  " return res\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class HttpSocketHandle {\\r\\n\'\n\' "
  " new(field raw_handle) {}\\r\\n\'\n\'\\r\\n\'\n\'  method receive() async {\\r\\n\'\n\'   "
  " raw_request = await raw_handle.receive()\\r\\n\'\n\'    ; When the connection is gracefully closed,"
  " the response is None.\\r\\n\'\n\'    if ~raw_request {\\r\\n\'\n\'      return None\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    return parse_request(raw_request)\\r\\n\'\n\'  }\\r\\n\'\n\'  method"
  " send(http_response) async {\\r\\n\'\n\'    if ~(http_response is HttpResponse) {\\r\\n\'\n\'     "
  " raise Error(\\\'HttpSocketHandle.send() expects an HttpResponse argument.\\\')\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    await raw_handle.send(http_response.to_s())\\r\\n\'\n\'  }\\r\\n\'\n\'  method"
  " close() {\\r\\n\'\n\'    raw_handle.close()\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class HttpSocket {\\r\\n\'\n\'  new(field raw_socket)"
  " {}\\r\\n\'\n\'\\r\\n\'\n\'  method accept() async {\\r\\n\'\n\'    HttpSocketHandle(await"
  " raw_socket.accept())\\r\\n\'\n\'  }\\r\\n\'\n\'  method close() {\\r\\n\'\n\'   "
  " raw_socket.close()\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class Rpc { method"
  " annotate(_) {} }\\r\\n\'\n\'\\r\\n\'\n\'class Get { method annotate(_) {} }\\r\\n\'\n\'class Head {"
  " method annotate(_) {} }\\r\\n\'\n\'class Post { method annotate(_) {} }\\r\\n\'\n\'class Put {"
  " method annotate(_) {} }\\r\\n\'\n\'class Delete { method annotate(_) {} }\\r\\n\'\n\'class Connect"
  " { method annotate(_) {} }\\r\\n\'\n\'class Options { method annotate(_) {} }\\r\\n\'\n\'class Trace"
  " { method annotate(_) {} }\\r\\n\'\n\'class Patch { method annotate(_) {}"
  " }\\r\\n\'\n\'\\r\\n\'\n\'function always_true() {\\r\\n\'\n\' "
  " True\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class RequestController {\\r\\n\'\n\'  new(field"
  " matcher_fn=always_true) {}\\r\\n\'\n\'  method marshall(req) { req }\\r\\n\'\n\'  method"
  " unmarshall(resp) { resp }\\r\\n\'\n\'  method preinject(injector, req) {}\\r\\n\'\n\'  method"
  " process(controller, req, injector) {\\r\\n\'\n\'    return find_annotated_method(controller,"
  " Rpc)(req)\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class HttpRequestController :"
  " RequestController {\\r\\n\'\n\'  new(http_matcher_fn=always_true) {\\r\\n\'\n\'   "
  " super(RequestController)(http_matcher_fn)\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method"
  " marshall(req) { \\r\\n\'\n\'    http_req = parse_request(req)\\r\\n\'\n\'   "
  " io.println(\\\'HTTP/\\\' + http_req.version + \\\' \\\' + http_req.path)\\r\\n\'\n\'    return"
  " http_req\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method unmarshall(resp) { resp.to_s()"
  " }\\r\\n\'\n\'\\r\\n\'\n\'  method preinject(injector, req) {\\r\\n\'\n\'    resp ="
  " net.HttpResponse()\\r\\n\'\n\'    injector.install(HttpRequest, () -> req)\\r\\n\'\n\'   "
  " injector.install(HttpResponse, () -> resp)\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method"
  " process(controller, req, injector) {\\r\\n\'\n\'    resp = injector.get(HttpResponse)\\r\\n\'\n\'  "
  "  find_annotated_method(controller, _get_label(req))(req, resp)\\r\\n\'\n\'    return"
  " resp\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method _get_label(req) {"
  " _REQUEST_METHOD_TO_ANNOTATION[req.type] }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class Application"
  " {\\r\\n\'\n\'  field controller_classes, provider_sets\\r\\n\'\n\'\\r\\n\'\n\'  new(field host,"
  " field port) {\\r\\n\'\n\'    controller_classes = []\\r\\n\'\n\'    provider_sets = []\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  method add_controller(ctrlr_cls) {\\r\\n\'\n\'   "
  " controller_classes.append(ctrlr_cls)\\r\\n\'\n\'    return self\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  method add_provider_set(ps) {\\r\\n\'\n\'   "
  " provider_sets.append(ps)\\r\\n\'\n\'    return self\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method"
  " start() {\\r\\n\'\n\'    io.println(\\\'Starting app at \\\' + str(host) + \\\':\\\' + "
  " str(port))\\r\\n\'\n\'    async.create_remote(\\r\\n\'\n\'        ApplicationRunner,\\r\\n\'\n\'   "
  "     (host, port, controller_classes, provider_sets))\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'self._REQUEST_METHOD_TO_ANNOTATION = {\\r\\n\'\n\' "
  " \\\'GET\\\': Get,\\r\\n\'\n\'  \\\'HEAD\\\': Head,\\r\\n\'\n\'  \\\'POST\\\': Post,\\r\\n\'\n\' "
  " \\\'PUT\\\': Put,\\r\\n\'\n\'  \\\'DELETE\\\': Delete,\\r\\n\'\n\'  \\\'CONNECT\\\':"
  " Connect,\\r\\n\'\n\'  \\\'OPTIONS\\\': Options,\\r\\n\'\n\'  \\\'TRACE\\\': Trace,\\r\\n\'\n\' "
  " \\\'PATCH\\\': Patch\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function find_annotated_method(instance,"
  " annot) {\\r\\n\'\n\'  cls = instance.class()\\r\\n\'\n\'  methods = cls.all_methods().where(m ->"
  " m.annotations.where(a -> a is annot).len() > 0)\\r\\n\'\n\'  if methods.len() == 0 {\\r\\n\'\n\'   "
  " raise error.Error(str(cls) + \\\' has no \\\' + str(annot) + \\\' annotated"
  " methods.\\\')\\r\\n\'\n\'  } else if methods.len() > 1 {\\r\\n\'\n\'    raise error.Error(str(cls)"
  " + \\\' has multiple \\\' + str(annot) + \\\' annotated methods.\\\')\\r\\n\'\n\'  }\\r\\n\'\n\' "
  " return"
  " instance.$get(methods[0].name())\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'@async.RemoteClass\\r\\n\'\n\'"
  "class ApplicationRunner {\\r\\n\'\n\'  field injector\\r\\n\'\n\'  new(field host, field port, field"
  " controller_classes, field provider_sets=[]) {\\r\\n\'\n\'    injector ="
  " inject.Injector()\\r\\n\'\n\'    provider_sets.each(ps -> injector.install(ps()))\\r\\n\'\n\'   "
  " for (_, ctrlr_cls) in controller_classes {\\r\\n\'\n\'      injector.install(ctrlr_cls)\\r\\n\'\n\'"
  "    }\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method _select_controller(request) {\\r\\n\'\n\'   "
  " for (_, ctrlr_cls) in controller_classes {\\r\\n\'\n\'      req_ctrlr ="
  " _get_request_controller(ctrlr_cls)\\r\\n\'\n\'      if req_ctrlr.matcher_fn(request) {\\r\\n\'\n\' "
  "       return (req_ctrlr, ctrlr_cls)\\r\\n\'\n\'      }\\r\\n\'\n\'    }\\r\\n\'\n\'    return"
  " (None, None)\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method process(request, timer) {\\r\\n\'\n\'  "
  "  (req_ctrlr, ctrlr_cls) = _select_controller(request)\\r\\n\'\n\'    if ~req_ctrlr or ~ctrlr_cls"
  " {\\r\\n\'\n\'      raise error.Error(\\\'No controller found for request: \\\' +"
  " str(request))\\r\\n\'\n\'    }\\r\\n\'\n\'    request = req_ctrlr.marshall(request)\\r\\n\'\n\'   "
  " req_ctrlr.preinject(injector, request)\\r\\n\'\n\'    ctrlr = injector.get(ctrlr_cls)\\r\\n\'\n\'  "
  "  resp = req_ctrlr.process(ctrlr, request, injector)\\r\\n\'\n\'    resp ="
  " req_ctrlr.unmarshall(resp)\\r\\n\'\n\'    return resp\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\' "
  " method _get_request_controller(ctrlr_cls) {\\r\\n\'\n\'    req_ctrlrs ="
  " ctrlr_cls.all_annotations().where(a -> a is RequestController)\\r\\n\'\n\'    if req_ctrlrs.len()"
  " == 0 {\\r\\n\'\n\'      raise error.Error(str(ctrlr_cls) + \\\' has no RequestController"
  " annotation.\\\')\\r\\n\'\n\'    } else if req_ctrlrs.len() > 1 {\\r\\n\'\n\'      raise"
  " error.Error(str(ctrlr_cls) + \\\' has multiple RequestController annotations.\\\')\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    return req_ctrlrs[0]\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method run()"
  " {\\r\\n\'\n\'    sock = socket.create_server_socket(host, port)\\r\\n\'\n\'    while True"
  " {\\r\\n\'\n\'      handle = await sock.accept()\\r\\n\'\n\'      try {\\r\\n\'\n\'        req ="
  " await handle.receive()\\r\\n\'\n\'        resp = process(req, timer)\\r\\n\'\n\'        await"
  " handle.send(resp)\\r\\n\'\n\'      } catch e {\\r\\n\'\n\'        io.fprintln(io.ERROR,"
  " e)\\r\\n\'\n\'      }\\r\\n\'\n\'      handle.close()\\r\\n\'\n\'    }\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class Server {\\r\\n\'\n\'  field"
  " apps\\r\\n\'\n\'\\r\\n\'\n\'  new() {\\r\\n\'\n\'    apps = []\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  method add_application(app) {\\r\\n\'\n\'   "
  " apps.append(app)\\r\\n\'\n\'    return self\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method run()"
  " {\\r\\n\'\n\'    await async.all(apps.map(app -> app.start().run()))\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n"};

const char *LIB_socket[] = {
  "module socket\nsource \'lib/socket.zn\'\nlmdl io #0 7\nmset io #0 7\npush -1 #2 21\nres self #2"
  " 0\nfld SOCKET_ERROR #2 5\npush 2 #3 15\nres self #3 0\nfld AF_INET #3 5\npush 0 #4 18\nres self #4"
  " 0\nfld INADDR_ANY #4 5\npush 1 #5 19\nres self #5 0\nfld SOCK_STREAM #5 5\npush __init #7 0\nclln"
  " #7 6\njmp 3 #17 15\n@$anon_17_15\npush __cleanup #17 21\nclln #17 30\nret #17 15\npush $anon_17_15"
  " #17 15\nres self #17 0\nfld cleanup #17 5\nexit 0\n@create_server_socket\npush #9 29\ntlen #9"
  " 30\neq -1 #9 30\nifn 5 #9 30\nres #9 30\nlet host #9 30\nrnil #9 36\nlet port #9 36\njmp 6 #9"
  " 30\npeek #9 30\ntget 0 #9 29\nlet host #9 30\nres #9 29\ntget 1 #9 29\nlet port #9 36\npush Socket"
  " #10 2\nrtru #10 49\npush #10 16\npush 4 #10 46\npush port #10 40\npush host #10 34\npush 0 #10"
  " 31\npush SOCK_STREAM #10 18\npush AF_INET #10 9\ntupl 7 #10 16\ncall #10 8\nret #9"
  " 0\n@create_client_socket\npush #13 29\ntlen #13 30\neq -1 #13 30\nifn 5 #13 30\nres #13 30\nlet"
  " host #13 30\nrnil #13 36\nlet port #13 36\njmp 6 #13 30\npeek #13 30\ntget 0 #13 29\nlet host #13"
  " 30\nres #13 29\ntget 1 #13 29\nlet port #13 36\npush Socket #14 2\nrfls #14 49\npush #14 16\npush 4"
  " #14 46\npush port #14 40\npush host #14 34\npush 0 #14 31\npush SOCK_STREAM #14 18\npush AF_INET"
  " #14 9\ntupl 7 #14 16\ncall #14 8\nret #13 0\nbody\n\'import"
  " io\\r\\n\'\n\'\\r\\n\'\n\'self.SOCKET_ERROR = -1\\r\\n\'\n\'self.AF_INET ="
  " 2\\r\\n\'\n\'self.INADDR_ANY = 0\\r\\n\'\n\'self.SOCK_STREAM ="
  " 1\\r\\n\'\n\'\\r\\n\'\n\'__init()\\r\\n\'\n\'\\r\\n\'\n\'function create_server_socket(host, port)"
  " {\\r\\n\'\n\'  Socket(AF_INET, SOCK_STREAM, 0, host, port, 4,"
  " True)\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function create_client_socket(host, port) {\\r\\n\'\n\' "
  " Socket(AF_INET, SOCK_STREAM, 0, host, port, 4,"
  " False)\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'self.cleanup = () ->"
  " __cleanup()\\r\\n\'\n\'\\r\\n\'\n\'; class Socket { }\\r\\n\'\n\'; class SocketHandle { }\\r\\n\'\n"};

const char *LIB_struct[] = {
  "module struct\nsource \'lib/struct.zn\'\nlmdl builtin #0 7\nmset builtin #0 7\nlmdl math #1 7\nmset"
  " math #1 7\nexit 0\nclass Map\nfield table\nfield keys\nfield sz\n@new\npush #3 6\npnil #4 8\nres"
  " self #4 8\nfld table #4 8\npnil #4 15\nres self #4 15\nfld keys #4 15\npnil #5 12\nres self #5"
  " 12\nfld sz #5 12\npeek #3 6\ntgte 1 #5 12\nif 2 #5 12\nres 31 #5 15\njmp 1 #5 12\nres #5 12\ntget 0"
  " #5 12\npush #5 12\nres self #5 12\nfld sz #5 12\nanew #6 12\nset table #6 4\nrnil #7 16\npush #7"
  " 14\npush table #7 4\nres sz #7 10\naset #7 9\nanew #8 11\nset keys #8 4\nres self #5 2\nret #5"
  " 2\n@_hash\nlet k #10 15\npush builtin #11 11\nres k #11 24\ncall hash #11 19\nset hval #11 4\nmod"
  " sz #12 17\nset pos #12 4\nlt 0 #13 13\nifn 3 #13 4\nres pos #13 22\nmult -1 #13 21\nset pos #13"
  " 15\nres pos #14 11\nret #14 4\n@__set__\npush #17 12\ntlen #17 13\neq -1 #17 13\nifn 5 #17 13\nres"
  " #17 13\nlet k #17 13\nrnil #17 16\nlet v #17 16\njmp 6 #17 13\npeek #17 13\ntget 0 #17 12\nlet k"
  " #17 13\nres #17 12\ntget 1 #17 12\nlet v #17 16\npush _hash #18 10\nres k #18 16\ncall #18 15\nset"
  " pos #18 4\npush table #19 14\naidx pos #19 20\nset entries #19 4\nnot #20 7\nifn 14 #20 4\npush v"
  " #21 23\npush k #21 21\ntupl 2 #21 22\npush #21 19\nanew 1 #21 19\npush #21 17\npush table #21"
  " 6\nres pos #21 12\naset #21 11\npush keys #22 6\nres k #22 18\ncall append #22 11\nrnil #23 13\nret"
  " #23 6\nnblk #25 4\nres 0 #25 10\nset i #25 8\npush i #25 13\npush entries #25 15\nclln len #25"
  " 23\npush #25 14\nlt #25 14\nifn 26 #25 4\npush k #26 9\npush entries #26 14\naidx i #26 22\npush"
  " #26 24\naidx 0 #26 25\npush #26 11\neq #26 11\nifn 14 #26 6\npush entries #27 16\naidx i #27"
  " 24\npush #27 26\naidx 1 #27 27\nset old_v #27 8\npush v #28 24\npush k #28 22\ntupl 2 #28 23\npush"
  " #28 19\npush entries #28 8\nres i #28 16\naset #28 15\nres old_v #29 15\nret #29 8\nres i #25"
  " 32\nadd 1 #25 34\nset i #25 30\njmp -32 #25 4\nbblk #25 4\npush entries #32 4\npush v #32 22\npush"
  " k #32 20\ntupl 2 #32 21\ncall append #32 12\npush keys #33 4\nres k #33 16\ncall append #33 9\nrnil"
  " #34 11\nret #34 4\n@__index__\nlet k #37 12\npush _hash #38 10\nres k #38 16\ncall #38 15\nset pos"
  " #38 4\npush table #39 14\naidx pos #39 20\nset entries #39 4\nnot #40 7\nifn 2 #40 4\nrnil #41"
  " 13\nret #41 6\nnblk #43 4\nres 0 #43 10\nset i #43 8\npush i #43 13\npush entries #43 15\nclln len"
  " #43 23\npush #43 14\nlt #43 14\nifn 17 #43 4\npush k #44 9\npush entries #44 14\naidx i #44"
  " 22\npush #44 24\naidx 0 #44 25\npush #44 11\neq #44 11\nifn 5 #44 6\npush entries #45 15\naidx i"
  " #45 23\npush #45 25\naidx 1 #45 26\nret #45 8\nres i #43 32\nadd 1 #43 34\nset i #43 30\njmp -23"
  " #43 4\nbblk #43 4\nrnil #48 11\nret #48 4\n@__in__\nlet k #51 16\npush self #52 4\naidx k #52"
  " 9\nret #51 2\n@remove\nlet k #55 16\npush _hash #56 10\nres k #56 16\ncall #56 15\nset pos #56"
  " 4\npush table #57 14\naidx pos #57 20\nset entries #57 4\nnot #58 7\nifn 2 #58 4\nrnil #59 13\nret"
  " #59 6\nnblk #61 4\nres 0 #61 10\nset i #61 8\npush i #61 13\npush entries #61 15\nclln len #61"
  " 23\npush #61 14\nlt #61 14\nifn 25 #61 4\npush k #62 9\npush entries #62 14\naidx i #62 22\npush"
  " #62 24\naidx 0 #62 25\npush #62 11\neq #62 11\nifn 13 #62 6\npush entries #63 16\naidx i #63"
  " 24\npush #63 26\naidx 1 #63 27\nset old_v #63 8\npush entries #64 8\nres i #64 23\ncall remove #64"
  " 16\npush keys #65 8\nres k #65 26\ncall remove_value #65 13\nres old_v #66 15\nret #66 8\nres i #61"
  " 32\nadd 1 #61 34\nset i #61 30\njmp -31 #61 4\nbblk #61 4\nrnil #69 11\nret #69"
  " 4\n@get_or_default\npush #71 23\ntlen #71 24\neq -1 #71 24\nifn 5 #71 24\nres #71 24\nlet k #71"
  " 24\nrnil #71 27\nlet d #71 27\njmp 6 #71 24\npeek #71 24\ntget 0 #71 23\nlet k #71 24\nres #71"
  " 23\ntget 1 #71 23\nlet d #71 27\npush self #72 8\naidx k #72 13\nset v #72 4\nnot #73 7\nifn 2 #73"
  " 4\nres d #74 13\nret #74 6\nres v #76 11\nret #76 4\n@get_or_else\npush #78 20\ntlen #78 21\neq -1"
  " #78 21\nifn 5 #78 21\nres #78 21\nlet k #78 21\nrnil #78 24\nlet fn #78 24\njmp 6 #78 21\npeek #78"
  " 21\ntget 0 #78 20\nlet k #78 21\nres #78 20\ntget 1 #78 20\nlet fn #78 24\npush self #79 8\naidx k"
  " #79 13\nset v #79 4\nnot #80 7\nifn 4 #80 4\npush fn #81 13\nres k #81 16\ncall #81 15\nret #81"
  " 6\nres v #83 11\nret #83 4\n@put_if_absent\npush #85 22\ntlen #85 23\neq -1 #85 23\nifn 5 #85"
  " 23\nres #85 23\nlet k #85 23\nrnil #85 26\nlet v #85 26\njmp 6 #85 23\npeek #85 23\ntget 0 #85"
  " 22\nlet k #85 23\nres #85 22\ntget 1 #85 22\nlet v #85 26\npush self #86 14\nres k #86 9\ncall"
  " __in__ #86 11\nnot #86 7\nifn 4 #86 4\npush v #87 16\npush self #87 6\nres k #87 11\naset #87"
  " 10\nret #85 2\n@compute\npush #90 16\ntlen #90 17\neq -1 #90 17\nifn 5 #90 17\nres #90 17\nlet k"
  " #90 17\nrnil #90 20\nlet remapping_fn #90 20\njmp 6 #90 17\npeek #90 17\ntget 0 #90 16\nlet k #90"
  " 17\nres #90 16\ntget 1 #90 16\nlet remapping_fn #90 20\npush self #91 16\naidx k #91 21\nset"
  " old_value #91 4\npush remapping_fn #92 16\npush old_value #92 32\npush k #92 29\ntupl 2 #92"
  " 30\ncall #92 28\nset new_value #92 4\nif 6 #93 4\nres old_value #95 14\nifn 8 #95 11\npush remove"
  " #96 6\nres k #96 13\ncall #96 12\njmp 4 #95 11\npush new_value #94 16\npush self #94 6\nres k #94"
  " 11\naset #94 10\nres new_value #98 11\nret #98 4\n@compute_if_absent\npush #100 26\ntlen #100"
  " 27\neq -1 #100 27\nifn 5 #100 27\nres #100 27\nlet k #100 27\nrnil #100 30\nlet mapping_fn #100"
  " 30\njmp 6 #100 27\npeek #100 27\ntget 0 #100 26\nlet k #100 27\nres #100 26\ntget 1 #100 26\nlet"
  " mapping_fn #100 30\npush self #101 14\nres k #101 9\ncall __in__ #101 11\nnot #101 7\nifn 11 #101"
  " 4\npush mapping_fn #102 18\nres k #102 29\ncall #102 28\nset new_value #102 6\nifn 4 #103 6\npush"
  " new_value #104 18\npush self #104 8\nres k #104 13\naset #104 12\nres new_value #106 13\nret #106"
  " 6\nrnil #108 11\nret #108 4\n@compute_if_present\npush #110 27\ntlen #110 28\neq -1 #110 28\nifn 5"
  " #110 28\nres #110 28\nlet k #110 28\nrnil #110 31\nlet remapping_fn #110 31\njmp 6 #110 28\npeek"
  " #110 28\ntget 0 #110 27\nlet k #110 28\nres #110 27\ntget 1 #110 27\nlet remapping_fn #110 31\npush"
  " self #111 16\naidx k #111 21\nset old_value #111 4\nifn 17 #112 4\npush remapping_fn #113 18\npush"
  " old_value #113 34\npush k #113 31\ntupl 2 #113 32\ncall #113 30\nset new_value #113 6\nifn 5 #114"
  " 6\npush new_value #115 18\npush self #115 8\nres k #115 13\naset #115 12\njmp 3 #114 6\npush remove"
  " #117 8\nres k #117 15\ncall #117 14\nres new_value #119 13\nret #119 6\nrnil #121 11\nret #121"
  " 4\n@iter\npush KVIterator #124 11\npush self #124 35\npush keys #124 22\nclln iter #124 27\npush"
  " #124 33\ntupl 2 #124 33\ncall #124 21\nret #124 4\n@each\nlet f #126 14\nnblk #127 4\npush self"
  " #127 18\ncall iter #127 15\npush #127 15\ndup #127 15\ncall has_next #127 15\nifn 14 #127 15\ndup"
  " #127 4\ncall next #127 15\npush #127 15\ndup #127 15\naidx 0 #127 15\nset k #127 9\naidx 1 #127"
  " 15\nset v #127 12\npush f #128 6\npush v #128 11\npush k #128 8\ntupl 2 #128 9\ncall #128 7\njmp"
  " -17 #127 15\nres #127 15\nbblk #127 4\nret #126 2\n@to_s\nanew #132 10\nset kvs #132 4\npush each"
  " #133 4\njmp 54 #133 9\n@$anon_133_9\npush #133 9\ntlen #133 10\neq -1 #133 10\nifn 5 #133 10\nres"
  " #133 10\nlet k #133 10\nrnil #133 13\nlet v #133 13\njmp 6 #133 10\npeek #133 10\ntget 0 #133"
  " 9\nlet k #133 10\nres #133 9\ntget 1 #133 9\nlet v #133 13\npush k #134 15\npush String #134 20\nis"
  " #134 17\nifn 7 #134 12\npush \'\\\'\' #134 33\nres k #134 44\ncall extend #134 37\npush #134"
  " 46\nres \'\\\'\' #134 55\ncall extend #134 47\njmp 3 #134 12\npush str #134 65\nres k #134 69\ncall"
  " #134 68\nset key #134 6\npush v #135 17\npush String #135 22\nis #135 19\nifn 7 #135 14\npush"
  " \'\\\'\' #135 35\nres v #135 46\ncall extend #135 39\npush #135 48\nres \'\\\'\' #135 57\ncall"
  " extend #135 49\njmp 3 #135 14\npush str #135 67\nres v #135 71\ncall #135 70\nset value #135"
  " 6\npush kvs #136 6\npush cat #136 17\npush value #136 32\npush \': \' #136 27\npush key #136"
  " 21\ntupl 3 #136 24\ncall #136 20\ncall append #136 10\nret #133 9\nres $anon_133_9 #133 9\ncall"
  " #133 8\npush cat #138 11\npush \'}\' #138 37\npush \', \' #138 21\nres kvs #138 30\ncall join #138"
  " 25\npush #138 18\npush \'{\' #138 16\ntupl 3 #138 18\ncall #138 14\nret #138 4\nendclass\nclass"
  " Cache\nfield map\n@new\npush #143 6\npnil #144 8\nres self #144 8\nfld map #144 8\npeek #143"
  " 6\ntgte 1 #145 6\nif 2 #145 6\nres 31 #145 9\njmp 1 #145 6\nres #145 6\ntget 0 #145 6\nlet sz #145"
  " 6\npush Map #146 10\nres sz #146 14\ncall #146 13\nset map #146 4\nres self #145 2\nret #145"
  " 2\n@get\npush #148 12\ntlen #148 13\neq -1 #148 13\nifn 7 #148 13\nres #148 13\nlet k #148 13\nrnil"
  " #148 16\nlet factory #148 16\nrnil #148 33\nlet default #148 25\njmp 14 #148 13\npeek #148 13\ntget"
  " 0 #148 12\nlet k #148 13\npeek #148 16\ntget 1 #148 12\nlet factory #148 16\npeek #148 12\ntgte 3"
  " #148 25\nifn 3 #148 25\nres #148 25\ntget 2 #148 12\njmp 1 #148 25\nrnil #148 33\nlet default #148"
  " 25\npush map #149 8\naidx k #149 12\nset v #149 4\nifn 2 #150 4\nres v #151 13\nret #151 6\nnblk"
  " #153 4\nctch 5 #155 6\npush factory #154 10\nres k #154 18\ncall #154 17\nset v #154 6\njmp 3 #155"
  " 6\nset e #155 12\nres default #156 10\nset v #156 6\nbblk #153 4\npush v #158 13\npush map #158"
  " 4\nres k #158 8\naset #158 7\nres v #159 11\nret #159 4\n@clear\nlet k #161 15\nrnil #162 13\npush"
  " #162 11\npush map #162 4\nres k #162 8\naset #162 7\nret #161 2\nendclass\nclass"
  " LoadingCache\nfield cache\nfield factory\n@new\npush #166 6\npnil #167 12\nres self #167 12\nfld"
  " cache #167 12\npnil #167 36\nres self #167 36\nfld factory #167 36\ntlen #167 12\neq -1 #167"
  " 12\nifn 7 #167 12\nres self #167 12\nfld cache #167 12\nrnil #167 36\npush #167 36\nres self #167"
  " 36\nfld factory #167 36\njmp 17 #167 12\npeek #167 5\ntgte 1 #167 12\nifn 3 #167 12\npeek #167"
  " 12\ntget 0 #167 5\njmp 3 #167 12\npush Cache #167 18\nres 255 #167 24\ncall #167 23\npush #167"
  " 12\nres self #167 12\nfld cache #167 12\nres #167 5\ntget 1 #167 5\npush #167 36\nres self #167"
  " 36\nfld factory #167 36\nres self #167 2\nret #167 2\n@get\nlet k #168 13\npush cache #169 4\npush"
  " factory #169 17\npush k #169 14\ntupl 2 #169 15\ncall get #169 10\nret #168 2\n@clear\npush cache"
  " #173 4\nclln clear #173 10\nret #172 2\nendclass\nclass Set\nfield map\n@new\npush #178 6\npnil"
  " #179 8\nres self #179 8\nfld map #179 8\npeek #178 6\ntgte 1 #180 6\nif 2 #180 6\nres 255 #180"
  " 9\njmp 1 #180 6\nres #180 6\ntget 0 #180 6\nlet sz #180 6\npush Map #181 10\nres sz #181 14\ncall"
  " #181 13\nset map #181 4\nres self #180 2\nret #180 2\n@insert\nlet k #184 16\npush #185 13\npush"
  " map #185 4\nres k #185 8\naset #185 7\nret #184 2\n@remove\nlet k #188 16\npush map #189 4\nres k"
  " #189 15\ncall remove #189 8\nret #188 2\n@__in__\nlet k #192 16\npush map #193 9\nres k #193"
  " 4\ncall __in__ #193 6\nret #192 2\nendclass\nclass _TreeNode\nfield left\nfield right\nfield"
  " height\nfield value\n@new\npush #197 6\npnil #198 8\nres self #198 8\nfld left #198 8\npnil #198"
  " 14\nres self #198 14\nfld right #198 14\npnil #198 21\nres self #198 21\nfld height #198 21\npnil"
  " #199 12\nres self #199 12\nfld value #199 12\nres self #199 12\nfld value #199 12\nrnil #200"
  " 11\nset left #200 4\nrnil #201 12\nset right #201 4\nres 1 #202 13\nset height #202 4\nres self"
  " #199 2\nret #199 2\n@to_s\npush \'_TreeNode(\' #206 5\npush str #206 19\nres value #206 23\ncall"
  " #206 22\npush #206 17\nadd #206 17\npush #206 30\npush \')\' #206 33\nadd #206 30\nret #205"
  " 2\nendclass\nclass TreeSet\nfield root\n@new\npush #221 6\npnil #222 8\nres self #222 8\nfld root"
  " #222 8\nres #221 6\nrnil #224 11\nset root #224 4\nres self #223 2\nret #223 2\n@insert\nlet v #229"
  " 16\npush _insert_helper #230 11\npush root #230 29\npush v #230 26\ntupl 2 #230 27\ncall #230"
  " 25\nset root #230 4\nret #229 2\n@insert_all\nlet l #235 20\nnblk #236 4\nres 0 #236 10\nset i #236"
  " 8\npush i #236 13\npush l #236 17\nclln len #236 19\npush #236 15\nlt #236 15\nifn 6 #236 4\npush"
  " insert #237 6\npush l #237 13\naidx i #237 15\ncall #237 12\ninc i #236 28\njmp -12 #236 4\nbblk"
  " #236 4\nret #235 2\n@_insert_helper\npush #241 23\ntlen #241 24\neq -1 #241 24\nifn 5 #241 24\nres"
  " #241 24\nlet v #241 24\nrnil #241 27\nlet node #241 27\njmp 6 #241 24\npeek #241 24\ntget 0 #241"
  " 23\nlet v #241 24\nres #241 23\ntget 1 #241 23\nlet node #241 27\nres node #242 8\nnot #242 7\nifn"
  " 4 #242 4\npush _TreeNode #243 13\nres v #243 23\ncall #243 22\nret #243 6\npush v #245 7\nres node"
  " #245 11\ngtsh value #245 16\nlt #245 9\nifn 10 #245 4\npush _insert_helper #246 18\nres node #246"
  " 36\ngtsh left #246 41\npush v #246 33\ntupl 2 #246 34\ncall #246 32\npush #246 16\nres node #246"
  " 6\nfld left #246 11\njmp 9 #245 4\npush _insert_helper #248 19\nres node #248 37\ngtsh right #248"
  " 42\npush v #248 34\ntupl 2 #248 35\ncall #248 33\npush #248 17\nres node #248 6\nfld right #248"
  " 11\npush 1 #251 18\npush math #251 22\npush _height #251 51\nres node #251 59\nget right #251"
  " 64\ncall #251 58\npush #251 49\npush _height #251 31\nres node #251 39\nget left #251 44\ncall #251"
  " 38\npush #251 49\ntupl 2 #251 49\ncall max #251 27\npush #251 20\nadd #251 20\npush #251 16\nres"
  " node #251 4\nfld height #251 9\npush _balance #253 14\nres node #253 23\ncall #253 22\nset balance"
  " #253 4\ngt 1 #254 17\nif 21 #254 4\nres balance #259 14\nlt -1 #259 25\nifn 35 #259 11\npush v #260"
  " 9\nres node #260 14\nget right #260 19\ngtsh value #260 25\nlte #260 11\nifn 7 #260 6\npush"
  " _rotate_right #261 21\nres node #261 35\nget right #261 40\ncall #261 34\npush #261 19\nres node"
  " #261 8\nfld right #261 13\npush _rotate_left #263 13\nres node #263 26\ncall #263 25\nret #263"
  " 6\njmp 17 #259 11\npush v #255 9\nres node #255 14\nget left #255 19\ngtsh value #255 24\ngte #255"
  " 11\nifn 7 #255 6\npush _rotate_left #256 21\nres node #256 34\nget left #256 39\ncall #256 33\npush"
  " #256 18\nres node #256 8\nfld left #256 13\npush _rotate_right #258 13\nres node #258 27\ncall #258"
  " 26\nret #258 6\nres node #265 4\nret #241 2\n@remove\nlet v #270 16\npush _remove_helper #271"
  " 4\npush root #271 22\npush v #271 19\ntupl 2 #271 20\ncall #271 18\nret #270"
  " 2\n@_remove_helper\npush #274 23\ntlen #274 24\neq -1 #274 24\nifn 5 #274 24\nres #274 24\nlet v"
  " #274 24\nrnil #274 27\nlet node #274 27\njmp 6 #274 24\npeek #274 24\ntget 0 #274 23\nlet v #274"
  " 24\nres #274 23\ntget 1 #274 23\nlet node #274 27\nres node #275 8\nnot #275 7\nif 30 #275 4\npush"
  " v #277 14\nres node #277 18\ngtsh value #277 23\nlt #277 16\nif 15 #277 11\npush v #279 14\nres"
  " node #279 18\ngtsh value #279 23\ngt #279 16\nifn 23 #279 11\npush _remove_helper #280 19\nres node"
  " #280 37\ngtsh right #280 42\npush v #280 34\ntupl 2 #280 35\ncall #280 33\npush #280 17\nres node"
  " #280 6\nfld right #280 11\njmp 46 #279 11\npush _remove_helper #278 18\nres node #278 36\ngtsh left"
  " #278 41\npush v #278 33\ntupl 2 #278 34\ncall #278 32\npush #278 16\nres node #278 6\nfld left #278"
  " 11\njmp 36 #277 11\nres node #276 13\nret #276 6\njmp 33 #275 4\nres node #282 10\nget left #282"
  " 15\nnot #282 9\nif 8 #282 6\nres node #284 17\nget right #284 22\nnot #284 16\nifn 7 #284 13\nres"
  " node #285 15\nget left #285 20\nret #285 8\njmp 3 #284 13\nres node #283 15\nget right #283 20\nret"
  " #283 8\npush _min_value_node #287 13\nres node #287 29\nget right #287 34\ncall #287 28\nset temp"
  " #287 6\ngtsh value #288 24\nres node #288 6\nfld value #288 11\npush _remove_helper #289 19\nres"
  " node #289 46\ngtsh right #289 51\nres temp #289 34\ngtsh value #289 39\ntupl 2 #289 44\ncall #289"
  " 33\npush #289 17\nres node #289 6\nfld right #289 11\npush 1 #292 18\npush math #292 22\npush"
  " _height #292 51\nres node #292 59\nget right #292 64\ncall #292 58\npush #292 49\npush _height #292"
  " 31\nres node #292 39\nget left #292 44\ncall #292 38\npush #292 49\ntupl 2 #292 49\ncall max #292"
  " 27\npush #292 20\nadd #292 20\npush #292 16\nres node #292 4\nfld height #292 9\npush _balance #294"
  " 14\nres node #294 23\ncall #294 22\nset balance #294 4\ngt 1 #296 17\nif 26 #296 4\nres balance"
  " #303 14\nlt -1 #303 25\nifn 45 #303 11\npush _balance #304 9\nres node #304 18\nget right #304"
  " 23\ncall #304 17\nlte 0 #304 33\nifn 5 #304 6\npush _rotate_left #305 15\nres node #305 28\ncall"
  " #305 27\nret #305 8\njmp 11 #304 6\npush _rotate_right #307 21\nres node #307 35\nget right #307"
  " 40\ncall #307 34\npush #307 19\nres node #307 8\nfld right #307 13\npush _rotate_left #308 15\nres"
  " node #308 28\ncall #308 27\nret #308 8\njmp 22 #303 11\npush _balance #297 9\nres node #297 18\nget"
  " left #297 23\ncall #297 17\ngte 0 #297 32\nifn 5 #297 6\npush _rotate_right #298 15\nres node #298"
  " 29\ncall #298 28\nret #298 8\njmp 11 #297 6\npush _rotate_left #300 20\nres node #300 33\nget left"
  " #300 38\ncall #300 32\npush #300 18\nres node #300 8\nfld left #300 13\npush _rotate_right #301"
  " 15\nres node #301 29\ncall #301 28\nret #301 8\nres node #311 4\nret #274 2\n@__in__\nlet v #315"
  " 16\npush _in #316 4\npush root #316 11\npush v #316 8\ntupl 2 #316 9\ncall #316 7\nret #315"
  " 2\n@_in\npush #319 12\ntlen #319 13\neq -1 #319 13\nifn 5 #319 13\nres #319 13\nlet v #319 13\nrnil"
  " #319 16\nlet node #319 16\njmp 6 #319 13\npeek #319 13\ntget 0 #319 12\nlet v #319 13\nres #319"
  " 12\ntget 1 #319 12\nlet node #319 16\nres node #320 8\nnot #320 7\nifn 2 #320 4\nrfls #321 13\nret"
  " #321 6\npush builtin #323 8\nres node #323 23\ngtsh value #323 28\npush v #323 20\ntupl 2 #323"
  " 21\ncall cmp #323 16\nset c #323 4\neq 0 #324 12\nifn 2 #324 4\nrtru #325 13\nret #325 6\nres c"
  " #327 7\nlt 0 #327 11\nifn 6 #327 13\npush _in #327 17\nres node #327 24\ngtsh left #327 29\npush v"
  " #327 21\ntupl 2 #327 22\ncall #327 20\nifn 2 #327 4\nrtru #328 13\nret #328 6\nres c #330 7\ngt 0"
  " #330 11\nifn 6 #330 13\npush _in #330 17\nres node #330 24\ngtsh right #330 29\npush v #330"
  " 21\ntupl 2 #330 22\ncall #330 20\nifn 2 #330 4\nrtru #331 13\nret #331 6\nrfls #333 11\nret #333"
  " 4\n@_min_value_node\nlet node #336 25\nnot #337 7\nif 3 #337 13\nres node #337 17\nget left #337"
  " 22\nnot #337 16\nifn 2 #337 4\nres node #338 13\nret #338 6\npush _min_value_node #340 4\nres node"
  " #340 20\nget left #340 25\ncall #340 19\nret #336 2\n@_height\nlet node #343 17\nnot #344 7\nifn 2"
  " #344 4\nres 0 #345 13\nret #345 6\nres node #347 11\nget height #347 16\nret #347 4\n@_balance\nlet"
  " node #350 18\nnot #351 7\nifn 2 #351 4\nres 0 #352 13\nret #352 6\npush _height #354 11\nres node"
  " #354 19\nget left #354 24\ncall #354 18\npush #354 30\npush _height #354 32\nres node #354 40\nget"
  " right #354 45\ncall #354 39\npush #354 30\nsub #354 30\nret #354 4\n@_rotate_left\nlet node #357"
  " 22\nget right #358 13\nset y #358 4\nget left #359 11\nset t2 #359 4\npush node #360 13\nres y #360"
  " 4\nfld left #360 6\npush t2 #361 17\nres node #361 4\nfld right #361 9\npush 1 #362 18\npush math"
  " #362 22\npush _height #362 51\nres node #362 59\nget right #362 64\ncall #362 58\npush #362"
  " 49\npush _height #362 31\nres node #362 39\nget left #362 44\ncall #362 38\npush #362 49\ntupl 2"
  " #362 49\ncall max #362 27\npush #362 20\nadd #362 20\npush #362 16\nres node #362 4\nfld height"
  " #362 9\npush 1 #363 15\npush math #363 19\npush _height #363 45\nres y #363 53\nget right #363"
  " 55\ncall #363 52\npush #363 43\npush _height #363 28\nres y #363 36\nget left #363 38\ncall #363"
  " 35\npush #363 43\ntupl 2 #363 43\ncall max #363 24\npush #363 17\nadd #363 17\npush #363 13\nres y"
  " #363 4\nfld height #363 6\nres y #364 11\nret #364 4\n@_rotate_right\nlet node #367 23\nget left"
  " #368 13\nset y #368 4\nget right #369 11\nset t3 #369 4\npush node #370 14\nres y #370 4\nfld right"
  " #370 6\npush t3 #371 16\nres node #371 4\nfld left #371 9\npush 1 #372 18\npush math #372 22\npush"
  " _height #372 51\nres node #372 59\nget right #372 64\ncall #372 58\npush #372 49\npush _height #372"
  " 31\nres node #372 39\nget left #372 44\ncall #372 38\npush #372 49\ntupl 2 #372 49\ncall max #372"
  " 27\npush #372 20\nadd #372 20\npush #372 16\nres node #372 4\nfld height #372 9\npush 1 #373"
  " 15\npush math #373 19\npush _height #373 45\nres y #373 53\nget right #373 55\ncall #373 52\npush"
  " #373 43\npush _height #373 28\nres y #373 36\nget left #373 38\ncall #373 35\npush #373 43\ntupl 2"
  " #373 43\ncall max #373 24\npush #373 17\nadd #373 17\npush #373 13\nres y #373 4\nfld height #373"
  " 6\nres y #374 11\nret #374 4\n@_inorder\npush #377 17\ntlen #377 18\neq -1 #377 18\nifn 5 #377"
  " 18\nres #377 18\nlet node #377 18\nrnil #377 24\nlet arr #377 24\njmp 6 #377 18\npeek #377 18\ntget"
  " 0 #377 17\nlet node #377 18\nres #377 17\ntget 1 #377 17\nlet arr #377 24\nres node #378 8\nnot"
  " #378 7\nifn 1 #378 4\nret #379 6\npush _inorder #381 4\npush arr #381 24\nres node #381 13\ngtsh"
  " left #381 18\ntupl 2 #381 22\ncall #381 12\npush arr #382 4\nres node #382 15\nget value #382"
  " 20\ncall append #382 8\npush _inorder #383 4\npush arr #383 25\nres node #383 13\ngtsh right #383"
  " 18\ntupl 2 #383 23\ncall #383 12\nret #377 2\n@sorted\nanew #389 10\nset arr #389 4\npush _inorder"
  " #390 4\npush arr #390 19\npush root #390 13\ntupl 2 #390 17\ncall #390 12\nres arr #391 11\nret"
  " #391 4\n@iter\npush IndexIterator #397 4\npush sorted #397 18\nclln #397 24\ncall #397 17\nret #396"
  " 2\nendclass\nbody\n\'import builtin\\r\\n\'\n\'import math\\r\\n\'\n\'\\r\\n\'\n\'class Map"
  " {\\r\\n\'\n\'  field table, keys\\r\\n\'\n\'  new(field sz=31) {\\r\\n\'\n\'    table ="
  " []\\r\\n\'\n\'    table[sz] = None\\r\\n\'\n\'    keys = []\\r\\n\'\n\'  }\\r\\n\'\n\'  method"
  " _hash(k) {\\r\\n\'\n\'    hval = builtin.hash(k)\\r\\n\'\n\'    pos = hval % sz\\r\\n\'\n\'    if"
  " pos < 0 pos = -pos\\r\\n\'\n\'    return pos\\r\\n\'\n\'  }\\r\\n\'\n\'  ; Associates the key k"
  " with the value v in the map.\\r\\n\'\n\'  method []=(k, v) {\\r\\n\'\n\'    pos ="
  " _hash(k)\\r\\n\'\n\'    entries = table[pos]\\r\\n\'\n\'    if ~entries {\\r\\n\'\n\'     "
  " table[pos] = [(k,v)]\\r\\n\'\n\'      keys.append(k)\\r\\n\'\n\'      return None\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    for i=0, i<entries.len(), i=i+1 {\\r\\n\'\n\'      if k == entries[i][0]"
  " {\\r\\n\'\n\'        old_v = entries[i][1]\\r\\n\'\n\'        entries[i] = (k,v)\\r\\n\'\n\'       "
  " return old_v\\r\\n\'\n\'      }\\r\\n\'\n\'    }\\r\\n\'\n\'    entries.append((k,v))\\r\\n\'\n\'  "
  "  keys.append(k)\\r\\n\'\n\'    return None\\r\\n\'\n\'  }\\r\\n\'\n\'  ; Returns the associated"
  " value with key k.\\r\\n\'\n\'  method [](k) {\\r\\n\'\n\'    pos = _hash(k)\\r\\n\'\n\'    entries"
  " = table[pos]\\r\\n\'\n\'    if ~entries {\\r\\n\'\n\'      return None\\r\\n\'\n\'    }\\r\\n\'\n\'"
  "    for i=0, i<entries.len(), i=i+1 {\\r\\n\'\n\'      if k == entries[i][0] {\\r\\n\'\n\'       "
  " return entries[i][1]\\r\\n\'\n\'      }\\r\\n\'\n\'    }\\r\\n\'\n\'    return None\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  ; Returns the value associated with k, if there is one, otherwise None.\\r\\n\'\n\' "
  " method __in__(k) {\\r\\n\'\n\'    self[k]\\r\\n\'\n\'  }\\r\\n\'\n\'  ; Removes the entry in the"
  " set with the given key k.\\r\\n\'\n\'  method remove(k) {\\r\\n\'\n\'    pos = _hash(k)\\r\\n\'\n\'"
  "    entries = table[pos]\\r\\n\'\n\'    if ~entries {\\r\\n\'\n\'      return None\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    for i=0, i<entries.len(), i=i+1 {\\r\\n\'\n\'      if k == entries[i][0]"
  " {\\r\\n\'\n\'        old_v = entries[i][1]\\r\\n\'\n\'        entries.remove(i)\\r\\n\'\n\'       "
  " keys.remove_value(k)\\r\\n\'\n\'        return old_v\\r\\n\'\n\'      }\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    return None\\r\\n\'\n\'  }\\r\\n\'\n\'  method get_or_default(k, d) {\\r\\n\'\n\' "
  "   v = self[k]\\r\\n\'\n\'    if ~v {\\r\\n\'\n\'      return d\\r\\n\'\n\'    }\\r\\n\'\n\'   "
  " return v\\r\\n\'\n\'  }\\r\\n\'\n\'  method get_or_else(k, fn) {\\r\\n\'\n\'    v ="
  " self[k]\\r\\n\'\n\'    if ~v {\\r\\n\'\n\'      return fn(k)\\r\\n\'\n\'    }\\r\\n\'\n\'    return"
  " v\\r\\n\'\n\'  }\\r\\n\'\n\'  method put_if_absent(k, v) {\\r\\n\'\n\'    if ~(k in self)"
  " {\\r\\n\'\n\'      self[k] = v\\r\\n\'\n\'    }\\r\\n\'\n\'  }\\r\\n\'\n\'  method compute(k,"
  " remapping_fn) {\\r\\n\'\n\'    old_value = self[k]\\r\\n\'\n\'    new_value = remapping_fn(k,"
  " old_value)\\r\\n\'\n\'    if new_value {\\r\\n\'\n\'      self[k] = new_value\\r\\n\'\n\'    } else"
  " if old_value {\\r\\n\'\n\'      remove(k)\\r\\n\'\n\'    }\\r\\n\'\n\'    return"
  " new_value\\r\\n\'\n\'  }\\r\\n\'\n\'  method compute_if_absent(k, mapping_fn) {\\r\\n\'\n\'    if"
  " ~(k in self) {\\r\\n\'\n\'      new_value = mapping_fn(k)\\r\\n\'\n\'      if new_value"
  " {\\r\\n\'\n\'        self[k] = new_value\\r\\n\'\n\'      }\\r\\n\'\n\'      return"
  " new_value\\r\\n\'\n\'    }\\r\\n\'\n\'    return None\\r\\n\'\n\'  }\\r\\n\'\n\'  method"
  " compute_if_present(k, remapping_fn) {\\r\\n\'\n\'    old_value = self[k]\\r\\n\'\n\'    if"
  " old_value {\\r\\n\'\n\'      new_value = remapping_fn(k, old_value)\\r\\n\'\n\'      if new_value"
  " {\\r\\n\'\n\'        self[k] = new_value\\r\\n\'\n\'      } else {\\r\\n\'\n\'       "
  " remove(k)\\r\\n\'\n\'      }\\r\\n\'\n\'      return new_value\\r\\n\'\n\'    }\\r\\n\'\n\'   "
  " return None\\r\\n\'\n\'  }\\r\\n\'\n\'  method iter() {\\r\\n\'\n\'    return"
  " KVIterator(keys.iter(), self)\\r\\n\'\n\'  }\\r\\n\'\n\'  method each(f) {\\r\\n\'\n\'    for (k,"
  " v) in self {\\r\\n\'\n\'      f(k, v)\\r\\n\'\n\'    }\\r\\n\'\n\'  }\\r\\n\'\n\'  method to_s()"
  " {\\r\\n\'\n\'    kvs = []\\r\\n\'\n\'    each((k, v) {\\r\\n\'\n\'      key = if k is String then"
  " \\\'\\\\\\\'\\\'.extend(k).extend(\\\'\\\\\\\'\\\') else str(k)\\r\\n\'\n\'      value = if v is"
  " String then \\\'\\\\\\\'\\\'.extend(v).extend(\\\'\\\\\\\'\\\') else str(v)\\r\\n\'\n\'     "
  " kvs.append(cat(key, \\\': \\\', value))\\r\\n\'\n\'    })\\r\\n\'\n\'    return cat(\\\'{\\\',"
  " \\\', \\\'.join(kvs), \\\'}\\\')\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'\\r\\n\'\n\'class Cache {\\r\\n\'\n\'  field map\\r\\n\'\n\' "
  " new(sz=31) {\\r\\n\'\n\'    map = Map(sz)\\r\\n\'\n\'  }\\r\\n\'\n\'  method get(k, factory,"
  " default=None) {\\r\\n\'\n\'    v = map[k]\\r\\n\'\n\'    if v {\\r\\n\'\n\'      return"
  " v\\r\\n\'\n\'    }\\r\\n\'\n\'    try {\\r\\n\'\n\'      v = factory(k)\\r\\n\'\n\'    } catch e"
  " {\\r\\n\'\n\'      v = default\\r\\n\'\n\'    }\\r\\n\'\n\'    map[k] = v\\r\\n\'\n\'    return"
  " v\\r\\n\'\n\'  }\\r\\n\'\n\'  method clear(k) {\\r\\n\'\n\'    map[k] = None\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class LoadingCache {\\r\\n\'\n\'  new(field cache=Cache(255),"
  " field factory) {}\\r\\n\'\n\'  method get(k) {\\r\\n\'\n\'    cache.get(k, factory) \\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  method clear() {\\r\\n\'\n\'    cache.clear()\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; A collection that contains no duplicate"
  " elements.\\r\\n\'\n\'class Set {\\r\\n\'\n\'  field map\\r\\n\'\n\'  new(sz=255) {\\r\\n\'\n\'   "
  " map = Map(sz)\\r\\n\'\n\'  }\\r\\n\'\n\'  ; Inserts a given element k into the Set.\\r\\n\'\n\' "
  " method insert(k) {\\r\\n\'\n\'    map[k] = k\\r\\n\'\n\'  }\\r\\n\'\n\'  ; Removes a given element"
  " k from the Set.\\r\\n\'\n\'  method remove(k) {\\r\\n\'\n\'    map.remove(k)\\r\\n\'\n\' "
  " }\\r\\n\'\n\'  ; Return k if k is in the Set, otherwise None.\\r\\n\'\n\'  method __in__(k)"
  " {\\r\\n\'\n\'    k in map\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class _TreeNode"
  " {\\r\\n\'\n\'  field left, right, height\\r\\n\'\n\'  new(field value) {\\r\\n\'\n\'    left ="
  " None\\r\\n\'\n\'    right = None\\r\\n\'\n\'    height = 1\\r\\n\'\n\'  }\\r\\n\'\n\'  \\r\\n\'\n\'"
  "  method to_s() {\\r\\n\'\n\'    \\\'_TreeNode(\\\' + str(value) + \\\')\\\'\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'; Stores a set of comparable values in a self-balancing"
  " binary tree.\\r\\n\'\n\'; \\r\\n\'\n\'; Properities\\r\\n\'\n\';   Insertion: O(logN)\\r\\n\'\n\'; "
  "  Removal:   O(logN)\\r\\n\'\n\';   Lookup:    O(logN)\\r\\n\'\n\';   Traversal: O(N)\\r\\n\'\n\';  "
  " Sorting:   O(N) - to construct list\\r\\n\'\n\';\\r\\n\'\n\'; This is implemented as a classic AVL"
  " Tree which incrementally balances during\\r\\n\'\n\'; insertion.\\r\\n\'\n\'class TreeSet"
  " {\\r\\n\'\n\'  field root\\r\\n\'\n\'  new() {\\r\\n\'\n\'    root = None\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  ; Inserts [v] into the tree.\\r\\n\'\n\'  ; O(logN)\\r\\n\'\n\'  method"
  " insert(v) {\\r\\n\'\n\'    root = _insert_helper(v, root)\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  ;"
  " Inserts all members of [l] into the tree.\\r\\n\'\n\'  ; O(N*logN)\\r\\n\'\n\'  method"
  " insert_all(l) {\\r\\n\'\n\'    for i=0, i < l.len(), i=i+1 {\\r\\n\'\n\'     "
  " insert(l[i])\\r\\n\'\n\'    }\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method _insert_helper(v,"
  " node) {\\r\\n\'\n\'    if ~node {\\r\\n\'\n\'      return _TreeNode(v)\\r\\n\'\n\'    }\\r\\n\'\n\'"
  "    if v < node.value {\\r\\n\'\n\'      node.left = _insert_helper(v, node.left)\\r\\n\'\n\'    }"
  " else {\\r\\n\'\n\'      node.right = _insert_helper(v, node.right)\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'\\r\\n\'\n\'    node.height = 1 + math.max(_height(node.left),"
  " _height(node.right))\\r\\n\'\n\'\\r\\n\'\n\'    balance = _balance(node)\\r\\n\'\n\'    if balance"
  " > 1 {\\r\\n\'\n\'      if v >= node.left.value {\\r\\n\'\n\'        node.left = "
  " _rotate_left(node.left)\\r\\n\'\n\'      }\\r\\n\'\n\'      return _rotate_right(node)\\r\\n\'\n\' "
  "   } else if balance < -1 {\\r\\n\'\n\'      if v <= node.right.value {\\r\\n\'\n\'       "
  " node.right = _rotate_right(node.right)\\r\\n\'\n\'      }\\r\\n\'\n\'      return"
  " _rotate_left(node)\\r\\n\'\n\'    }\\r\\n\'\n\'    node\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  ;"
  " Removes [v] from the tree.\\r\\n\'\n\'  ; O(logN)\\r\\n\'\n\'  method remove(v) {\\r\\n\'\n\'   "
  " _remove_helper(v, root)\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method _remove_helper(v, node)"
  " {\\r\\n\'\n\'    if ~node {\\r\\n\'\n\'      return node\\r\\n\'\n\'    } else if v < node.value"
  " {\\r\\n\'\n\'      node.left = _remove_helper(v, node.left)\\r\\n\'\n\'    } else if v > node.value"
  " {\\r\\n\'\n\'      node.right = _remove_helper(v, node.right)\\r\\n\'\n\'    } else {\\r\\n\'\n\'  "
  "    if ~node.left {\\r\\n\'\n\'        return node.right\\r\\n\'\n\'      } else if ~node.right"
  " {\\r\\n\'\n\'        return node.left\\r\\n\'\n\'      }\\r\\n\'\n\'      temp ="
  " _min_value_node(node.right)\\r\\n\'\n\'      node.value = temp.value\\r\\n\'\n\'      node.right ="
  " _remove_helper(temp.value, node.right)\\r\\n\'\n\'    }\\r\\n\'\n\'    \\r\\n\'\n\'    node.height"
  " = 1 + math.max(_height(node.left), _height(node.right))\\r\\n\'\n\'\\r\\n\'\n\'    balance ="
  " _balance(node)\\r\\n\'\n\'\\r\\n\'\n\'    if balance > 1 {\\r\\n\'\n\'      if _balance(node.left)"
  " >= 0 {\\r\\n\'\n\'        return _rotate_right(node)\\r\\n\'\n\'      } else {\\r\\n\'\n\'       "
  " node.left = _rotate_left(node.left)\\r\\n\'\n\'        return _rotate_right(node)\\r\\n\'\n\'     "
  " }\\r\\n\'\n\'    } else if balance < -1 {\\r\\n\'\n\'      if _balance(node.right) <= 0"
  " {\\r\\n\'\n\'        return _rotate_left(node)\\r\\n\'\n\'      } else {\\r\\n\'\n\'       "
  " node.right = _rotate_right(node.right)\\r\\n\'\n\'        return _rotate_left(node)\\r\\n\'\n\'    "
  "  }\\r\\n\'\n\'    }\\r\\n\'\n\'    node\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  ;"
  " O(logN)\\r\\n\'\n\'  method __in__(v) {\\r\\n\'\n\'    _in(v, root)\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  method _in(v, node) {\\r\\n\'\n\'    if ~node {\\r\\n\'\n\'      return"
  " False\\r\\n\'\n\'    }\\r\\n\'\n\'    c = builtin.cmp(v, node.value)\\r\\n\'\n\'    if c == 0"
  " {\\r\\n\'\n\'      return True\\r\\n\'\n\'    }\\r\\n\'\n\'    if c < 0 and _in(v, node.left)"
  " {\\r\\n\'\n\'      return True\\r\\n\'\n\'    }\\r\\n\'\n\'    if c > 0 and _in(v, node.right)"
  " {\\r\\n\'\n\'      return True\\r\\n\'\n\'    }\\r\\n\'\n\'    return False\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  method _min_value_node(node) {\\r\\n\'\n\'    if ~node or ~node.left"
  " {\\r\\n\'\n\'      return node\\r\\n\'\n\'    }\\r\\n\'\n\'   "
  " _min_value_node(node.left)\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method _height(node)"
  " {\\r\\n\'\n\'    if ~node {\\r\\n\'\n\'      return 0\\r\\n\'\n\'    }\\r\\n\'\n\'    return"
  " node.height\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method _balance(node) {\\r\\n\'\n\'    if ~node"
  " {\\r\\n\'\n\'      return 0\\r\\n\'\n\'    }\\r\\n\'\n\'    return _height(node.left) -"
  " _height(node.right)\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method _rotate_left(node) {\\r\\n\'\n\'"
  "    y = node.right\\r\\n\'\n\'    t2 = y.left\\r\\n\'\n\'    y.left = node\\r\\n\'\n\'    node.right"
  " = t2\\r\\n\'\n\'    node.height = 1 + math.max(_height(node.left), _height(node.right))\\r\\n\'\n\'"
  "    y.height = 1 + math.max(_height(y.left), _height(y.right))\\r\\n\'\n\'    return y\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  method _rotate_right(node) {\\r\\n\'\n\'    y = node.left\\r\\n\'\n\'   "
  " t3 = y.right\\r\\n\'\n\'    y.right = node\\r\\n\'\n\'    node.left = t3\\r\\n\'\n\'    node.height"
  " = 1 + math.max(_height(node.left), _height(node.right))\\r\\n\'\n\'    y.height = 1 +"
  " math.max(_height(y.left), _height(y.right))\\r\\n\'\n\'    return y\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  method _inorder(node, arr) {\\r\\n\'\n\'    if ~node {\\r\\n\'\n\'     "
  " return\\r\\n\'\n\'    }\\r\\n\'\n\'    _inorder(node.left, arr)\\r\\n\'\n\'   "
  " arr.append(node.value)\\r\\n\'\n\'    _inorder(node.right, arr)\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  ; Returns a sorted-order Array of the elements.\\r\\n\'\n\'  ;"
  " O(N)\\r\\n\'\n\'  method sorted() {\\r\\n\'\n\'    arr = []\\r\\n\'\n\'    _inorder(root,"
  " arr)\\r\\n\'\n\'    return arr\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  ; Returns an iterator over"
  " the tree elements in sorted order.\\r\\n\'\n\'  ; O(N)\\r\\n\'\n\'  method iter() {\\r\\n\'\n\'   "
  " IndexIterator(sorted())\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n"};

const char *LIB_test[] = {
  "module test\nsource \'lib/test.zn\'\nlmdl error #0 7\nmset error #0 7\nlmdl io #1 7\nmset io #1"
  " 7\npush ExpectError #19 6\nres error #19 20\nget Error #19 26\ncall $__set_super #19 26\npush color"
  " #64 12\nres \'32;1\' #64 19\ncall #64 17\npush #64 25\nres \'PASS\' #64 34\ncall extend #64"
  " 26\npush #64 40\npush color #64 48\nres 0 #64 54\ncall #64 53\ncall extend #64 41\npush #64 10\nres"
  " self #64 0\nfld PASS #64 5\npush color #65 12\nres \'31;1\' #65 19\ncall #65 17\npush #65 25\nres"
  " \'FAIL\' #65 34\ncall extend #65 26\npush #65 40\npush color #65 48\nres 0 #65 54\ncall #65"
  " 53\ncall extend #65 41\npush #65 10\nres self #65 0\nfld FAIL #65 5\nexit 0\nclass"
  " TestClass\n@annotate\nlet cls #4 18\nret #4 2\nendclass\nclass Test\n@annotate\nlet cls #8 18\nret"
  " #8 2\nendclass\nclass SetUp\n@annotate\nlet cls #12 18\nret #12 2\nendclass\nclass"
  " TearDown\n@annotate\nlet cls #16 18\nret #16 2\nendclass\nclass ExpectError\n@new\nlet str #20"
  " 6\npush super #21 4\nres error #21 10\nget Error #21 16\ncall #21 9\npush #21 22\nres str #21"
  " 23\ncall #21 22\nres self #20 2\nret #20 2\nendclass\nclass Tester\n@test\nlet module #68 14\nanew"
  " #69 12\nset stats #69 4\nnblk #70 4\npush module #70 20\nclln classes #70 27\npush #70 17\ncall"
  " iter #70 17\npush #70 17\ndup #70 17\ncall has_next #70 17\nifn 108 #70 17\ndup #70 4\ncall next"
  " #70 17\npush #70 17\ndup #70 17\naidx 0 #70 17\nset _ #70 9\naidx 1 #70 17\nset cls #70 12\npush"
  " _extract_test_class #71 25\nres cls #71 45\ncall #71 44\nset test_class_annot #71 6\nnot #72 9\nifn"
  " 1 #72 6\njmp 92 #73 8\npush _extract_methods #75 15\npush SetUp #75 37\npush cls #75 32\ntupl 2 #75"
  " 35\ncall #75 31\nset setups #75 6\npush _extract_methods #76 19\npush TearDown #76 41\npush cls #76"
  " 36\ntupl 2 #76 39\ncall #76 35\nset teardowns #76 6\nnblk #77 6\npush cls #77 23\nclln all_methods"
  " #77 27\npush #77 20\ncall iter #77 20\npush #77 20\ndup #77 20\ncall has_next #77 20\nifn 69 #77"
  " 20\ndup #77 6\ncall next #77 20\npush #77 20\ndup #77 20\naidx 0 #77 20\nset _ #77 11\naidx 1 #77"
  " 20\nset meth #77 14\npush _extract_test #78 21\nres meth #78 35\ncall #78 34\nset test_annot #78"
  " 8\nnot #79 11\nifn 1 #79 8\njmp 53 #80 10\nrtru #82 15\nset pass #82 8\nrnil #83 14\nset err #83"
  " 8\nnblk #84 8\nctch 34 #89 10\npush cls #85 14\nclln #85 17\nset c #85 10\npush setups #86 10\njmp"
  " 8 #86 22\n@$anon_86_22\nlet s #86 22\npush c #86 27\npush s #86 34\nclln name #86 36\ncall $get #86"
  " 29\npush #86 43\nclln #86 43\nret #86 22\nres $anon_86_22 #86 22\ncall each #86 17\npush c #87"
  " 10\npush meth #87 17\nclln name #87 22\ncall $get #87 12\npush #87 29\nclln #87 29\npush teardowns"
  " #88 10\njmp 8 #88 25\n@$anon_88_25\nlet t #88 25\npush c #88 30\npush t #88 37\nclln name #88"
  " 39\ncall $get #88 32\npush #88 46\nclln #88 46\nret #88 25\nres $anon_88_25 #88 25\ncall each #88"
  " 20\njmp 5 #89 10\nset e #89 16\nrfls #90 17\nset pass #90 10\nres e #91 16\nset err #91 10\nbblk"
  " #84 8\npush stats #93 8\npush err #93 38\npush pass #93 32\npush meth #93 26\npush cls #93 21\ntupl"
  " 4 #93 24\ncall append #93 14\njmp -72 #77 20\nres #77 20\nbblk #77 6\njmp -111 #70 17\nres #70"
  " 17\nbblk #70 4\npush stats #96 15\njmp 20 #96 27\n@$anon_96_27\npush #96 27\ntlen #96 28\neq -1 #96"
  " 28\nifn 9 #96 28\nres #96 28\nlet _ #96 28\nrnil #96 31\nlet _ #96 31\nrnil #96 34\nlet pass #96"
  " 34\nrnil #96 40\nlet _ #96 40\njmp 4 #96 28\npeek #96 34\ntget 2 #96 27\nlet pass #96 34\nres #96"
  " 27\nres pass #96 47\nnot #96 46\nret #96 27\nres $anon_96_27 #96 27\ncall where #96 21\nset"
  " failures #96 4\npush stats #97 13\njmp 19 #97 23\n@$anon_97_23\npush #97 23\ntlen #97 24\neq -1 #97"
  " 24\nifn 9 #97 24\nres #97 24\nlet _ #97 24\nrnil #97 27\nlet _ #97 27\nrnil #97 30\nlet pass #97"
  " 30\nrnil #97 36\nlet _ #97 36\njmp 4 #97 24\npeek #97 30\ntget 2 #97 23\nlet pass #97 30\nres #97"
  " 23\nres pass #97 42\nret #97 23\nres $anon_97_23 #97 23\ncall map #97 19\npush #97 47\njmp 2 #97"
  " 54\n@$anon_97_54\nlet v #97 54\nret #97 54\nres $anon_97_54 #97 54\ncall where #97 48\npush #97"
  " 61\nclln len #97 62\nset passes #97 4\npush #98 13\npush stats #98 23\nclln len #98 29\npush #98"
  " 20\neq #98 20\nifn 2 #98 10\nres \'32;1\' #98 41\njmp 1 #98 10\nres \'31;1\' #98 53\nset col #98"
  " 4\nnblk #99 4\npush failures #99 36\ncall iter #99 33\npush #99 33\ndup #99 33\ncall has_next #99"
  " 33\nifn 45 #99 33\ndup #99 4\ncall next #99 33\npush #99 33\ndup #99 33\naidx 0 #99 33\nset _ #99"
  " 9\naidx 1 #99 33\npush #99 33\ndup #99 33\naidx 0 #99 33\nset cls #99 13\ndup #99 33\naidx 1 #99"
  " 33\nset meth #99 18\ndup #99 33\naidx 2 #99 33\nset _ #99 24\naidx 3 #99 33\nset err #99 27\npush"
  " io #100 6\npush \'Test \' #100 18\npush cls #100 27\nclln name #100 31\npush #100 25\nadd #100"
  " 25\npush #100 38\npush \'.\' #100 41\nadd #100 38\npush #100 44\npush meth #100 46\nclln name #100"
  " 51\npush #100 44\nadd #100 44\npush #100 58\npush \'=\' #100 61\nadd #100 58\nadd FAIL #100"
  " 66\npush #100 71\npush \'\\n\' #100 74\nadd #100 71\ncall println #100 9\npush io #101 6\nres err"
  " #101 17\ncall println #101 9\njmp -48 #99 33\nres #99 33\nbblk #99 4\npush io #103 4\npush \'Tests"
  " [\' #104 7\npush color #104 18\nres col #104 24\ncall #104 23\npush #104 16\nadd #104 16\npush #104"
  " 29\npush str #104 31\nres passes #104 35\ncall #104 34\npush #104 29\nadd #104 29\npush #104"
  " 43\npush \'/\' #104 46\nadd #104 43\npush #104 49\npush str #104 51\npush stats #104 55\nclln len"
  " #104 61\ncall #104 54\npush #104 49\nadd #104 49\npush #104 68\npush color #104 70\nres 0 #104"
  " 76\ncall #104 75\npush #104 68\nadd #104 68\npush #104 79\npush \'] passed.\' #104 82\nadd #104"
  " 79\ncall println #103 7\nret #68 2\n@_extract_test_class\nlet cls #107 29\nnblk #108 4\npush cls"
  " #108 22\nclln all_annotations #108 26\npush #108 19\ncall iter #108 19\npush #108 19\ndup #108"
  " 19\ncall has_next #108 19\nifn 15 #108 19\ndup #108 4\ncall next #108 19\npush #108 19\ndup #108"
  " 19\naidx 0 #108 19\nset _ #108 9\naidx 1 #108 19\nset annot #108 12\npush #109 9\npush TestClass"
  " #109 18\nis #109 15\nifn 2 #109 6\nres annot #110 15\nret #110 8\njmp -18 #108 19\nres #108"
  " 19\nbblk #108 4\nrnil #113 11\nret #113 4\n@_extract_test\nlet func #116 23\nnblk #117 4\nres func"
  " #117 22\ngtsh annotations #117 27\ncall iter #117 19\npush #117 19\ndup #117 19\ncall has_next #117"
  " 19\nifn 15 #117 19\ndup #117 4\ncall next #117 19\npush #117 19\ndup #117 19\naidx 0 #117 19\nset _"
  " #117 9\naidx 1 #117 19\nset annot #117 12\npush #118 9\npush Test #118 18\nis #118 15\nifn 2 #118"
  " 6\nres annot #119 15\nret #119 8\njmp -18 #117 19\nres #117 19\nbblk #117 4\nrnil #122 11\nret #122"
  " 4\n@_extract_methods\npush #125 25\ntlen #125 26\neq -1 #125 26\nifn 5 #125 26\nres #125 26\nlet"
  " test_cls #125 26\nrnil #125 36\nlet cls #125 36\njmp 6 #125 26\npeek #125 26\ntget 0 #125 25\nlet"
  " test_cls #125 26\nres #125 25\ntget 1 #125 25\nlet cls #125 36\nanew #126 14\nset methods #126"
  " 4\nnblk #127 4\npush test_cls #127 21\nclln all_methods #127 30\npush #127 18\ncall iter #127"
  " 18\npush #127 18\ndup #127 18\ncall has_next #127 18\nifn 35 #127 18\ndup #127 4\ncall next #127"
  " 18\npush #127 18\ndup #127 18\naidx 0 #127 18\nset _ #127 9\naidx 1 #127 18\nset meth #127 12\nnblk"
  " #128 6\nres meth #128 24\ngtsh annotations #128 29\ncall iter #128 21\npush #128 21\ndup #128"
  " 21\ncall has_next #128 21\nifn 16 #128 21\ndup #128 6\ncall next #128 21\npush #128 21\ndup #128"
  " 21\naidx 0 #128 21\nset _ #128 11\naidx 1 #128 21\nset annot #128 14\npush #129 11\npush cls #129"
  " 20\nis #129 17\nifn 3 #129 8\npush methods #130 10\nres meth #130 25\ncall append #130 18\njmp -19"
  " #128 21\nres #128 21\nbblk #128 6\njmp -38 #127 18\nres #127 18\nbblk #127 4\nres methods #134"
  " 11\nret #134 4\nendclass\n@expect\npush #25 15\ntlen #25 16\neq -1 #25 16\nifn 5 #25 16\nres #25"
  " 16\nlet actual #25 16\nrnil #25 24\nlet expected #25 24\njmp 6 #25 16\npeek #25 16\ntget 0 #25"
  " 15\nlet actual #25 16\nres #25 15\ntget 1 #25 15\nlet expected #25 24\nnblk #26 2\nctch 5 #30"
  " 4\nres actual #27 7\neq expected #27 17\nifn 1 #27 4\nret #28 6\njmp 1 #30 4\nset e #30 10\nbblk"
  " #26 2\npush ExpectError #31 8\npush \'Expected \\\'\' #31 21\npush str #31 36\nres expected #31"
  " 40\ncall #31 39\npush #31 34\nadd #31 34\npush #31 50\npush \'\\\' but was \\\'\' #31 53\nadd #31"
  " 50\npush #31 68\npush str #31 70\nres actual #31 74\ncall #31 73\npush #31 68\nadd #31 68\npush #31"
  " 82\npush \'\\\'.\' #31 85\nadd #31 82\ncall #31 19\nrais #31 2\nret #25 0\n@expect_not\npush #34"
  " 19\ntlen #34 20\neq -1 #34 20\nifn 5 #34 20\nres #34 20\nlet actual #34 20\nrnil #34 28\nlet"
  " not_expected #34 28\njmp 6 #34 20\npeek #34 20\ntget 0 #34 19\nlet actual #34 20\nres #34 19\ntget"
  " 1 #34 19\nlet not_expected #34 28\nnblk #35 2\nctch 6 #39 4\npush actual #36 7\npush expected #36"
  " 17\nneq #36 14\nifn 1 #36 4\nret #37 6\njmp 1 #39 4\nset e #39 10\nbblk #35 2\npush ExpectError #40"
  " 8\npush \'Expected not \\\'\' #40 21\npush str #40 40\nres expected #40 44\ncall #40 43\npush #40"
  " 38\nadd #40 38\npush #40 54\npush \'\\\' but was \\\'\' #40 57\nadd #40 54\npush #40 72\npush str"
  " #40 74\nres actual #40 78\ncall #40 77\npush #40 72\nadd #40 72\npush #40 86\npush \'\\\'.\' #40"
  " 89\nadd #40 86\ncall #40 19\nrais #40 2\nret #34 0\n@expect_raises\npush #43 22\ntlen #43 23\neq -1"
  " #43 23\nifn 5 #43 23\nres #43 23\nlet exp #43 23\nrnil #43 40\nlet error_class #43 28\njmp 11 #43"
  " 23\npeek #43 23\ntget 0 #43 22\nlet exp #43 23\npeek #43 22\ntgte 2 #43 28\nifn 3 #43 28\nres #43"
  " 28\ntget 1 #43 22\njmp 1 #43 28\nrnil #43 40\nlet error_class #43 28\nnblk #44 2\nctch 3 #46"
  " 4\npush exp #45 4\nclln #45 7\njmp 15 #46 4\nset e #46 10\nnot #47 7\nif 6 #47 10\nres error_class"
  " #47 14\nnot #47 13\nif 3 #47 26\npush e #47 30\npush error_class #47 35\nis #47 32\nifn 1 #47"
  " 4\nret #48 6\npush ExpectError #50 10\nres \'Raises wrong error\' #50 23\ncall #50 21\nrais #50"
  " 4\nbblk #44 2\npush ExpectError #52 8\nres \'Does not raise\' #52 21\ncall #52 19\nrais #52 2\nret"
  " #43 0\n@expect_is\npush #55 18\ntlen #55 19\neq -1 #55 19\nifn 5 #55 19\nres #55 19\nlet actual #55"
  " 19\nrnil #55 27\nlet expected_class #55 27\njmp 6 #55 19\npeek #55 19\ntget 0 #55 18\nlet actual"
  " #55 19\nres #55 18\ntget 1 #55 18\nlet expected_class #55 27\nnblk #56 2\nctch 6 #60 4\npush actual"
  " #57 7\npush expected_class #57 17\nis #57 14\nifn 1 #57 4\nret #58 6\njmp 1 #60 4\nset e #60"
  " 10\nbblk #56 2\npush ExpectError #61 8\npush \'Expected of type \\\'\' #61 21\npush str #61 44\nres"
  " expected_class #61 48\ncall #61 47\npush #61 42\nadd #61 42\npush #61 64\npush \'\\\' but was"
  " \\\'\' #61 67\nadd #61 64\npush #61 82\npush str #61 84\npush actual #61 88\nclln class #61"
  " 95\ncall #61 87\npush #61 82\nadd #61 82\npush #61 104\npush \'\\\'.\' #61 107\nadd #61 104\ncall"
  " #61 19\nrais #61 2\nret #55 0\nbody\n\'import error\\r\\n\'\n\'import"
  " io\\r\\n\'\n\'\\r\\n\'\n\'class TestClass {\\r\\n\'\n\'  method annotate(cls)"
  " {}\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class Test {\\r\\n\'\n\'  method annotate(cls)"
  " {}\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class SetUp {\\r\\n\'\n\'  method annotate(cls)"
  " {}\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class TearDown {\\r\\n\'\n\'  method annotate(cls)"
  " {}\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class ExpectError : error.Error {\\r\\n\'\n\'  new(str)"
  " {\\r\\n\'\n\'    super(error.Error)(str)\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function expect(actual, expected) {\\r\\n\'\n\'  try"
  " {\\r\\n\'\n\'    if actual == expected {\\r\\n\'\n\'      return\\r\\n\'\n\'    }\\r\\n\'\n\'  }"
  " catch e {}\\r\\n\'\n\'  raise ExpectError(\\\'Expected \\\\\\\'\\\' + str(expected) + \\\'\\\\\\\'"
  " but was \\\\\\\'\\\' + str(actual) +"
  " \\\'\\\\\\\'.\\\')\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function expect_not(actual, not_expected)"
  " {\\r\\n\'\n\'  try {\\r\\n\'\n\'    if actual != expected {\\r\\n\'\n\'      return\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'  } catch e {}\\r\\n\'\n\'  raise ExpectError(\\\'Expected not \\\\\\\'\\\' +"
  " str(expected) + \\\'\\\\\\\' but was \\\\\\\'\\\' + str(actual) +"
  " \\\'\\\\\\\'.\\\')\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function expect_raises(exp,"
  " error_class=None) {\\r\\n\'\n\'  try {\\r\\n\'\n\'    exp()\\r\\n\'\n\'  } catch e {\\r\\n\'\n\'   "
  " if ~e or ~error_class or (e is error_class) {\\r\\n\'\n\'      return\\r\\n\'\n\'    }\\r\\n\'\n\' "
  "   raise ExpectError(\\\'Raises wrong error\\\')\\r\\n\'\n\'  }\\r\\n\'\n\'  raise"
  " ExpectError(\\\'Does not raise\\\')\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function expect_is(actual,"
  " expected_class) {\\r\\n\'\n\'  try {\\r\\n\'\n\'    if actual is expected_class {\\r\\n\'\n\'     "
  " return\\r\\n\'\n\'    }\\r\\n\'\n\'  } catch e {}\\r\\n\'\n\'  raise ExpectError(\\\'Expected of"
  " type \\\\\\\'\\\' + str(expected_class) + \\\'\\\\\\\' but was \\\\\\\'\\\' + str(actual.class()) +"
  " \\\'\\\\\\\'.\\\')\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'self.PASS ="
  " color(\\\'32;1\\\').extend(\\\'PASS\\\').extend(color(0))\\r\\n\'\n\'self.FAIL ="
  " color(\\\'31;1\\\').extend(\\\'FAIL\\\').extend(color(0))\\r\\n\'\n\'\\r\\n\'\n\'class Tester"
  " {\\r\\n\'\n\'  method test(module) {\\r\\n\'\n\'    stats = []\\r\\n\'\n\'    for (_, cls) in"
  " module.classes() {\\r\\n\'\n\'      test_class_annot = _extract_test_class(cls)\\r\\n\'\n\'      if"
  " ~test_class_annot {\\r\\n\'\n\'        continue\\r\\n\'\n\'      }\\r\\n\'\n\'      setups ="
  " _extract_methods(cls, SetUp)\\r\\n\'\n\'      teardowns =  _extract_methods(cls,"
  " TearDown)\\r\\n\'\n\'      for (_, meth) in cls.all_methods() {\\r\\n\'\n\'        test_annot ="
  " _extract_test(meth)\\r\\n\'\n\'        if ~test_annot {\\r\\n\'\n\'          continue\\r\\n\'\n\'  "
  "      }\\r\\n\'\n\'        pass = True\\r\\n\'\n\'        err = None\\r\\n\'\n\'        try"
  " {\\r\\n\'\n\'          c = cls()\\r\\n\'\n\'          setups.each(s ->"
  " c.$get(s.name())())\\r\\n\'\n\'          c.$get(meth.name())()      \\r\\n\'\n\'         "
  " teardowns.each(t -> c.$get(t.name())())\\r\\n\'\n\'        } catch e {\\r\\n\'\n\'          pass ="
  " False\\r\\n\'\n\'          err = e\\r\\n\'\n\'        }\\r\\n\'\n\'        stats.append(cls, meth,"
  " pass, err)\\r\\n\'\n\'      }\\r\\n\'\n\'    }\\r\\n\'\n\'    failures = stats.where((_, _, pass,"
  " _) -> ~pass)\\r\\n\'\n\'    passes = stats.map((_, _, pass, _) -> pass).where(v ->"
  " v).len()\\r\\n\'\n\'    col = if passes == stats.len() then \\\'32;1\\\' else"
  " \\\'31;1\\\'\\r\\n\'\n\'    for (_, (cls, meth, _, err)) in failures {\\r\\n\'\n\'     "
  " io.println(\\\'Test \\\' + cls.name() + \\\'.\\\' + meth.name() + \\\'=\\\' + FAIL +"
  " \\\'\\\\n\\\')\\r\\n\'\n\'      io.println(err)\\r\\n\'\n\'    }\\r\\n\'\n\'   "
  " io.println(\\r\\n\'\n\'      \\\'Tests [\\\' + color(col) + str(passes) + \\\'/\\\' +"
  " str(stats.len()) + color(0) + \\\'] passed.\\\')\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method"
  " _extract_test_class(cls) {\\r\\n\'\n\'    for (_, annot) in cls.all_annotations() {\\r\\n\'\n\'    "
  "  if annot is TestClass {\\r\\n\'\n\'        return annot\\r\\n\'\n\'      }\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    return None\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method _extract_test(func)"
  " {\\r\\n\'\n\'    for (_, annot) in func.annotations {\\r\\n\'\n\'      if annot is Test"
  " {\\r\\n\'\n\'        return annot\\r\\n\'\n\'      }\\r\\n\'\n\'    }\\r\\n\'\n\'    return"
  " None\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method _extract_methods(test_cls, cls) {\\r\\n\'\n\'  "
  "  methods = []\\r\\n\'\n\'    for (_, meth) in test_cls.all_methods() {\\r\\n\'\n\'      for (_,"
  " annot) in meth.annotations {\\r\\n\'\n\'        if annot is cls {\\r\\n\'\n\'         "
  " methods.append(meth)\\r\\n\'\n\'        }\\r\\n\'\n\'      }\\r\\n\'\n\'    }\\r\\n\'\n\'    return"
  " methods\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n"};

const char *LIB_time[] = {
  "module time\nsource \'lib/time.zn\'\npush 1000 #0 25\nres self #0 0\nfld MILLIS_PER_SECOND #0"
  " 5\npush 1000 #1 23\nres self #1 0\nfld NANOS_PER_MILLI #1 5\npush Clock #14 13\nclln #14 18\npush"
  " #14 11\nres self #14 0\nfld clock #14 5\nexit 0\nclass Clock\nfield now_timestamp\nfield"
  " now_usec\n@new\npush #4 6\npnil #6 10\nres self #6 10\nfld now_timestamp #6 10\npnil #7 10\nres"
  " self #7 10\nfld now_usec #7 10\ntlen #6 10\neq -1 #6 10\nifn 10 #6 10\nres self #6 10\nfld"
  " now_timestamp #6 10\njmp 3 #7 21\npush __now_usec #7 27\nclln #7 37\nret #7 21\npush $anon_7_21 #7"
  " 21\nres self #7 10\nfld now_usec #7 10\njmp 30 #6 10\npeek #5 5\ntgte 1 #6 10\nifn 3 #6 10\npeek #6"
  " 10\ntget 0 #5 5\njmp 7 #6 10\njmp 5 #6 26\n@$anon_6_26\npush Timestamp #6 32\npush __now_timestamp"
  " #6 42\nclln #6 57\ncall #6 41\nret #6 26\nres $anon_6_26 #6 26\npush #6 10\nres self #6 10\nfld"
  " now_timestamp #6 10\npeek #5 5\ntgte 2 #7 10\nifn 3 #7 10\nres #7 10\ntget 1 #5 5\njmp 5 #7 10\njmp"
  " 3 #7 21\n@$anon_7_21\npush __now_usec #7 27\nclln #7 37\nret #7 21\nres $anon_7_21 #7 21\npush #7"
  " 10\nres self #7 10\nfld now_usec #7 10\nres self #5 2\nret #5 2\n@to_s\npush str #10 4\npush"
  " now_timestamp #10 8\nclln #10 21\ncall #10 7\nret #9 2\nendclass\nclass Timestamp\nfield"
  " year\nfield month\nfield day_of_month\nfield hour\nfield minute\nfield second\nfield"
  " millisecond\n@new\npush #45 6\npnil #46 12\nres self #46 12\nfld year #46 12\npnil #47 12\nres self"
  " #47 12\nfld month #47 12\npnil #48 12\nres self #48 12\nfld day_of_month #48 12\npnil #49 12\nres"
  " self #49 12\nfld hour #49 12\npnil #50 12\nres self #50 12\nfld minute #50 12\npnil #51 12\nres"
  " self #51 12\nfld second #51 12\npnil #52 12\nres self #52 12\nfld millisecond #52 12\ntlen #46"
  " 12\neq -1 #46 12\nifn 23 #46 12\nres self #46 12\nfld year #46 12\nrnil #47 12\npush #47 12\nres"
  " self #47 12\nfld month #47 12\nrnil #48 12\npush #48 12\nres self #48 12\nfld day_of_month #48"
  " 12\npush 0 #49 19\nres self #49 12\nfld hour #49 12\npush 0 #50 21\nres self #50 12\nfld minute #50"
  " 12\npush 0 #51 21\nres self #51 12\nfld second #51 12\npush 0 #52 26\nres self #52 12\nfld"
  " millisecond #52 12\njmp 55 #46 12\npeek #46 12\ntget 0 #46 5\npush #46 12\nres self #46 12\nfld"
  " year #46 12\npeek #47 12\ntget 1 #46 5\npush #47 12\nres self #47 12\nfld month #47 12\npeek #48"
  " 12\ntget 2 #46 5\npush #48 12\nres self #48 12\nfld day_of_month #48 12\npeek #46 5\ntgte 4 #49"
  " 12\nifn 3 #49 12\npeek #49 12\ntget 3 #46 5\njmp 1 #49 12\nres 0 #49 19\npush #49 12\nres self #49"
  " 12\nfld hour #49 12\npeek #46 5\ntgte 5 #50 12\nifn 3 #50 12\npeek #50 12\ntget 4 #46 5\njmp 1 #50"
  " 12\nres 0 #50 21\npush #50 12\nres self #50 12\nfld minute #50 12\npeek #46 5\ntgte 6 #51 12\nifn 3"
  " #51 12\npeek #51 12\ntget 5 #46 5\njmp 1 #51 12\nres 0 #51 21\npush #51 12\nres self #51 12\nfld"
  " second #51 12\npeek #46 5\ntgte 7 #52 12\nifn 3 #52 12\nres #52 12\ntget 6 #46 5\njmp 1 #52 12\nres"
  " 0 #52 26\npush #52 12\nres self #52 12\nfld millisecond #52 12\nres self #46 2\nret #46"
  " 2\n@to_s\npush cat #55 4\npush \'Z\' #59 27\npush millisecond #59 13\npush \'.\' #59 9\npush second"
  " #58 32\npush \':\' #58 28\npush minute #58 19\npush \':\' #58 15\npush hour #58 8\npush \'T\' #57"
  " 64\npush day_of_month #57 49\nres day_of_month #57 12\nlt 10 #57 27\nifn 2 #57 9\nres \'0\' #57"
  " 36\njmp 1 #57 9\nres \'\' #57 45\npush #55 12\npush \'-\' #56 50\npush month #56 42\nres month #56"
  " 12\nlt 10 #56 20\nifn 2 #56 9\nres \'0\' #56 29\njmp 1 #56 9\nres \'\' #56 38\npush #55 12\npush"
  " \'-\' #55 15\npush year #55 8\ntupl 16 #55 12\ncall #55 7\nret #54 2\n@to_micros\npush"
  " __timestamp_to_micros #63 4\npush millisecond #70 8\npush second #69 8\npush minute #68 8\npush"
  " hour #67 8\npush day_of_month #66 8\npush month #65 8\npush year #64 8\ntupl 7 #64 12\ncall #63"
  " 25\nret #62 2\n@to_date\npush Date #74 4\npush day_of_month #74 22\npush month #74 15\npush year"
  " #74 9\ntupl 3 #74 13\ncall #74 8\nret #73 2\n@__eq__\nlet other #77 12\npush #78 9\npush Timestamp"
  " #78 18\nis #78 15\nnot #78 7\nifn 2 #78 4\nrfls #79 13\nret #79 6\npush to_micros #81 4\nclln #81"
  " 13\npush #81 16\npush other #81 19\nclln to_micros #81 25\npush #81 16\neq #81 16\nret #77"
  " 2\n@__neq__\nlet other #84 12\npush #85 9\npush Timestamp #85 18\nis #85 15\nnot #85 7\nifn 2 #85"
  " 4\nrtru #86 13\nret #86 6\npush to_micros #88 4\nclln #88 13\npush #88 16\npush other #88 19\nclln"
  " to_micros #88 25\npush #88 16\nneq #88 16\nret #84 2\n@__cmp__\nlet other #91 17\npush #92 9\npush"
  " Timestamp #92 18\nis #92 15\nnot #92 7\nifn 2 #92 4\nres 1 #93 13\nret #93 6\npush cmp #95 11\npush"
  " other #95 28\nclln to_micros #95 34\npush #95 26\npush to_micros #95 15\nclln #95 24\npush #95"
  " 26\ntupl 2 #95 26\ncall #95 14\nret #95 4\nendclass\nclass Date\nfield year\nfield month\nfield"
  " day_of_month\n@new\npush #99 6\npnil #100 12\nres self #100 12\nfld year #100 12\npnil #100 24\nres"
  " self #100 24\nfld month #100 24\npnil #100 37\nres self #100 37\nfld day_of_month #100 37\ntlen"
  " #100 12\neq -1 #100 12\nifn 11 #100 12\nres self #100 12\nfld year #100 12\nrnil #100 24\npush #100"
  " 24\nres self #100 24\nfld month #100 24\nrnil #100 37\npush #100 37\nres self #100 37\nfld"
  " day_of_month #100 37\njmp 15 #100 12\npeek #100 12\ntget 0 #100 5\npush #100 12\nres self #100"
  " 12\nfld year #100 12\npeek #100 24\ntget 1 #100 5\npush #100 24\nres self #100 24\nfld month #100"
  " 24\nres #100 5\ntget 2 #100 5\npush #100 37\nres self #100 37\nfld day_of_month #100 37\nres self"
  " #100 2\nret #100 2\n@get_days_since_epoch\npush year #103 8\nres month #103 19\nlte 2 #103 28\nifn"
  " 2 #103 16\nres 1 #103 35\njmp 1 #103 16\nres 0 #103 42\npush #103 13\nsub #103 13\nset y #103"
  " 4\ngte 0 #104 19\nifn 2 #104 11\nres y #104 26\njmp 3 #104 11\npush y #104 33\npush 399 #104"
  " 37\nsub #104 35\ndiv 400 #104 44\nset era #104 4\npush y #105 10\nres era #105 14\nmult 400 #105"
  " 20\npush #105 12\nsub #105 12\nset yoe #105 4\npush 153 #106 11\npush month #106 18\nres month #106"
  " 30\ngt 2 #106 38\nifn 2 #106 27\nres -3 #106 46\njmp 1 #106 27\nres 9 #106 53\npush #106 24\nadd"
  " #106 24\npush #106 15\nmult #106 15\nadd 2 #106 59\ndiv 5 #106 64\nadd day_of_month #106 68\nsub 1"
  " #106 83\nset doy #106 4\nres yoe #107 10\nmult 365 #107 16\npush #107 20\nres yoe #107 22\ndiv 4"
  " #107 28\npush #107 20\nadd #107 20\npush #107 30\nres yoe #107 32\ndiv 100 #107 38\npush #107"
  " 30\nsub #107 30\nadd doy #107 44\nset doe #107 4\nres era #108 4\nmult 146097 #108 10\nadd doe #108"
  " 19\nsub 719468 #108 25\nret #102 2\n@to_s\npush cat #112 4\npush day_of_month #114 49\nres"
  " day_of_month #114 12\nlt 10 #114 27\nifn 2 #114 9\nres \'0\' #114 36\njmp 1 #114 9\nres \'\' #114"
  " 45\npush #112 12\npush \'-\' #113 50\npush month #113 42\nres month #113 12\nlt 10 #113 20\nifn 2"
  " #113 9\nres \'0\' #113 29\njmp 1 #113 9\nres \'\' #113 38\npush #112 12\npush \'-\' #112 15\npush"
  " year #112 8\ntupl 7 #112 12\ncall #112 7\nret #111 2\n@add_days\nlet days #117 18\npush"
  " date_from_days_since_epoch #118 4\npush get_days_since_epoch #118 31\nclln #118 51\nadd days #118"
  " 56\ncall #118 30\nret #117 2\n@add_months\nlet months #121 20\nres month #122 16\nadd months #122"
  " 24\nset new_month #122 4\npush Date #123 4\npush day_of_month #125 9\nres new_month #124 13\ngt 12"
  " #124 25\nifn 3 #124 10\nres new_month #124 33\nsub 12 #124 45\njmp 1 #124 10\nres new_month #124"
  " 53\npush #123 36\npush year #123 9\nres new_month #123 17\nsub 1 #123 29\ndiv 12 #123 34\npush #123"
  " 14\nadd #123 14\npush #123 36\ntupl 3 #123 36\ncall #123 8\nret #121 2\n@add_years\nlet years #128"
  " 19\npush Date #129 4\npush day_of_month #129 30\npush month #129 23\nres year #129 9\nadd years"
  " #129 16\npush #129 21\ntupl 3 #129 21\ncall #129 8\nret #128 2\n@to_timestamp\npush Timestamp #133"
  " 4\npush 0 #140 8\npush 0 #139 8\npush 0 #138 8\npush 0 #137 8\npush day_of_month #136 8\npush month"
  " #135 8\npush year #134 8\ntupl 7 #134 12\ncall #133 13\nret #132 2\n@__eq__\nlet other #143"
  " 12\npush #144 9\npush Date #144 18\nis #144 15\nnot #144 7\nifn 2 #144 4\nrfls #145 13\nret #145"
  " 6\npush year #147 5\nres other #147 13\ngtsh year #147 19\neq #147 10\nifn 9 #147 25\npush month"
  " #147 30\nres other #147 39\ngtsh month #147 45\neq #147 36\nifn 4 #147 52\npush day_of_month #147"
  " 57\nres other #147 73\ngtsh day_of_month #147 79\neq #147 70\nret #143 2\n@__neq__\nlet other #150"
  " 12\npush #151 9\npush Date #151 18\nis #151 15\nnot #151 7\nifn 2 #151 4\nrtru #152 13\nret #152"
  " 6\npush year #154 5\nres other #154 13\ngtsh year #154 19\nneq #154 10\nif 9 #154 25\npush month"
  " #154 29\nres other #154 38\ngtsh month #154 44\nneq #154 35\nif 4 #154 51\npush day_of_month #154"
  " 55\nres other #154 71\ngtsh day_of_month #154 77\nneq #154 68\nret #150 2\n@__cmp__\nlet other #157"
  " 17\npush #158 9\npush Date #158 18\nis #158 15\nnot #158 7\nifn 2 #158 4\nres 1 #159 13\nret #159"
  " 6\npush cmp #161 11\npush other #161 39\nclln get_days_since_epoch #161 45\npush #161 37\npush"
  " get_days_since_epoch #161 15\nclln #161 35\npush #161 37\ntupl 2 #161 37\ncall #161 14\nret #161"
  " 4\nendclass\nclass Timer\nfield start_usec\nfield timestamps\n@new\npush #165 6\npnil #166 8\nres"
  " self #166 8\nfld start_usec #166 8\npnil #166 20\nres self #166 20\nfld timestamps #166 20\nres"
  " #165 6\nres self #165 6\nret #165 6\n@reset\nres 0 #168 17\nset start_usec #168 4\nanew #169"
  " 17\nset timestamps #169 4\nret #167 2\n@start\npush reset #172 4\nclln #172 9\npush clock #173"
  " 17\nclln now_usec #173 23\nset start_usec #173 4\nret #171 2\n@mark\nlet mark_name #175 14\npush"
  " clock #176 14\nclln now_usec #176 20\nsub start_usec #176 33\nset elapsed #176 4\npush timestamps"
  " #177 4\npush elapsed #177 34\npush mark_name #177 23\ntupl 2 #177 32\ncall append #177 15\nres"
  " elapsed #178 11\nret #178 4\n@elapsed_usec\nres timestamps #181 11\nret #181"
  " 4\nendclass\n@current_timestamp\npush clock #17 2\nclln now_timestamp #17 8\nret #16"
  " 0\n@timestamp_from_micros\nlet micros #20 31\npush Timestamp #21 2\npush __micros_to_timestamp #21"
  " 12\nres micros #21 34\ncall #21 33\ncall #21 11\nret #20 0\n@date_from_timestamp\nlet timestamp #24"
  " 29\npush Date #25 2\nres timestamp #25 40\ngtsh day_of_month #25 50\nres timestamp #25 23\ngtsh"
  " month #25 33\nres timestamp #25 7\ngtsh year #25 17\ntupl 3 #25 21\ncall #25 6\nret #24"
  " 0\n@current_date\npush current_timestamp #29 2\nclln #29 19\npush #29 21\nclln to_date #29 22\nret"
  " #28 0\n@date_from_days_since_epoch\nlet days #32 36\nadd 719468 #33 13\nset z #33 2\ngte 0 #34"
  " 17\nifn 2 #34 9\nres z #34 24\njmp 3 #34 9\npush z #34 32\npush 146096 #34 36\nsub #34 34\ndiv"
  " 146097 #34 47\nset era #34 2\npush z #35 8\nres era #35 12\nmult 146097 #35 18\npush #35 10\nsub"
  " #35 10\nset doe #35 2\npush #36 9\nres doe #36 15\ndiv 1460 #36 21\npush #36 13\nsub #36 13\npush"
  " #36 26\nres doe #36 28\ndiv 36524 #36 34\npush #36 26\nadd #36 26\npush #36 40\nres doe #36 42\ndiv"
  " 146096 #36 48\npush #36 40\nsub #36 40\ndiv 365 #36 58\nset yoe #36 2\npush #37 6\nres era #37"
  " 12\nmult 400 #37 18\npush #37 10\nadd #37 10\nset y #37 2\npush doe #38 8\nres 365 #38 15\nmult yoe"
  " #38 21\npush #38 25\nres yoe #38 27\ndiv 4 #38 33\npush #38 25\nadd #38 25\npush #38 35\nres yoe"
  " #38 37\ndiv 100 #38 43\npush #38 35\nsub #38 35\npush #38 12\nsub #38 12\nset doy #38 2\nres 5 #39"
  " 8\nmult doy #39 12\nadd 2 #39 18\ndiv 153 #39 23\nset mp #39 2\npush doy #40 6\nres 153 #40"
  " 13\nmult mp #40 19\nadd 2 #40 24\ndiv 5 #40 29\npush #40 10\nsub #40 10\nadd 1 #40 33\nset d #40"
  " 2\npush mp #41 6\nres mp #41 15\nlt 10 #41 20\nifn 2 #41 12\nres 3 #41 28\njmp 1 #41 12\nres -9 #41"
  " 36\npush #41 9\nadd #41 9\nset m #41 2\npush Date #42 2\npush d #42 41\npush m #42 38\npush y #42"
  " 7\nres m #42 15\nlte 2 #42 20\nifn 2 #42 12\nres 1 #42 27\njmp 1 #42 12\nres 0 #42 34\npush #42"
  " 9\nadd #42 9\npush #42 36\ntupl 3 #42 36\ncall #42 6\nret #32 0\nbody\n\'self.MILLIS_PER_SECOND ="
  " 1000\\r\\n\'\n\'self.NANOS_PER_MILLI = 1000\\r\\n\'\n\'\\r\\n\'\n\'\\r\\n\'\n\'class Clock"
  " {\\r\\n\'\n\'  new(\\r\\n\'\n\'    field now_timestamp = () ->"
  " Timestamp(__now_timestamp()),\\r\\n\'\n\'    field now_usec = () -> __now_usec()\\r\\n\'\n\'  )"
  " {}\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    str(now_timestamp())\\r\\n\'\n\' "
  " }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'self.clock = Clock()\\r\\n\'\n\'\\r\\n\'\n\'function"
  " current_timestamp() {\\r\\n\'\n\' "
  " clock.now_timestamp()\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function timestamp_from_micros(micros)"
  " {\\r\\n\'\n\' "
  " Timestamp(__micros_to_timestamp(micros))\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function"
  " date_from_timestamp(timestamp) {\\r\\n\'\n\'  Date(timestamp.year, timestamp.month,"
  " timestamp.day_of_month)\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function current_date() {\\r\\n\'\n\' "
  " current_timestamp().to_date()\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'function"
  " date_from_days_since_epoch(days) {\\r\\n\'\n\'  z = days + 719468\\r\\n\'\n\'  era = (if z >= 0"
  " then z else (z - 146096)) / 146097\\r\\n\'\n\'  doe = z - era * 146097\\r\\n\'\n\'  yoe = (doe -"
  " doe / 1460 + doe / 36524 - doe / 146096) / 365\\r\\n\'\n\'  y = yoe + era * 400\\r\\n\'\n\'  doy ="
  " doe - (365 * yoe + yoe / 4 - yoe / 100)\\r\\n\'\n\'  mp = (5 * doy + 2) / 153\\r\\n\'\n\'  d = doy"
  " - (153 * mp + 2) / 5 + 1\\r\\n\'\n\'  m = mp + (if mp < 10 then 3 else -9)\\r\\n\'\n\'  Date(y +"
  " (if m <= 2 then 1 else 0), m, d)\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class Timestamp {\\r\\n\'\n\' "
  " new(field year,\\r\\n\'\n\'      field month,\\r\\n\'\n\'      field day_of_month,\\r\\n\'\n\'     "
  " field hour = 0,\\r\\n\'\n\'      field minute = 0,\\r\\n\'\n\'      field second = 0,\\r\\n\'\n\'  "
  "    field millisecond = 0) {}\\r\\n\'\n\'\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    cat(year,"
  " \\\'-\\\',\\r\\n\'\n\'        (if month < 10 then \\\'0\\\' else \\\'\\\'), month,"
  " \\\'-\\\',\\r\\n\'\n\'        (if day_of_month < 10 then \\\'0\\\' else \\\'\\\'), day_of_month,"
  " \\\'T\\\',\\r\\n\'\n\'        hour, \\\':\\\', minute, \\\':\\\', second,\\r\\n\'\n\'       "
  " \\\'.\\\', millisecond, \\\'Z\\\')\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method to_micros()"
  " {\\r\\n\'\n\'    __timestamp_to_micros(\\r\\n\'\n\'        year,\\r\\n\'\n\'       "
  " month,\\r\\n\'\n\'        day_of_month,\\r\\n\'\n\'        hour,\\r\\n\'\n\'       "
  " minute,\\r\\n\'\n\'        second,\\r\\n\'\n\'        millisecond)\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  method to_date() {\\r\\n\'\n\'    Date(year, month,"
  " day_of_month)\\r\\n\'\n\'  }\\r\\n\'\n\'  \\r\\n\'\n\'  method ==(other) {\\r\\n\'\n\'    if"
  " ~(other is Timestamp) {\\r\\n\'\n\'      return False\\r\\n\'\n\'    }\\r\\n\'\n\'    to_micros()"
  " == other.to_micros()\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method !=(other) {\\r\\n\'\n\'    if"
  " ~(other is Timestamp) {\\r\\n\'\n\'      return True\\r\\n\'\n\'    }\\r\\n\'\n\'    to_micros() !="
  " other.to_micros()\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method __cmp__(other) {\\r\\n\'\n\'    if"
  " ~(other is Timestamp) {\\r\\n\'\n\'      return 1\\r\\n\'\n\'    }\\r\\n\'\n\'    return"
  " cmp(to_micros(), other.to_micros())\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class Date"
  " {\\r\\n\'\n\'  new(field year, field month, field day_of_month) {}\\r\\n\'\n\'\\r\\n\'\n\'  method"
  " get_days_since_epoch() {\\r\\n\'\n\'    y = year - (if month <= 2 then 1 else 0)\\r\\n\'\n\'    era"
  " = (if y >= 0 then y else y - 399) / 400\\r\\n\'\n\'    yoe = y - era * 400\\r\\n\'\n\'    doy ="
  " (153 * (month + (if month > 2 then -3 else 9)) + 2) / 5 + day_of_month - 1\\r\\n\'\n\'    doe = yoe"
  " * 365 + yoe / 4 - yoe / 100 + doy\\r\\n\'\n\'    era * 146097 + doe - 719468\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  method to_s() {\\r\\n\'\n\'    cat(year, \\\'-\\\',\\r\\n\'\n\'       "
  " (if month < 10 then \\\'0\\\' else \\\'\\\'), month, \\\'-\\\',\\r\\n\'\n\'        (if day_of_month"
  " < 10 then \\\'0\\\' else \\\'\\\'), day_of_month)\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method"
  " add_days(days) {\\r\\n\'\n\'    date_from_days_since_epoch(get_days_since_epoch() +"
  " days)\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method add_months(months) {\\r\\n\'\n\'    new_month"
  " = month + months\\r\\n\'\n\'    Date(year + (new_month - 1) / 12,\\r\\n\'\n\'         (if new_month"
  " > 12 then new_month - 12 else new_month),\\r\\n\'\n\'         day_of_month)\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  method add_years(years) {\\r\\n\'\n\'    Date(year + years, month,"
  " day_of_month)\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method to_timestamp() {\\r\\n\'\n\'   "
  " Timestamp(\\r\\n\'\n\'        year,\\r\\n\'\n\'        month,\\r\\n\'\n\'       "
  " day_of_month,\\r\\n\'\n\'        0,  ; hour \\r\\n\'\n\'        0,  ; minute\\r\\n\'\n\'        0, "
  " ; second\\r\\n\'\n\'        0)  ; millisecond\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method"
  " ==(other) {\\r\\n\'\n\'    if ~(other is Date) {\\r\\n\'\n\'      return False\\r\\n\'\n\'   "
  " }\\r\\n\'\n\'    (year == other.year) and (month == other.month) and (day_of_month =="
  " other.day_of_month)\\r\\n\'\n\'  }\\r\\n\'\n\'\\r\\n\'\n\'  method !=(other) {\\r\\n\'\n\'    if"
  " ~(other is Date) {\\r\\n\'\n\'      return True\\r\\n\'\n\'    }\\r\\n\'\n\'    (year !="
  " other.year) or (month != other.month) or (day_of_month != other.day_of_month)\\r\\n\'\n\' "
  " }\\r\\n\'\n\'\\r\\n\'\n\'  method __cmp__(other) {\\r\\n\'\n\'    if ~(other is Date) {\\r\\n\'\n\'"
  "      return 1\\r\\n\'\n\'    }\\r\\n\'\n\'    return cmp(get_days_since_epoch(),"
  " other.get_days_since_epoch())\\r\\n\'\n\'  }\\r\\n\'\n\'}\\r\\n\'\n\'\\r\\n\'\n\'class Timer"
  " {\\r\\n\'\n\'  field start_usec, timestamps\\r\\n\'\n\'  method reset() {\\r\\n\'\n\'    start_usec"
  " = 0\\r\\n\'\n\'    timestamps = []\\r\\n\'\n\'  }\\r\\n\'\n\'  method start() {\\r\\n\'\n\'   "
  " reset()\\r\\n\'\n\'    start_usec = clock.now_usec()\\r\\n\'\n\'  }\\r\\n\'\n\'  method"
  " mark(mark_name) {\\r\\n\'\n\'    elapsed = clock.now_usec() - start_usec\\r\\n\'\n\'   "
  " timestamps.append((mark_name, elapsed))\\r\\n\'\n\'    return elapsed\\r\\n\'\n\'  }\\r\\n\'\n\' "
  " method elapsed_usec() {\\r\\n\'\n\'    return timestamps\\r\\n\'\n\'  }\\r\\n\'\n\'}\'\n"};

#endif /* ZINNIA_LIB_LIB_H_ */
